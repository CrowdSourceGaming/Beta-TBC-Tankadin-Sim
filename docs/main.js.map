{"version":3,"sources":["./src/app/character/abilities/attack.ts","./src/app/character/abilities/holy-shield.ts","./src/app/gem-socket.ts","./src/app/sim/sim/sim.component.ts","./src/app/sim/sim/sim.component.html","./src/app/character-item-display/character-item-display.component.html","./src/app/character-item-display/character-item-display.component.ts","./src/app/item/enchant.service.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/new-enchant/new-enchant.component.ts","./src/app/new-enchant/new-enchant.component.html","./src/app/gear/gear.service.ts","./src/app/gear-selector/gear-selector.component.ts","./src/app/gear-selector/gear-selector.component.html","./src/app/sim/simulation-web-worker.worker.ts","./src/app/sim/sim-routing.module.ts","./src/app/new-spec/new-spec.component.ts","./src/app/new-spec/new-spec.component.html","./src/app/item/gem.service.ts","./src/app/character/abilities/consecration.ts","./src/app/stats-totals/stats-totals.component.ts","./src/app/stats-totals/stats-totals.component.html","./src/app/character/gearslot.ts","./src/app/sim/bar-chart/bar-chart.component.ts","./src/app/sim/bar-chart/bar-chart.component.html","./src/app/enchants/enchants.component.ts","./src/app/enchants/enchants.component.html","./src/app/sim/sim.module.ts","./src/app/character/character.ts","./src/app/humanize.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/sim/boss-abilities/boss-attack.ts","./src/app/item/item-stats.ts","./src/app/gear-alteration/gear-alteration.component.ts","./src/app/gear-alteration/gear-alteration.component.html","./src/app/character-config/character-config.component.ts","./src/app/character-config/character-config.component.html","./src/app/sim/combat.service.ts","./src/app/app.module.ts","./src/app/character/spec.ts","./src/app/sim/sim-results/sim-results.component.ts","./src/app/sim/sim-results/sim-results.component.html","./src/app/sim/creature.ts","./src/app/shared/magic-school.ts","./src/app/database.service.ts","./src/app/shared/shared-data.service.ts","./src/app/references/references.component.ts","./src/app/references/references.component.html","./src/app/character/races/race.ts","./src/app/character/abilities/seal-of-vengeance.ts","./src/app/shared/attack-table.ts","./src/app/current-gems/current-gems.component.html","./src/app/current-gems/current-gems.component.ts","./src/app/save.service.ts","./src/app/new-gear/new-gear.component.ts","./src/app/new-gear/new-gear.component.html","./src/app/gear-slot/gear-slot.component.ts","./src/app/gear-slot/gear-slot.component.html","./src/app/character/abilities/judgement.ts","./src/app/controls/controls.component.ts","./src/app/controls/controls.component.html","./src/app/app-routing.module.ts","./src/app/blizzard-api.service.ts","./src/app/item/item.ts","./src/app/item/gem.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAA8D;AACL;AAIlD,MAAM,MAAM;IAOjB;QAFA,eAAU,GAAW,CAAC,CAAC;QAGrB,IAAI,CAAC,WAAW,GAAG,sEAAU,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,QAAQ;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,KAAK,CAAC,UAA2B,EAAE,QAAmB,EAAE,QAAkB;QACxE,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,UAAU,IAAI,UAAU,KAAK,2EAAe,CAAC,IAAI,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,EAAE;YACrI,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC;YACjF,IAAI,UAAU,KAAK,2EAAe,CAAC,QAAQ,EAAE;gBAC3C,MAAM,GAAG,MAAM,GAAG,IAAI;aACvB;iBAAM,IAAI,UAAU,KAAK,2EAAe,CAAC,IAAI,EAAE;gBAC9C,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;aACrB;SACF;QACD,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAChC,UAAU,EAAE,sEAAU,CAAC,QAAQ;YAC/B,YAAY,EAAE,IAAI,CAAC,IAAI;YACvB,OAAO,EAAE,UAAU;SACpB;IACH,CAAC;IACD,MAAM,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QACjE,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,CAAC,QAAmB,EAAE,QAAkB,EAAG,WAAmB;IAErE,CAAC;CACF;AAID,MAAM,UAAU,GAAG,CAAC,SAAiB,EAAE,SAAiB,EAAE,QAA8B,EAAU,EAAE;IAClG,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IACtF,MAAM,cAAc,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC3F,OAAO,SAAS,GAAG,cAAc;AACnC,CAAC;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAA8D;AACL;AAIlD,MAAM,UAAU;IAQrB;QACE,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,sEAAU,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,KAAK;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,UAAU;IACjC,CAAC;IAED,KAAK,CAAC,UAA2B,EAAE,QAAmB,EAAE,QAAkB,EAAE,WAAmB;IAC/F,CAAC;IACD,MAAM,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QACjE,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,IAAI,WAAW,EAAE;YAC1F,IAAI,OAAO,GAAG,CAAC;YACf,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC;YACvD,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,GAAG,KAAK,EAAE;YAC9E,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QAClE,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,WAAW,EAAE;YACjF,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;SACvC;IACH,CAAC;IAED,UAAU,CAAC,UAA2B,EAAE,QAAkB,EAAE,QAAmB,EAAE,WAAmB;QAClG,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,EAAE;YAC9G,MAAM,YAAY,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,GAAG,CAAC,CAAC;YACtH,OAAO;gBACL,YAAY,EAAE,YAAY;gBAC1B,UAAU,EAAE,sEAAU,CAAC,IAAI;gBAC3B,YAAY,EAAE,IAAI,CAAC,IAAI;aACxB;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;AClDoE;AACxB;AAK7C,IAAa,SAAS,GAAtB,MAAa,SAAS;IAIpB,YAAY,KAAqB;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAClB,CAAC;CACF;AAPiB;IAAf,+EAAY,EAAE;;wCAAuB;AACtB;IAAf,+EAAY,EAAE;;sCAAgB;AAFpB,SAAS;IADrB,oEAAS;;GACG,SAAS,CAQrB;AARqB;;;;;;;;;;;;;;;;;;;;;;;;;ACOtB,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;AAQ1B,MAAM,YAAY;IACvB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAGrD,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC;IAC7C,CAAC;;wEATU,YAAY;4FAAZ,YAAY;QCrBzB,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,4EAA+E;QAAlB,oIAAS,WAAO,IAAC;QAAC,oEAAS;QAAA,4DAAS;QACnG,4DAAM;QACN,yEACE;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,6EAAmC;QACrC,4DAAM;QACR,4DAAM;QAEN,4EAA+B;;;;;;;;;;;;;;;;;;;;;;ICX7B,oEACE;IAAA,oEAAiE;IACnE,4DAAI;;;IAFqB,kHAAoC;IACzC,0DAAuC;IAAvC,gKAAuC;;ACOtD,MAAM,6BAA6B;IAExC,gBAAgB,CAAC;IAQjB,QAAQ;IACR,CAAC;;0GAXU,6BAA6B;6GAA7B,6BAA6B;QDRxC,qHAEI;;QAFA,mFAAmB;;;;;;;;;;;;;;;;;;;;;AECc;;;AAOhC,MAAM,cAAc;IAIzB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAFpD,aAAQ,GAA+B,IAAI,oDAAe,CAAY,EAAE,CAAC,CAAC;QAGxE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEK,IAAI;;YACR,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAC/D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,EAAE;QAC1B,CAAC;KAAA;IAEK,UAAU,CAAC,OAAgB;;YAC/B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAC/D,UAAU,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACvE,CAAC;KAAA;IAGa,iBAAiB;;;YAC7B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;;gBAChE,KAA2B,+EAAU,CAAC,KAAK,EAAE;oBAAlC,MAAM,MAAM;oBACrB,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC/C,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,CAAC;oBAEjC,QAAQ,aAAa,EAAE;wBACrB,KAAK,QAAQ,CAAC,CAAC;4BACb,MAAM,EAAE,WAAW,EAAE,YAAY,GAAG,GAAG,MAAgE,CAAC;4BACxG,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BACtC,MAAM;yBACP;wBACD,KAAK,SAAS,CAAC,CAAC;4BACd,MAAM,EAAE,WAAW,EAAE,YAAY,GAAG,GAAG,MAAiE,CAAC;4BACzG,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,YAAY,CAAC,GAAG,CAAC,CAAC;4BACnF,kBAAkB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;4BACzC,MAAM;yBACP;wBACD,KAAK,QAAQ,CAAC,CAAC;4BACb,MAAM,EAAE,WAAW,EAAE,GAAG,MAAgE,CAAC;4BACzF,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC;4BAClF,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;4BACpC,MAAM;yBACP;qBACF;oBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBACxC;;;;;;;;;;KACF;;4EA/CU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE;QAChB,QAAQ,EAAE,kCAAkC;QAC5C,YAAY,EAAE,kCAAkC;KACjD;CACF;AAED;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACZ5D,MAAM,cAAc;IAKzB;QAFA,iBAAY,GAAW,EAAE;IAET,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EARU,cAAc;8FAAd,cAAc;QCP3B,yEACE;QAAA,yEACE;QAAA,2EAAW;QAAA,gEAAK;QAAA,4DAAW;QAC7B,4DAAM;QACN,yEACE;QAAA,uDACF;QAAA,4DAAM;QACR,4DAAM;;QAFF,0DACF;QADE,4FACF;;;;;;;;;;;;;;ACLF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AACzB;AACvB;AAGY;;;;;;;;;;;;ICapD,iFACE;IAAA,uDACF;;IAAA,4DAAa;;;IAFkC,0EAAc;IAC3D,0DACF;IADE,oJACF;;;;IAcE,qEACE;IAAA,qEAAI;IAAA,uDAAkB;;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,6EAAsF;IAA1B,4VAAyB;IAAC,iEAAM;IAAA,4DAAS;IACzG,4DAAK;IACP,4DAAK;;;;IAJC,0DAAkB;IAAlB,wIAAkB;IAClB,0DAAsB;IAAtB,6FAAsB;;;IAgB5B,iFAAyD;IAAA,uDAAkB;;IAAA,4DAAa;;;IAA7C,yEAAa;IAAC,0DAAkB;IAAlB,wIAAkB;;ADxChF,MAAM,mBAAmB;IAc9B,YACS,SAA4C,EACnB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QAd3C,eAAU,GAAG,MAAM,CAAC,MAAM,CAAC,8DAAa,CAAC,CAAC,IAAI,EAAE,CAAC;QAEjD,YAAO,GAAY,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,6DAAS,CAAC,IAAI,EAAE;QAC/E,kBAAa,GAAG,MAAM,CAAC,IAAI,CAAC,6DAAS,CAAC,CAAC,IAAI,EAAE,CAAC;QAI9C,2BAAsB,GAAG,IAAI,wDAAS,CAAC;YACrC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACpC,CAAC;QAKA,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC,IAAI,CAAC,GAAsB,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC/D,IAAG,GAAG,IAAI,KAAK,EAAC;YACd,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAmC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;YAC1E,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,CAAC,EAAE,EAAE;YAClB,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,EAAE,EAAE;YACpB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IAED,UAAU,CAAC,GAAW;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAiC,CAAC,CAAC;IAC/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC/E,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAChG,CAAC,CAAC;IACL,CAAC;IAED,UAAU;;QACR,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,SAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,0CAAE,KAAK;YAC/D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAExC;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAGO,iBAAiB;QACvB,OAAO,CAAC,OAAwB,EAAiC,EAAE;YACjE,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,sCAAsC,CAAC;YAChE,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;aACjD;QACH,CAAC;IACH,CAAC;;sFA7EU,mBAAmB,0MAgBpB,wEAAe;mGAhBd,mBAAmB;QCbhC,wEAAqB;QAAA,sEAAW;QAAA,4DAAK;QACrC,yEACE;QAAA,0EACE;QAAA,sEACE;QAAA,iFACE;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,sEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,sEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,uEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,iFACE;QAAA,+HAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,uEACE;QAAA,yEACE;QAAA,yEACE;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,iEAAS;QACX,4DAAQ;QACR,yEACE;QAAA,+GAKK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAO;QAEP,2EACE;QADyC,+IAAY,wBAAoB,SAAE,KAAK,IAAC;QACjF,0EACE;QAAA,uEACE;QAAA,sFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,kFACE;QAAA,+HAAwF;QAC1F,4DAAa;QACf,4DAAiB;QACjB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,8EAAyC;QAAA,+DAAG;QAAA,4DAAS;QACvD,4DAAM;QACR,4DAAO;QACP,2EACE;QAAA,8EAA+D;QAAtB,4IAAS,eAAW,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC9E,8EAAiF;QAAvC,4IAAS,gBAAY,IAAC;QAAiB,oEAAQ;QAAA,4DAAS;QACpG,4DAAM;QACR,4DAAM;;QAlEE,0DAA0B;QAA1B,uFAA0B;QAiBK,2DAAgB;QAAhB,sFAAgB;QAgBvB,2DAAkB;QAAlB,wFAAkB;QAY1C,0DAAoC;QAApC,iGAAoC;QAMJ,0DAAa;QAAb,mFAAa;;;;;;;;;;;;;;;;;;;;;;;;;ACnDD;AAGb;AAIkB;;;;AASlD,MAAM,WAAW;IAKtB,YAAoB,eAAgC,EAAU,iBAAoC;QAA9E,oBAAe,GAAf,eAAe,CAAiB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFlG,gBAAW,GAA4B,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QAGrE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEK,cAAc,CAAC,IAAU,EAAE,QAAmB;;YAClD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc;YAC5D,OAAO,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACxE,CAAC;KAAA;IAED,eAAe,CAAC,QAAgC;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK;QAC1C,WAAW,CAAC,OAAO,CAAC,CAAC,IAAU,EAAE,EAAE;YACjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC/B,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;oBACxC,IAAI,gBAAgB,CAAC,GAAG,IAAI,gBAAgB,CAAC,iBAAiB,IAAI,gBAAgB,CAAC,WAAW,EAAE;wBAC9F,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,iBAA+C,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,gBAAgB,CAAC,WAAW,EAAE;4BAC1I,MAAM,CAAC,GAAG,GAAG,gBAAgB,CAAC,GAAG;yBAClC;6BAAM,IAAI,MAAM,CAAC,KAAK,KAAK,yDAAc,CAAC,IAAI,EAAE;4BAC/C,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW;yBAClC;6BAAM;4BACL,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO;yBAC9B;qBACF;yBAAM,IAAI,MAAM,CAAC,KAAK,KAAK,yDAAc,CAAC,IAAI,EAAE;wBAC/C,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW;qBAClC;yBAAM;wBACL,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO;qBAC9B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7C,CAAC;IAID,aAAa;IAIC,YAAY;;YACxB,IAAI;gBACF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAChC;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;gBACvC,OAAO,GAAG,CAAC;aACZ;QACH,CAAC;KAAA;IAEa,cAAc;;YAC1B,MAAM,KAAK,GAAW,EAAE,CAAC;YACzB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc;YAC5D,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;YAC5C,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC7B,KAAK,CAAC,IAAI,CAAC,8EAAW,CAAC,QAAQ,EAAE,+CAAI,CAAC,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;KAAA;IAEa,iBAAiB;;;YAC7B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;;gBAC7D,KAA2B,+EAAU,CAAC,KAAK,EAAE;oBAAlC,MAAM,MAAM;oBACrB,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAClD,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,CAAC;oBAEjC,QAAQ,aAAa,EAAE;wBACrB,KAAK,QAAQ,CAAC,CAAC;4BACb,MAAM,EAAE,WAAW,EAAE,YAAY,GAAG,GAAG,MAA6D,CAAC;4BACrG,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BACtC,MAAM;yBACP;wBACD,KAAK,SAAS,CAAC,CAAC;4BACd,MAAM,EAAE,WAAW,EAAE,YAAY,GAAG,GAAG,MAA8D,CAAC;4BACtG,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,YAAY,CAAC,GAAG,CAAC,CAAC;4BACnF,kBAAkB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;4BACzC,MAAM;yBACP;wBACD,KAAK,QAAQ,CAAC,CAAC;4BACb,MAAM,EAAE,WAAW,EAAE,GAAG,MAA6D,CAAC;4BACtF,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC;4BAClF,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;4BACpC,MAAM;yBACP;qBACF;oBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC3C;;;;;;;;;;KACF;;sEA5FU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACY;AAEX;AAEsB;AAEN;;;;;;;;;;;ICN5D,sFAAmD;IAAA,+DAAI;IAAA,4DAAkB;;;IACzE,2EAAmC;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIlD,sFAAmD;IAAA,+DAAI;IAAA,4DAAkB;;;IACzE,2EAAkC;IAAA,uDAAkD;IAAA,4DAAW;;;;IAA7D,0DAAkD;IAAlD,iIAAkD;;;IAGpF,sFAAmD;IAAA,8DAAG;IAAA,4DAAkB;;;IACxE,2EAAkC;IAAA,uDAAoD;IAAA,4DAAW;;;;IAA/D,0DAAoD;IAApD,mIAAoD;;;IAGtF,sFAAmD;IAAA,8DAAG;IAAA,4DAAkB;;;IACxE,2EAAkC;IAAA,uDAAmD;IAAA,4DAAW;;;;IAA9D,0DAAmD;IAAnD,kIAAmD;;;IAGrF,sFAAmD;IAAA,8DAAG;IAAA,4DAAkB;;;IACxE,2EAAkC;IAAA,uDAAkD;IAAA,4DAAW;;;;IAA7D,0DAAkD;IAAlD,iIAAkD;;;IAGpF,sFAAmD;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3E,2EAAkC;IAAA,uDAAiD;IAAA,4DAAW;;;;IAA5D,0DAAiD;IAAjD,kIAAiD;;;IAInF,sFAAmD;IAAA,gEAAK;IAAA,4DAAkB;;;IAC1E,2EAAkC;IAAA,uDAAgD;IAAA,4DAAW;;;;IAA3D,0DAAgD;IAAhD,iIAAgD;;;IAGlF,sFAAmD;IAAA,mEAAQ;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACzF,2EAAkC;IAAA,uDAAwD;IAAA,4DAAW;;;;IAAnE,0DAAwD;IAAxD,yIAAwD;;;IAG1F,sFAAmD;IAAA,iEAAM;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACvF,2EAAkC;IAAA,uDAAsD;IAAA,4DAAW;;;;IAAjE,0DAAsD;IAAtD,uIAAsD;;;IAGxF,sFAAmD;IAAA,iEAAM;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACvF,2EAAkC;IAAA,uDAAsD;IAAA,4DAAW;;;;IAAjE,0DAAsD;IAAtD,uIAAsD;;;IAGxF,sFAAmD;IAAA,iEAAM;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACvF,2EAAkC;IAAA,uDAAsD;IAAA,4DAAW;;;;IAAjE,0DAAsD;IAAtD,uIAAsD;;;IAGxF,sFAAmD;IAAA,iEAAM;IAAA,gEAAM;IAAA,iEAAK;IAAA,4DAAkB;;;IACtF,2EAAkC;IAAA,uDAAqD;IAAA,4DAAW;;;;IAAhE,0DAAqD;IAArD,sIAAqD;;;IAIvF,sFAAmD;IAAA,+DAAI;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACrF,2EAAkC;IAAA,uDAAyD;IAAA,4DAAW;;;;IAApE,0DAAyD;IAAzD,0IAAyD;;;IAG3F,sFAAmD;IAAA,gEAAK;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IACtF,2EAAkC;IAAA,uDAA0D;IAAA,4DAAW;;;;IAArE,0DAA0D;IAA1D,2IAA0D;;;IAG5F,sFAAmD;IAAA,qEAAU;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IAC3F,2EAAkC;IAAA,uDAA0D;IAAA,4DAAW;;;;IAArE,0DAA0D;IAA1D,2IAA0D;;;IAG5F,sFAAmD;IAAA,uEAAa;IAAA,4DAAkB;;;IAClF,2EAAkC;IAAA,uDAAsD;IAAA,4DAAW;;;;IAAjE,0DAAsD;IAAtD,uIAAsD;;;IAGxF,sFAAmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,2EAAkC;IAAA,uDAAoD;IAAA,4DAAW;;;;IAA/D,0DAAoD;IAApD,qIAAoD;;;IAGtF,sFAAmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,2EAAkC;IAAA,uDAAoD;IAAA,4DAAW;;;;IAA/D,0DAAoD;IAApD,qIAAoD;;;IAItF,sFAAmD;IAAA,qEAAU;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IAC3F,2EAAkC;IAAA,uDAAyD;IAAA,4DAAW;;;;IAApE,0DAAyD;IAAzD,0IAAyD;;;IAG3F,sFAAmD;IAAA,sEAAW;IAAA,gEAAM;IAAA,kEAAM;IAAA,4DAAkB;;;IAC5F,2EAAkC;IAAA,uDAA0D;IAAA,4DAAW;;;;IAArE,0DAA0D;IAA1D,2IAA0D;;;IAG5F,sFAAmD;IAAA,iEAAM;IAAA,gEAAM;IAAA,iEAAK;IAAA,4DAAkB;;;IACtF,2EAAkC;IAAA,uDAAsD;IAAA,4DAAW;;;;IAAjE,0DAAsD;IAAtD,uIAAsD;;;IAIxF,iFAAyE;;;;;IACzE,2EACE;IAAA,wEACwC;IAD6D,wWAA2B;IACxF,4DAAI;IAC9C,4DAAW;;;;IADP,0DAAqC;IAArC,gHAAqC;IADlB,gNAA+E;;;IAKxG,4EAAqE;;;IACrE,qEAAmE;;ADlFhE,MAAM,qBAAqB;IAchC,YAAoB,iBAAoC,EAAU,WAAwB,EAAS,MAAiB,EAAU,QAAqB;QAA/H,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAa;QATnJ,qBAAgB,GAAa,EAAE,CAAC;QAIhC,0BAAqB,GAA6B,IAAI,0EAAkB,EAAQ,CAAC;QAEjF,kBAAa,GAAG,8DAAa,CAAC;QAC9B,gBAAW,GAAW,EAAE,CAAC;IAE8H,CAAC;IAExJ,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;QACpF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE;YACtD,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;;gBAC9C,IAAI,IAAI,CAAC,QAAQ,KAAK,6DAAS,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,6DAAS,CAAC,SAAS,EAAE;oBAClF,OAAO,WAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,6DAAS,CAAC,SAAS,aAAK,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,6DAAS,CAAC,SAAS,EAAC;iBACtG;qBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,6DAAS,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,KAAK,6DAAS,CAAC,UAAU,EAAE;oBAC3F,OAAO,WAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,6DAAS,CAAC,UAAU,aAAK,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,6DAAS,CAAC,UAAU,EAAC;iBACxG;qBAAM;oBACL,aAAO,IAAI,CAAC,SAAS,0CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAC;iBAC/C;YACH,CAAC,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QACrD,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG;YACtB,QAAQ;YACR,MAAM,EAAE,SAAS,8DAAa,CAAC,OAAO,EAAE,EAAE,SAAS,8DAAa,CAAC,SAAS,EAAE;YAC5E,SAAS,8DAAa,CAAC,QAAQ,EAAE,EAAE,SAAS,8DAAa,CAAC,OAAO,EAAE,EAAE,SAAS,8DAAa,CAAC,MAAM,EAAE;YACpG,UAAU;YACV,SAAS,8DAAa,CAAC,KAAK,EAAE,EAAE,SAAS,8DAAa,CAAC,aAAa,EAAE,EAAE,SAAS,8DAAa,CAAC,WAAW,EAAE;YAC5G,SAAS,8DAAa,CAAC,WAAW,EAAE,EAAE,SAAS,8DAAa,CAAC,WAAW,EAAE,EAAE,SAAS,8DAAa,CAAC,UAAU,EAAE;YAC/G,OAAO;YACP,SAAS,8DAAa,CAAC,cAAc,EAAE,EAAE,SAAS,8DAAa,CAAC,eAAe,EAAE,EAAE,SAAS,8DAAa,CAAC,WAAW,EAAE;YACvH,OAAO;YACP,SAAS,8DAAa,CAAC,cAAc,EAAE,EAAE,SAAS,8DAAa,CAAC,eAAe,EAAE;YACjF,SAAS,8DAAa,CAAC,eAAe,EAAE;SACzC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,6DAAS,CAAC,QAAQ,EAAE;YACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,8DAAa,CAAC,WAAW,EAAE,EAAE,SAAS,8DAAa,CAAC,SAAS,EAAE,EAAE,SAAS,8DAAa,CAAC,SAAS,EAAE,CAAC,CAAC;SAC9I;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC;IAEtC,CAAC;IACD,eAAe;QACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,UAAU,CAAC,KAAW;QACpB,IAAI,KAAK,EAAE;YACT,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,KAAK,CAAC,MAAM,EAAE;gBAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAA8B,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE;wBAC3E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,KAAK,CAAC,IAAI,uBAAuB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;wBAClG,WAAW,GAAG,KAAK,CAAC;wBACpB,OAAO;qBACR;gBACH,CAAC,CAAC;aACH;YACD,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;gBAC3C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACvD;SACF;IACH,CAAC;IAED,gBAAgB,CAAC,IAAU,EAAE,IAAmB;QAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YACnD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;SAClC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAa,EAAE,EAAE;YAClD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,GAAG,CAAC,IAAS,EAAE,IAAY,EAAO,EAAE;YAChF,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;iBACnB,MAAM,CAAC,CAAC,WAAgB,EAAE,GAAW,EAAE,EAAE;gBACxC,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACpD,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC;QACD,IAAI,CAAC,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9C,CAAC;;0FAjGU,qBAAqB;qGAArB,qBAAqB;kEAMrB,8DAAO;;;;;QCxBpB,yEACE;QAAA,+EACE;QAAA,2EACE;QAAA,yIAAyE;QACzE,2HAA6D;QAC/D,qEAAe;QAEf,2EACE;QAAA,yIAAyE;QACzE,2HAA+F;QACjG,qEAAe;QACf,2EACE;QAAA,yIAAwE;QACxE,6HAAiG;QACnG,qEAAe;QACf,4EACE;QAAA,2IAAwE;QACxE,6HAAgG;QAClG,qEAAe;QACf,4EACE;QAAA,2IAAwE;QACxE,6HAA+F;QACjG,qEAAe;QACf,4EACE;QAAA,2IAA2E;QAC3E,6HAA8F;QAChG,qEAAe;QAEf,4EACE;QAAA,2IAA0E;QAC1E,6HAA6F;QAC/F,qEAAe;QACf,4EACE;QAAA,2IAAyF;QACzF,6HAAqG;QACvG,qEAAe;QACf,4EACE;QAAA,2IAAuF;QACvF,6HAAmG;QACrG,qEAAe;QACf,4EACE;QAAA,2IAAuF;QACvF,6HAAmG;QACrG,qEAAe;QACf,4EACE;QAAA,2IAAuF;QACvF,6HAAmG;QACrG,qEAAe;QACf,4EACE;QAAA,2IAAsF;QACtF,6HAAkG;QACpG,qEAAe;QAEf,4EACE;QAAA,2IAAqF;QACrF,6HAAsG;QACxG,qEAAe;QACf,4EACE;QAAA,2IAAsF;QACtF,6HAAuG;QACzG,qEAAe;QACf,4EACE;QAAA,2IAA2F;QAC3F,6HAAuG;QACzG,qEAAe;QACf,4EACE;QAAA,2IAAkF;QAClF,6HAAmG;QACrG,qEAAe;QACf,4EACE;QAAA,2IAA+E;QAC/E,6HAAiG;QACnG,qEAAe;QACf,4EACE;QAAA,2IAA+E;QAC/E,6HAAiG;QACnG,qEAAe;QAEf,4EACE;QAAA,2IAA2F;QAC3F,6HAAsG;QACxG,qEAAe;QACf,4EACE;QAAA,2IAA4F;QAC5F,6HAAuG;QACzG,qEAAe;QACf,4EACE;QAAA,2IAAsF;QACtF,6HAAmG;QACrG,qEAAe;QAEf,4EACE;QAAA,2IAAyE;QACzE,6HAGW;QACb,qEAAe;QAEf,yIAAqE;QACrE,2HAAmE;QAErE,4DAAY;QACZ,uEACE;QAAA,2EACE;QAAA,8EAAwF;QAA3D,8IAAS,mBAAe,IAAC;QAAkC,mFAAuB;QAAA,4DAAS;QAC1H,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA3GO,0DAAoC;QAApC,iGAAoC;QAM/B,0DAA8C;QAA9C,6HAA8C;QAI9C,0DAAgD;QAAhD,+HAAgD;QAIhD,0DAA+C;QAA/C,8HAA+C;QAI/C,0DAA8C;QAA9C,6HAA8C;QAI9C,0DAA6C;QAA7C,4HAA6C;QAK7C,0DAA4C;QAA5C,2HAA4C;QAI5C,0DAAoD;QAApD,mIAAoD;QAIpD,0DAAkD;QAAlD,iIAAkD;QAIlD,0DAAkD;QAAlD,iIAAkD;QAIlD,0DAAkD;QAAlD,iIAAkD;QAIlD,0DAAiD;QAAjD,gIAAiD;QAKjD,0DAAqD;QAArD,oIAAqD;QAIrD,0DAAsD;QAAtD,qIAAsD;QAItD,0DAAsD;QAAtD,qIAAsD;QAItD,0DAAkD;QAAlD,iIAAkD;QAIlD,0DAAgD;QAAhD,+HAAgD;QAIhD,0DAAgD;QAAhD,+HAAgD;QAKhD,0DAAqD;QAArD,oIAAqD;QAIrD,0DAAsD;QAAtD,qIAAsD;QAItD,0DAAkD;QAAlD,iIAAkD;QAa/C,0DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;;;;;;;;;;;;;ACpG3D,iBAAiB,qBAAuB,gB;;;;;;;;;;;;ACCxC;AAAA;AAAA;AAAA;AAAA;AAAuD;AACL;;;AAElD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+DAAY,EAAE,SAAS,EAAE,MAAM,EAAE;CAC5D,CAAC;AAOK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAJlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkG;AAEzD;;;;;;;;;AAQlC,MAAM,gBAAgB;IAK3B,YAAmB,SAAyC,EAClD,iBAAoC;QAD3B,cAAS,GAAT,SAAS,CAAgC;QAClD,sBAAiB,GAAjB,iBAAiB,CAAmB;QAI9C,qBAAgB,GAAG,IAAI,wDAAS,CAAC;YAC/B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SACjF,CAAC;QAEF,mBAAc,GAAG,IAAI,MAAM,CAAC,mEAAmE,CAAC,CAAC;QAP/F,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAQD,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,cAAc,GAAG,mDAAmD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;IACnG,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,KAAK;;QACH,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAC/B,MAAM,OAAO,SAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,0CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC7F,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;YACzD,SAAS,CAAC,IAAI,GAAG,IAAI,oDAAI,CAAC,OAAO,CAAC,CAAC;YACnC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;IACH,CAAC;IAEO,iBAAiB;QACvB,OAAO,CAAC,OAAwB,EAAiC,EAAE;YACjE,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1D,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;aACjD;QACH,CAAC;IACH,CAAC;;gFA5CU,gBAAgB;gGAAhB,gBAAgB;QCX7B,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,yEACE;QAAA,uEAA6C;QAAA,uDAAuC;QAAA,4DAAI;QAC1F,4DAAM;QACN,sEACE;QAAA,gFACE;QAAA,sFACE;QAAA,6FACE;QAAA,kFAAkB;QAAA,0EAAa;QAAA,4DAAkB;QACnD,4DAA6B;QAC7B,sEACE;QAAA,sEAAI;QAAA,iEAAK;QAAA,wEAA0E;QAAA,qFAAyB;QAAA,4DAAI;QAChH,4DAAK;QACL,sEAAI;QAAA,qFAAyB;QAAA,4DAAK;QAClC,sEAAI;QAAA,0FAA4B;QAAA,4DAAK;QACrC,sEAAI;QAAA,8GAAkD;QAAA,4DAAK;QAC7D,4DAAK;QACL,uEACE;QAAA,qEACF;QAAA,4DAAM;QACR,4DAAsB;QACxB,4DAAgB;QAClB,4DAAM;QACN,0EACE;QAAA,2EACE;QADqC,sIAAY,WAAO,SAAE,KAAK,IAAC;QAChE,qFACE;QAAA,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,uEAEF;QAAA,4DAAiB;QACjB,0EACE;QAAA,6EAAoE;QAA3B,kIAAS,YAAQ,SAAE,KAAK,IAAE;QAAC,kEAAM;QAAA,4DAAS;QACnF,8EAA0C;QAAA,sEAAU;QAAA,4DAAS;QAC/D,4DAAM;QACR,4DAAO;QACT,4DAAM;;QAjCe,0DAAyB;QAAzB,4JAAyB;QAAC,0DAAuC;QAAvC,iHAAuC;QAsB9E,2DAAgC;QAAhC,2FAAgC;;;;;;;;;;;;;;;;;;;;;;AClBD;;;AAKhC,MAAM,UAAU;IAKrB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAHpD,SAAI,GAA2B,IAAI,oDAAe,CAAQ,EAAE,CAAC,CAAC;QAI5D,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEK,OAAO;;YACX,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa;YAC3D,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;KAAA;IAEK,MAAM,CAAC,GAAQ;;YACnB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa;YAC3D,MAAM,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;QACrE,CAAC;KAAA;;oEAlBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;AAuBpB,IAAY,IAEX;AAFD,WAAY,IAAI;AAEhB,CAAC,EAFW,IAAI,KAAJ,IAAI,QAEf;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAyD;AAIlD,MAAM,YAAY;IAWvB;QATA,gBAAW,GAAe,sEAAU,CAAC,IAAI,CAAC;QAC1C,SAAI,GAAW,cAAc,CAAC;QAC9B,UAAK,GAAY,IAAI,CAAC;QACtB,eAAU,GAAW,IAAI,CAAC;QAC1B,mBAAc,GAAW,IAAI,CAAC;QAC9B,aAAQ,GAAW,IAAI,CAAC;QACxB,iBAAY,GAAG,CAAC,UAAU,CAAC;QAC3B,iBAAY,GAAG,CAAC,UAAU,CAAC;IAEX,CAAC;IAAA,CAAC;IAElB,KAAK,CAAC,UAA2B,EAAE,QAAmB,EAAE,QAAkB,EAAE,WAAmB;IAE/F,CAAC;IACD,MAAM,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QACjE,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,IAAI,WAAW,EAAE;YACtD,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,EAAC;YACzE,IAAI,CAAC,YAAY,GAAG,WAAW;YAC/B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QAClE,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,IAAG,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,IAAG,WAAW,EAAC;YACzD,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC;SACxB;QACD,IAAG,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,IAAI,WAAW,EAAC;YACnF,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,OAAO;gBACL,YAAY,EAAE,CAAC,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC;gBAC9C,YAAY,EAAE,IAAI,CAAC,IAAI;gBACvB,UAAU,EAAE,sEAAU,CAAC,IAAI;aAC5B;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACI;;;;;;;;;ICgD9D,8EACyF;IAAA,gEACzF;IAAA,4DAAW;;;IA4BX,8EAC8G;IAAA,gEAC9G;IAAA,4DAAW;;;ADxER,MAAM,oBAAoB;IAE/B,YAAoB,iBAAoC,EAAS,MAAiB;QAA9D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAS,WAAM,GAAN,MAAM,CAAW;QAGlF,kBAAa,GAAG,8DAAa,CAAC;IAHwD,CAAC;IAKvF,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;IACtF,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YACjC,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;;wFAhBU,oBAAoB;oGAApB,oBAAoB;QCbjC,iFACE;QAAA,qEAAK;QAAA,kEAAM;QAAA,4DAAK;QAClB,4DAAc;QAEd,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,yEACE;QAAA,uEAAM;QAAA,+DAAI;QAAA,4DAAO;QACjB,uEAAM;QAAA,uEAA4D;QAAvC,sIAAS,yBAAqB,SAAE,KAAK,IAAC;QAAC,wDAAmC;QAAA,4DAAI;QAAA,4DAAO;QAClH,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACnB,wEAAM;QAAA,wDAA2C;;QAAA,4DAAO;QAC1D,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACjB,wEAAM;QAAA,wDAAyC;;QAAA,4DAAO;QACxD,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,+DAAG;QAAA,4DAAO;QAChB,wEAAM;QAAA,6DAAC;QAAA,4DAAO;QAChB,4DAAM;QAEN,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,0EACE;QAAA,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QACrB,wEAAM;QAAA,wDAAoE;;QAAA,4DAAO;QACnF,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QACpB,wEAAM;QAAA,wDAAiD;QAAA,4DAAO;QAChE,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QACpB,wEAAM;QAAA,wDAAmE;;QAAA,4DAAO;QAClF,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QACtB,wEAAM;QAAA,wDAAqE;;QAAA,4DAAO;QACpF,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACnB,wEAAM;QAAA,wDAAgD;QAAA,4DAAO;QAC/D,4DAAM;QAEN,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAAqC;;QAAA,4DAAO;QACpD,4DAAM;QACN,0EACE;QAAA,uEAAK;QAAA,mEAAO;QAAA,4DAAM;QAClB,0EACE;QAAA,wEAAM;QAAA,wDAAuC;;QAAA,4DAAO;QACpD,4HAEW;QACb,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACjB,wEAAM;QAAA,wDAA0C;;QAAA,4DAAO;QACzD,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAA4C;;QAAA,4DAAO;QAC3D,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAAqC;;QAAA,4DAAO;QACpD,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QAClB,wEAAM;QAAA,wDAA2C;;QAAA,4DAAO;QAC1D,4DAAM;QACN,0EACE;QAAA,wEAAM;QAAA,wEAAW;QAAA,4DAAO;QACxB,yEAAM;QAAA,yDAA0C;;QAAA,4DAAO;QACzD,4DAAM;QACN,2EACE;QAAA,wEAAK;QAAA,8EAAiB;QAAA,4DAAM;QAC5B,2EACE;QAAA,yEACE;QAAA,yDAAiD;;QAAA,4DAAO;QAC1D,8HAEW;QACb,4DAAM;QACR,4DAAM;QAEN,uEAAI;QAAA,kEAAK;QAAA,4DAAK;QACd,2EACE;QAAA,yEAAM;QAAA,yEAAY;QAAA,4DAAO;QACzB,yEAAM;QAAA,yDAA2C;;QAAA,4DAAO;QAC1D,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,uEAAU;QAAA,4DAAO;QACvB,yEAAM;QAAA,yDAAyC;;QAAA,4DAAO;QACxD,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,sEAAS;QAAA,4DAAO;QACtB,yEAAM;QAAA,yDAAuC;;QAAA,4DAAO;QACtD,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,sEAAS;QAAA,4DAAO;QACtB,yEAAM;QAAA,yDAAkD;QAAA,4DAAO;QACjE,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,oEAAO;QAAA,4DAAO;QACpB,yEAAM;QAAA,yDAAiD;QAAA,4DAAO;QAChE,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,gEAAG;QAAA,4DAAO;QAChB,yEAAM;QAAA,yDAA6C;QAAA,4DAAO;QAC5D,4DAAM;QAEN,uEAAI;QAAA,kEAAK;QAAA,4DAAK;QACd,2EACE;QAAA,yEAAM;QAAA,0EAAa;QAAA,4DAAO;QAC1B,yEAAM;QAAA,yDAAsD;QAAA,4DAAO;QACrE,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,yEAAY;QAAA,4DAAO;QACzB,yEAAM;QAAA,yDAAyB;QAAA,4DAAO;QACxC,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,mEAAM;QAAA,4DAAO;QACnB,yEAAM;QAAA,yDAAiG;;;QAAA,4DAAO;QAChH,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,yEAAY;QAAA,4DAAO;QACzB,yEAAM;QAAA,yDAA2C;;QAAA,4DAAO;QAC1D,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,uEAAU;QAAA,4DAAO;QACvB,yEAAM;QAAA,yDAA0C;;QAAA,4DAAO;QACzD,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,sEAAS;QAAA,4DAAO;QACtB,yEAAM;QAAA,yDAA0C;;QAAA,4DAAO;QACzD,4DAAM;QACN,2EACE;QAAA,yEAAM;QAAA,4EAAe;QAAA,4DAAO;QAC5B,yEAAM;QAAA,yDAAyC;;QAAA,4DAAO;QACxD,4DAAM;;QAxI8D,2DAAmC;QAAnC,oGAAmC;QAI/F,0DAA2C;QAA3C,sKAA2C;QAI3C,0DAAyC;QAAzC,oKAAyC;QAUzC,2DAAoE;QAApE,mMAAoE;QAIpE,0DAAiD;QAAjD,sHAAiD;QAIjD,0DAAmE;QAAnE,kMAAmE;QAInE,0DAAqE;QAArE,oMAAqE;QAIrE,0DAAgD;QAAhD,qHAAgD;QAMhD,0DAAqC;QAArC,gKAAqC;QAItC,0DAAwD;QAAxD,yKAAwD;QACrD,0DAAuC;QAAvC,kKAAuC;QAClC,0DAA6B;QAA7B,6FAA6B;QAOpC,0DAA0C;QAA1C,+KAA0C;QAI1C,0DAA4C;QAA5C,gLAA4C;QAI5C,0DAAqC;QAArC,0KAAqC;QAIrC,0DAA2C;QAA3C,gLAA2C;QAI3C,0DAA0C;QAA1C,sKAA0C;QAI3C,0DAAkE;QAAlE,mLAAkE;QAEnE,0DAAiD;QAAjD,uLAAiD;QACxC,0DAAuC;QAAvC,uGAAuC;QAS9C,0DAA2C;QAA3C,uKAA2C;QAI3C,0DAAyC;QAAzC,+KAAyC;QAIzC,0DAAuC;QAAvC,8KAAuC;QAIvC,0DAAkD;QAAlD,uHAAkD;QAIlD,0DAAiD;QAAjD,sHAAiD;QAIjD,0DAA6C;QAA7C,kHAA6C;QAM7C,0DAAsD;QAAtD,2HAAsD;QAItD,0DAAyB;QAAzB,0FAAyB;QAIzB,0DAAiG;QAAjG,uSAAiG;QAIjG,0DAA2C;QAA3C,uKAA2C;QAI3C,0DAA0C;QAA1C,+KAA0C;QAI1C,0DAA0C;QAA1C,+KAA0C;QAI1C,0DAAyC;QAAzC,qKAAyC;;;;;;;;;;;;;;AC9IjD;AAAA;AAAA,IAAY,SAkBX;AAlBD,WAAY,SAAS;IACnB,0BAAa;IACb,0BAAa;IACb,kCAAqB;IACrB,0BAAa;IACb,4BAAe;IACf,4BAAe;IACf,4BAAe;IACf,4BAAe;IACf,0BAAa;IACb,0BAAa;IACb,oCAAuB;IACvB,oCAAuB;IACvB,sCAAyB;IACzB,sCAAyB;IACzB,kCAAqB;IACrB,gCAAmB;IACnB,4BAAe;AACjB,CAAC,EAlBW,SAAS,KAAT,SAAS,QAkBpB;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;;;;;;ICwBjC,oEAAG;IAAA,uDAA+B;IAAA,4DAAI;IACtC,oEAAG;IAAA,uDAAiB;IAAA,4DAAI;;;IADrB,0DAA+B;IAA/B,6GAA+B;IAC/B,0DAAiB;IAAjB,iFAAiB;;;;;;;;;IA1B1B,yEACE;IAAA,qGAuBE;;IAAA,+MAGc;IAChB,4DAAkC;IACpC,4DAAM;;;IA5B6B,0DAAa;IAAb,6EAAa;;ADQzC,MAAM,iBAAiB;IAoB5B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAlBhD,WAAM,GAAY,IAAI,CAAC;QACvB,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,IAAI,CAAC;QAC3B,UAAK,GAAY,IAAI,CAAC;QACtB,UAAK,GAAY,IAAI,CAAC;QACtB,mBAAc,GAAY,IAAI,CAAC;QAC/B,mBAAc,GAAY,IAAI,CAAC;QAC/B,eAAU,GAAW,uBAAuB,CAAC;QAC7C,eAAU,GAAW,aAAa,CAAC;QACnC,aAAQ,GAAY,IAAI,CAAC;QACzB,eAAU,GAAW,SAAS;QAC9B,kBAAa,GAAY,KAAK,CAAC;QAC/B,SAAI,GAAgB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAChC,wBAAmB,GAAG,CAAC,CAAC,KAAa,EAAE,EAAE,GAAG,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvE,2BAAsB,GAAgD,IAAI,oDAAe,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QAEvG,iBAAY,GAAY,KAAK,CAAC;IAEsB,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;IAClG,CAAC;IAGO,cAAc,CAAC,aAAkC;QACvD,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;YACpB,MAAM,OAAO,GAA+B,EAAE;YAC9C,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE;gBAClD,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAC1C,MAAM,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;oBAC7B,MAAM,aAAa,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;oBACzF,IAAI,CAAC,aAAa,EAAE;wBAClB,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;qBACnI;yBAAM;wBACL,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC;wBACtF,IAAI,cAAc,EAAE;4BAClB,cAAc,CAAC,KAAK,IAAI,MAAM,CAAC,YAAY,CAAC;yBAC7C;6BAAM;4BACL,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,KAAK,EAAE,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;yBAC/G;qBACF;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;SACF;IACH,CAAC;;kFAnDU,iBAAiB;iGAAjB,iBAAiB;QCT9B,8GA6BM;;QA7BA,kFAAkB;;;;;;;;;;;;;;ACExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAQc;;;;;;;;;;;;ICFrE,sFAAmD;IAAA,+DAAI;IAAA,4DAAkB;;;IACzE,2EAAoC;IAAA,uDAAgB;IAAA,4DAAW;;;IAA3B,0DAAgB;IAAhB,gFAAgB;;;IAGpD,sFAAmD;IAAA,qEAAU;IAAA,4DAAkB;;;IAC/E,2EAAoC;IAAA,uDAAqC;;IAAA,4DAAW;;;;IAAhD,0DAAqC;IAArC,oKAAqC;;;IAGzE,iFAAyE;;;;;IACzE,2EACE;IAAA,wEACwE;IAAtE,wWAA6B;IAAyC,4DAAI;IAC9E,4DAAW;;;;IADuB,0DAAuC;IAAvC,kHAAuC;IADlD,kQAAkE;;;IAK3F,4EAAqE;;;IACrE,qEAAmE;;ADNhE,MAAM,iBAAiB;IAY5B,YAAoB,cAA8B,EAAS,MAAiB,EAAU,WAAwB;QAA1F,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAa;QAR9G,qBAAgB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC;QAC7C,yBAAyB;QAEzB,aAAQ,GAAc,EAAE,CAAC;QACzB,SAAI,GAAW,EAAE,CAAC;QAClB,kBAAa,GAAG,IAAI,CAAC;QACrB,6BAAwB,GAAgC,IAAI,0EAAkB,CAAU,EAAE,CAAC,CAAC;IAEsB,CAAC;IAEnH,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5H,IAAI,CAAC,wBAAwB,CAAC,IAAI,GAAG,gBAAgB,CAAC;QACxD,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9G,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;QAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC;QACnD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,IAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,EAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB;QACH,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;IAC5C,CAAC;IAED,WAAW;QACT,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe,CAAC,OAAgB;QAC9B,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACxC,IAAI,MAAM,GAAG,EAAE;QACf,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnB,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,IAAkC,CAAC,IAAI,IAAI,GAAG;QAC5E,CAAC,CAAC;QACF,OAAO,MAAM;IACf,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;SAClC,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YACrD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,CAAC;;kFA7DU,iBAAiB;iGAAjB,iBAAiB;QClB9B,iFACE;QAAA,qEAAK;QAAA,oFAAwB;QAAA,4DAAK;QACpC,4DAAc;QAGd,sEACE;QAAA,+EACE;QAAA,2EACE;QAAA,qIAAyE;QACzE,uHAA+D;QACjE,qEAAe;QACf,2EACE;QAAA,qIAA+E;QAC/E,yHAAoF;QACtF,qEAAe;QACf,4EACE;QAAA,uIAAyE;QACzE,yHAGW;QACb,qEAAe;QAEf,qIAAqE;QACrE,uHAAmE;QACrE,4DAAY;QACZ,2EACE;QAAA,8EAAgE;QAAxD,0IAAS,gBAAY,IAAC;QAAkC,+EAAmB;QAAA,4DAAS;QAC9F,4DAAM;QACR,4DAAM;;QAvBO,0DAAuC;QAAvC,oGAAuC;QAiB/B,2DAAiC;QAAjC,iGAAiC;QACpB,0DAAyB;QAAzB,kGAAyB;;;;;;;;;;;;;;ACvB3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACI;AACI;AACwB;AACrB;AACb;AACc;AACS;AACM;AACjB;;AAelD,MAAM,SAAS;;yFAAT,SAAS;6IAAT,SAAS,kBAVX;YACP,4DAAY;YACZ,uEAAa;YACb,0DAAW;YACX,oEAAe;YACf,wEAAe;YACf,4FAAuB;YACvB,sEAAc;SACf;oIAEU,SAAS,mBAXL,+DAAY,EAAE,gFAAiB,EAAE,sFAAmB,aAEjE,4DAAY;QACZ,uEAAa;QACb,0DAAW;QACX,oEAAe;QACf,wEAAe;QACf,4FAAuB;QACvB,sEAAc;;;;;;;;;;;;;;;;;;;;;;;ACrB8B;AACc;AACnB;AACb;AAE0C;AAIxE,IAAa,SAAS,GAAtB,MAAa,SAAS;IAUpB,YAAY,OAAc,iDAAK,CAAC,KAAK;QALrC,UAAK,GAAG,EAAE,CAAC;QACK,UAAK,GAA2B,EAAE;QAClC,YAAO,GAA2B,EAAE;QAIlD,IAAI,CAAC,IAAI,GAAG,IAAI,0CAAI,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,gDAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,IAAmB;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,UAAU,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC;IAC5C,CAAC;IAEO,YAAY,CAAC,IAAmB;QACtC,OAAO,IAAI,CAAC,GAAG,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;SAAC,CAAC;IACnC,CAAC;IAEO,iBAAiB,CAAC,IAAmB;QAC3C,OAAO,IAAI,CAAC,GAAG,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;SACtC,CAAC,CAAC;IACL,CAAC;IAEO,kBAAkB,CAAC,IAAmB;QAC5C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACtC,MAAM,IAAI,GAAS,IAAI,CAAC,IAAI,CAAC,IAA8B,CAAC;YAC5D,IAAI,IAAI,EAAE;gBACR,KAAK,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpD;QACH,CAAC,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,GAAG,CAAC,KAAe;QACzB,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,kEAAkE;IAClE,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IACzD,CAAC;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACvD,CAAC;IAGD,kEAAkE;IAClE,IAAI,SAAS;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,eAAe,CAAC,GAAG,KAAK;QACpE,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,cAAc,CAAC,CAAC;QACzD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,SAAS;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;QACpE,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,eAAe,CAAC,CAAC;QAC1D,OAAO,KAAK;IACd,CAAC;IAED,IAAI,WAAW;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACvD,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,CAAC;QACtD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,SAAS;QACX,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;QAClE,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACvD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,GAAG,KAAK;IAC7D,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,cAAc,CAAC,GAAG,IAAI;IAC/D,CAAC;IAED,IAAI,eAAe;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QACjC,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC;QACzC,MAAM,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,MAAM,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,IAAI,eAAe;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QACjC,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;QAC1C,MAAM,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC;QACnE,OAAO,MAAM,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,WAAW;;QACb,OAAO,aAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,KAAK,0CAAE,WAAW,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,oEAAoE;IACpE,IAAI,OAAO;QACT,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC;QAC1E,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,YAAY,CAAC;QACtD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,aAAa;QACf,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;QACpD,OAAO,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;IACxC,CAAC;IAED,IAAI,KAAK;QACP,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtD,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,KAAK,CAAC,CAAC;QAChD,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,8DAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,aAAa,CAAC,GAAG,KAAK,EAAC,cAAc;QACjF,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,wCAAwC;QACjH,OAAO,CAAC,GAAG,KAAK,CAAC;IACnB,CAAC;IAED,IAAI,WAAW;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,OAAO,CAAC,CAAC;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;QACvE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QAC5E,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACzF,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,SAAS,GAAG,YAAY,GAAG,iBAAiB,CAAC;IACjF,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,QAAQ,CAAC,GAAG,EAAE;QACvD,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,UAAU,CAAC;QACpD,OAAO,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,8DAAa,CAAC,UAAU,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,KAAK;QACP,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;QACzE,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,UAAU,CAAC,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QAC5E,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACzF,OAAO,CAAC,GAAG,WAAW,GAAG,YAAY,GAAG,iBAAiB,GAAG,UAAU,CAAC;IACzE,CAAC;IAED,IAAI,WAAW;QACb,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QACxE,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QAClF,MAAM,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QAC/F,OAAO,CAAC,GAAG,WAAW,GAAG,kBAAkB,GAAG,uBAAuB;IACvE,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;IAC5E,CAAC;IAED,kEAAkE;IAClE,IAAI,SAAS;QACX,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,eAAe,CAAC,CAAC;QAC1D,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QACzD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,cAAc,CAAC,GAAG,KAAK;QACnE,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,eAAe,CAAC;QACzD,OAAO,KAAK;IACd,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,8DAAa,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAGD,IAAI,WAAW;QACb,OAAO;YACL,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS;YACxB,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACjC,KAAK,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YAChC,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS;YACxB,QAAQ,EAAE,CAAC;YACX,GAAG,EAAE,CAAC,CAAC,uBAAuB;SAC/B;IACH,CAAC;IAED,oEAAoE;IAE5D,QAAQ;QACd,OAAO;YACL,IAAI,EAAE,IAAI,+CAAI,EAAE;YAChB,IAAI,EAAE,IAAI,+CAAI,EAAE;YAChB,QAAQ,EAAE,IAAI,+CAAI,EAAE;YACpB,IAAI,EAAE,IAAI,+CAAI,EAAE;YAChB,KAAK,EAAE,IAAI,+CAAI,EAAE;YACjB,KAAK,EAAE,IAAI,+CAAI,EAAE;YACjB,KAAK,EAAE,IAAI,+CAAI,EAAE;YACjB,KAAK,EAAE,IAAI,+CAAI,EAAE;YACjB,IAAI,EAAE,IAAI,+CAAI,EAAE;YAChB,IAAI,EAAE,IAAI,+CAAI,EAAE;YAChB,SAAS,EAAE,IAAI,+CAAI,EAAE;YACrB,SAAS,EAAE,IAAI,+CAAI,EAAE;YACrB,UAAU,EAAE,IAAI,+CAAI,EAAE;YACtB,UAAU,EAAE,IAAI,+CAAI,EAAE;YACtB,QAAQ,EAAE,IAAI,+CAAI,EAAE;YACpB,OAAO,EAAE,IAAI,+CAAI,EAAE;YACnB,KAAK,EAAE,IAAI,+CAAI,EAAE;SAClB,CAAC;IACJ,CAAC;IAED,IAAY,WAAW;QACrB,MAAM,KAAK,GAAc,EAAE,CAAC;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,iDAAK,CAAC,KAAK,IAAI,CACpC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,qDAAU,CAAC,aAAa,CAAC;YAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,qDAAU,CAAC,aAAa,CAAC;YAC5D,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,qDAAU,CAAC,cAAc,CAAC;YAC7D,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,qDAAU,CAAC,cAAc,CAAC,CAAC,EAAE;YAEhE,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC;SAC1B;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAlPiB;IAAf,+EAAY,EAAE;4EAAO,0CAAI;uCAAC;AAEX;IAAf,+EAAY,EAAE;;4CAAsB;AACrB;IAAf,+EAAY,EAAE;4EAAO,gDAAI;uCAAA;AAEV;IAAf,+EAAY,EAAE;;wCAAmC;AAClC;IAAf,+EAAY,EAAE;;0CAAqC;AAPzC,SAAS;IADrB,+EAAY,EAAE;;GACF,SAAS,CAmPrB;AAnPqB;AAqPtB,MAAM,mBAAmB,GAAc;IACrC,QAAQ,EAAE,GAAG;IACb,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;IACX,SAAS,EAAE,EAAE;IACb,MAAM,EAAE,EAAE;CACX;AAGD,+DAA+D;AAC/D,+EAA+E;;;;;;;;;;;;;;;;;ACtQxE,MAAM,YAAY;IAEvB,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,OAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;YAC/B,OAAO,KAAK,CAAC;SACd;QACD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,OAAO,CAAC,CAAC;QAC7F,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;YACZ,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACjD;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;wEAXU,YAAY;0GAAZ,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACIlB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,iFACE;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC7B,4DAAc;QAEd,yEACE;QAAA,iFAAmD;QACnD,yEACE;QAAA,0EAA6B;QAC7B,2EAA+B;QACjC,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACRN;AAAA;AAAA;AAAA;AAA8D;AACL;AAGlD,MAAM,UAAU;IAIrB;QACE,IAAI,CAAC,WAAW,GAAG,sEAAU,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,aAAa;IAC3B,CAAC;IACD,KAAK,CAAC,UAA2B,EAAE,QAAkB,EAAE,QAAmB;QACxE,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,UAAU,IAAI,UAAU,KAAK,2EAAe,CAAC,IAAI,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,EAAE;YACrI,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC;YAC/E,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,EAAE;gBACxC,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,UAAU;aACtC;iBAAM,IAAI,UAAU,KAAK,2EAAe,CAAC,IAAI,EAAE;gBAC9C,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;aACrB;iBAAM,IAAI,UAAU,KAAK,2EAAe,CAAC,QAAQ,EAAE;gBAClD,MAAM,GAAG,MAAM,GAAG,GAAG;aACtB;SACF;QACD,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAChC,UAAU,EAAE,sEAAU,CAAC,QAAQ;YAC/B,YAAY,EAAE,UAAU;SACzB;IACH,CAAC;IACD,MAAM,CAAC,QAAkB,EAAE,QAAmB,EAAE,WAAmB;IACnE,CAAC;IACD,OAAO,CAAC,QAAkB,EAAE,QAAmB,EAAE,WAAmB;IACpE,CAAC;CACF;AAED,MAAM,UAAU,GAAG,CAAC,SAAiB,EAAE,SAAiB,EAAE,QAA8B,EAAU,EAAE;IAClG,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IACtF,MAAM,cAAc,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC3F,OAAO,SAAS,GAAG,cAAc;AACnC,CAAC;;;;;;;;;;;;;ACSD;AAAA;AAAA;AAAA,IAAY,QAOX;AAPD,WAAY,QAAQ;IAClB,8BAAkB;IAClB,iCAAqB;IACrB,+BAAmB;IACnB,+BAAmB;IACnB,6BAAiB;IACjB,yBAAa;AACf,CAAC,EAPW,QAAQ,KAAR,QAAQ,QAOnB;AAED,IAAY,aA6CX;AA7CD,WAAY,aAAa;IACvB,oCAAmB;IACnB,wCAAuB;IACvB,sCAAqB;IACrB,oCAAmB;IACnB,kCAAiB;IACjB,sDAAqC;IACrC,WAAW;IACX,gCAAe;IACf,gDAA+B;IAC/B,8BAAa;IACb,4CAA2B;IAC3B,4CAA2B;IAC3B,0CAAyB;IACzB,4CAA2B;IAC3B,0CAAyB;IACzB,oEAAmD;IACnD,8CAA6B;IAC7B,0CAAyB;IACzB,OAAO;IACP,kDAAiC;IACjC,oDAAmC;IACnC,oDAAmC;IACnC,sDAAqC;IACrC,kEAAiD;IACjD,oDAAmC;IACnC,8CAA6B;IAC7B,kDAAiC;IACjC,4CAA2B;IAC3B,sDAAqC;IACrC,4CAA2B;IAC3B,kDAAiC;IACjC,wCAAqB;IACrB,wCAAqB;IACrB,4CAAyB;IACzB,OAAO;IACP,kDAAiC;IACjC,oDAAmC;IACnC,oDAAmC;IACnC,4CAA2B;IAC3B,0CAAyB;IACzB,sDAAqC;IACrC,oCAAmB;IACnB,sCAAqB;IACrB,4BAAW;AACb,CAAC,EA7CW,aAAa,KAAb,aAAa,QA6CxB;;;;;;;;;;;;;ACxGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACgB;AAEZ;AACM;AACD;;;;;;;;;;;;;;;;ICInD,iFAA2D;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IAMvE,iFAAyD;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IASrE,iFAAyD;IAAA,uDAAmB;;IAAA,4DAAa;;;IAA/C,2EAAc;IAAC,0DAAmB;IAAnB,0IAAmB;;;IAM5E,iFAA2D;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IAMvE,iFAAkE;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,4EAAe;IAAC,0DAAS;IAAT,0EAAS;;;IAM3E,iFAA2D;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IAMvE,iFAAkE;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,4EAAe;IAAC,0DAAS;IAAT,0EAAS;;;IAS3E,iFAAyD;IAAA,uDAAmB;;IAAA,4DAAa;;;IAA/C,2EAAc;IAAC,0DAAmB;IAAnB,0IAAmB;;;IAM5E,iFAAwD;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IAMpE,iFAAkE;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,4EAAe;IAAC,0DAAS;IAAT,0EAAS;;;IAM3E,iFAAwD;IAAA,uDAAY;IAAA,4DAAa;;;IAAvC,0EAAa;IAAC,0DAAY;IAAZ,6EAAY;;;IAMpE,iFAAkE;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,4EAAe;IAAC,0DAAS;IAAT,0EAAS;;;IAuBvE,iFAA2D;IAAA,uDAAgC;;;IAAA,4DAAa;;;IAA7D,4EAAe;IAAC,0DAAgC;IAAhC,4MAAgC;;;IAS3F,iFAA+D;IAAA,uDAC/D;;;IAAA,4DAAa;;;IADiC,6EAAgB;IAAC,0DAC/D;IAD+D,uNAC/D;;;IASA,iFAAyD;IAAA,uDAA+B;;;IAAA,4DAAa;;;IAA3D,2EAAc;IAAC,0DAA+B;IAA/B,2MAA+B;;;IAQ9F,kFAAmC;IAAA,+DAAI;IAAA,4DAAkB;;;IACzD,2EAAiC;IAAA,2EAAsC;IAAA,uDAAY;IAAA,4DAAO;IAAC,4DAAW;;;;IAA/D,0DAA+B;IAA/B,oGAA+B;IAAC,0DAAY;IAAZ,6EAAY;;;IAGnF,kFAAmC;IAAA,gEAAK;IAAA,4DAAkB;;;IAC1D,2EAAiC;IAAA,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAG/C,kFAAmC;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3D,2EAAiC;IAAA,uDAA8C;;;IAAA,gEAAO;IAAA,uDAC7D;;;IAAA,4DAAW;;;;IADH,0DAA8C;IAA9C,4OAA8C;IAAO,0DAC7D;IAD6D,4OAC7D;;;IAGzB,kFAAmC;IAAA,iEAAM;IAAA,4DAAkB;;;IAC3D,2EAAiC;IAAA,uDAA8C;;;IAAA,4DAAW;;;;IAAzD,0DAA8C;IAA9C,4OAA8C;;;IAG/E,6EAAqD;;;IACrD,2EAAiC;IAAA,+DAA2C;IAAC,4DAAW;;;IAApD,0DAAmC;IAAnC,8GAAmC;;;IAIvE,sFAA+F;IAAA,gEAC/F;IAAA,4DAAkB;;;IAGpB,4EAAuF;;;IACvF,4EAAmF;;;IACnF,qEAAmE;;;;;IA5JzE,yEACE;IAAA,yEACE;IAAA,sEACE;IAAA,uFACA;IAAA,oFACE;IAAA,gFACE;IAD6C,4WAAoC;IACjF,uIAAoF;IACtF,4DAAa;IACf,4DAAiB;IACjB,+EACA;IAAA,oFACE;IAAA,gFACE;IAD6C,gXAAwC;IACrF,yIAAkF;IACpF,4DAAa;IACf,4DAAiB;IACjB,+DACF;IAAA,4DAAM;IACN,uEACE;IAAA,sFACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+WAAsC;IACnF,yIAAyF;IAC3F,4DAAa;IACf,4DAAiB;IACjB,sEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,kBAAM;IACtF,yIAAoF;IACtF,4DAAa;IACf,4DAAiB;IACjB,iEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,0BAAc;IAC9F,yIAAwF;IAC1F,4DAAa;IACf,4DAAiB;IACjB,gEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,kBAAM;IACtF,yIAAoF;IACtF,4DAAa;IACf,4DAAiB;IACjB,iEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,kBAAM;IACtF,yIAAwF;IAC1F,4DAAa;IACf,4DAAiB;IACjB,sEACF;IAAA,4DAAM;IACN,uEACE;IAAA,sFACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+WAAsC;IACnF,yIAAyF;IAC3F,4DAAa;IACf,4DAAiB;IACjB,sEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,kBAAM;IACtF,yIAAiF;IACnF,4DAAa;IACf,4DAAiB;IACjB,iEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,0BAAc;IAC9F,yIAAwF;IAC1F,4DAAa;IACf,4DAAiB;IACjB,gEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,kBAAM;IACtF,yIAAiF;IACnF,4DAAa;IACf,4DAAiB;IACjB,iEACA;IAAA,qFACE;IAAA,iFACE;IAD6C,+VAAkC,CAAC,0BAAc;IAC9F,yIAAwF;IAC1F,4DAAa;IACf,4DAAiB;IACjB,sEACF;IAAA,4DAAM;IAEN,6EAAyF;IAA9D,qUAA2B;IAAmC,iEAAK;IAAA,4DAAS;IACzG,4DAAM;IACN,0EACE;IAAA,2EACE;IAAA,2EACE;IAAA,2EAAyB;IAAA,qEAAQ;IAAA,4DAAM;IACvC,2EACE;IAAA,kFACE;IAAA,6EAAW;IAAA,gEAAI;IAAA,4DAAY;IAC3B,wEACF;IAAA,4DAAiB;IACnB,4DAAM;IACN,0EACE;IAAA,kFACE;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,kFACE;IAAA,kFAAqB;IAAA,gEAAI;IAAA,4DAAa;IACtC,yIAAwG;IAC1G,4DAAa;IACf,4DAAiB;IACnB,4DAAM;IACN,0EACE;IAAA,kFACE;IAAA,6EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,kFACE;IAAA,kFAAqB;IAAA,gEAAI;IAAA,4DAAa;IACtC,yIACa;IACf,4DAAa;IACf,4DAAiB;IACnB,4DAAM;IACN,0EACE;IAAA,kFACE;IAAA,6EAAW;IAAA,gEAAI;IAAA,4DAAY;IAC3B,kFACE;IAAA,kFAAqB;IAAA,gEAAI;IAAA,4DAAa;IACtC,yIAAqG;IACvG,4DAAa;IACf,4DAAiB;IACnB,4DAAM;IACR,4DAAM;IACR,4DAAO;IACP,iFACE;IAAA,6EACE;IAAA,oJAAyD;IACzD,sIAAsG;IACxG,qEAAe;IACf,6EACE;IAAA,oJAA0D;IAC1D,sIAA0D;IAC5D,qEAAe;IACf,6EACE;IAAA,sJAA2D;IAC3D,yIACoC;IACtC,qEAAe;IACf,8EACE;IAAA,sJAA2D;IAC3D,wIAA0F;IAC5F,qEAAe;IACf,8EACE;IAAA,sJAAqD;IACrD,wIAAwF;IAC1F,qEAAe;IAEf,8EACE;IAAA,sJACkB;IACpB,qEAAe;IAEf,oJAAuF;IACvF,oJAAmF;IACnF,sIAAmE;IACrE,4DAAY;IACd,4DAAM;IACR,4DAAM;;;IA1Jc,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAe;IAAf,wFAAe;IAKjC,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAa;IAAb,sFAAa;IAQ/B,0DAAkC;IAAlC,2FAAkC;IACf,0DAAW;IAAX,oFAAW;IAK9B,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAe;IAAf,wFAAe;IAKjC,0DAAkC;IAAlC,2FAAkC;IACd,0DAAkB;IAAlB,2FAAkB;IAKtC,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAe;IAAf,wFAAe;IAKjC,0DAAkC;IAAlC,2FAAkC;IACd,0DAAkB;IAAlB,2FAAkB;IAQtC,0DAAkC;IAAlC,2FAAkC;IACf,0DAAW;IAAX,oFAAW;IAK9B,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAY;IAAZ,qFAAY;IAK9B,0DAAkC;IAAlC,2FAAkC;IACd,0DAAkB;IAAlB,2FAAkB;IAKtC,0DAAkC;IAAlC,2FAAkC;IAChB,0DAAY;IAAZ,qFAAY;IAK9B,0DAAkC;IAAlC,2FAAkC;IACd,0DAAkB;IAAlB,2FAAkB;IAShD,0DAA2B;IAA3B,2FAA2B;IAYb,2DAAkC;IAAlC,2FAAkC;IAEd,0DAAW;IAAX,oFAAW;IAO/B,0DAAkC;IAAlC,2FAAkC;IAEb,0DAAa;IAAb,sFAAa;IAQlC,0DAAkC;IAAlC,2FAAkC;IAEf,0DAAW;IAAX,oFAAW;IAMvC,0DAAmB;IAAnB,mFAAmB;IA4BX,2DAAuC;IAAvC,mJAAuC;IACvC,0DAAmC;IAAnC,oGAAmC;IACtB,0DAAyB;IAAzB,qGAAyB;;ADlJtD,MAAM,uBAAuB;IAElC,YAAoB,UAAsB,EAAU,WAAwB;QAAxD,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAE5E,mBAAc,GAAG,yDAAc;QAC/B,oBAAe,GAAG,MAAM,CAAC,MAAM,CAAC,yDAAc,CAAC;QAC/C,eAAU,GAAG,MAAM,CAAC,MAAM,CAAC,oDAAU,CAAC;QACtC,aAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,8DAAa,CAAC,CAAC,IAAI,EAAE,CAAC;QAM/C,mBAAc,GAA2B;YACvC,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE;gBACL,EAAE,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;gBACzD,EAAE,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;gBACzD,EAAE,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;gBACzD,EAAE,GAAG,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;aAC1D;SACF;QAED,kBAAa,GAAc,IAAI,wDAAS,CAAC;YACvC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1B,CAAC;QAEF,eAAU,GAAG,MAAM,CAAC,MAAM,CAAC,8DAAa,CAAC,CAAC,IAAI,EAAE;QAChD,YAAO,GAAG,MAAM,CAAC,MAAM,CAAC,oDAAU,CAAC;QACnC,aAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,kDAAQ,CAAC,CAAC;QAInC,qBAAgB,GAAa,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;IAnCE,CAAC;IAuCjF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,0EAAkB,EAAE,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS;YAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YAClD,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,GAAQ,EAAE,KAAa;QAC7B,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE;YACpC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,UAAU,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,WAAW,eAAe,CAAC;SACnF;aAAM,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,GAAG,CAAC,EAAE;YACzC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpC,MAAM,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,8DAAa,CAAC,OAAO,CAAC;YACpE,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,8DAAa,CAAC,WAAW,CAAC;YAC5E,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAChC,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAoB,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACtH;aAAM;YACL,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;YAC7C,OAAO,CAAC,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,OAA0B,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAA0B,CAAC,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACxH;IACH,CAAC;IAED,cAAc,CAAC,GAAQ;QACrB,OAAO,GAAG,GAAG,CAAC,OAAO,OAAO;IAC9B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB;QAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB;QAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB;QAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB;QAE9E,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC;IACvD,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,kDAAQ,CAAC,IAAI,CAAC;IAClE,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,KAAK,kDAAQ,CAAC,IAAI,CAAC;IAClE,CAAC;IAEO,SAAS,CAAC,IAAS,EAAE,MAAW;QACtC,OAAO,CACL,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzF,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1D,CAAC,MAAM,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YAC9D,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC5E;IACH,CAAC;;8FAlGU,uBAAuB;uGAAvB,uBAAuB;QCdpC,iFACE;QAAA,qEAAK;QAAA,yEAAa;QAAA,4DAAK;QACzB,4DAAc;QAEd,sHA+JM;;QA/JkB,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACCvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACI;AAEY;;;;;;;;;;;;;ICJ5D,gFAA2D;IAAA,uDAAmB;;IAAA,4DAAa;;;IAA/C,0EAAc;IAAC,0DAAmB;IAAnB,yIAAmB;;;IAQhF,4FAE6B;;;;IAF8C,4EAAgB;;ADIxF,MAAM,wBAAwB;IAEnC,YAAoB,iBAAoC,EAC9C,kBAAsC,EACtC,MAAiB;QAFP,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC9C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAW;QAE3B,iBAAY,GAA8B,EAAE,CAAC;QAG7C,cAAS,GAAG,6DAAS,CAAC;QACtB,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC,6DAAS,CAAC,CAAC;QAExC,eAAU,GAAG,MAAM,CAAC,MAAM,CAAC,2DAAK,CAAC,CAAC;QAClC,qBAAgB,GAAW,EAAE,CAAC;IATC,CAAC;IAWhC,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACrD,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI;YAC3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpD,MAAM,IAAI,GAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAkC,CAAC,CAAC;gBAC3E,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;oBAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC3B;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAA8B,CAAC,CAAC,EAAE;IAC/D,CAAC;IAED,UAAU,CAAC,KAAsB;QAC/B,OAAO,CAAC,GAAG,EAAE;QACb,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK;QACxD,SAAS,CAAC,IAAI,GAAG,IAAI,0DAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnD,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE;YACzB,OAAO,QAAQ,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI;SACzC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YACjC,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAGO,YAAY,CAAC,EAAU;QAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE;YAC1B,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACrD,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrD,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;gGA5DU,wBAAwB;wGAAxB,wBAAwB;QChBrC,sEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,yEAAc;QAAA,4DAAY;QACrC,mFACE;QADsB,8KAAmB,sBAAkB,IAAC;QAC5D,kIAA2F;QAC7F,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QAGN,yEACE;QAAA,yEACE;QAAA,kKAE6B;QAC/B,4DAAM;QACN,0EACE;QAAA,wDAA0C;QAAA,6EAAoG;QAAhC,uJAAS,yBAAqB,IAAC;QAAC,uEAAW;QAAA,4DAAS;QACpK,4DAAM;QACR,4DAAM;;QAhB6D,0DAA0B;QAA1B,uFAA0B;QAC1D,0DAAa;QAAb,mFAAa;QAQC,0DAAe;QAAf,qFAAe;QAK5D,0DAA0C;QAA1C,qHAA0C;;;;;;;;;;;;;;AChB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACgB;AACY;AACH;AACH;AACc;AAGjB;AACpB;;;AAK/B,MAAM,aAAa;IAMxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAL5C,kBAAa,GAA8C,IAAI,oDAAe,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QAC5F,kBAAa,GAAG,CAAC,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,mBAAmB,CAAC;IAIjC,CAAC;IAEjD,WAAW,CAAC,SAAiB;QAC3B,MAAM,sBAAsB,GAAwB,EAAE,CAAC;QACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC/F,MAAM,QAAQ,GAAG,IAAI,kDAAQ,EAAE,CAAC;YAChC,MAAM,SAAS,GAAG;gBAChB,MAAM,EAAE,IAAI,kEAAM,EAAE;gBACpB,GAAG,EAAE,IAAI,sFAAe,EAAE;gBAC1B,UAAU,EAAE,IAAI,2EAAU,EAAE;gBAC5B,UAAU,EAAE,IAAI,sEAAU,EAAE;gBAC5B,YAAY,EAAE,IAAI,8EAAY,EAAE;gBAChC,SAAS,EAAE,IAAI,wEAAS,EAAE;aAC3B;YACD,MAAM,mBAAmB,GAAiC;gBACxD,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,YAAY,CAAC;gBACtH,aAAa,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC;gBACrC,iBAAiB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC;aAC1C;YAED,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,oBAAmC,EAAE,SAAkB,CAAC;YACrF,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,MAAuC,EAAE,EAAE;gBACjE,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,sBAAsB,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;iBACjD;YACH,CAAC,CAAC;YACF,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,mBAAmB,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;SAC7J;IACH,CAAC;;0EApCU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;ACZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACF;AACT;AACb;AACyB;AACvB;AACF;AACiB;AACX;AACN;AACI;AACM;AACN;AACF;AACS;AACP;AACO;AACD;AACA;AAClB;AACmB;AACL;AACG;AACP;AACgC;AACH;AAC9B;AACkD;AACxC;AACW;AACH;AACX;AAClB;AACe;;;;AA8DrD,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,kBAzCX;YACP,sEAAgB;YAChB,2DAAW;YACX,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,mEAAmB;YACnB,oEAAa;YACb,sEAAc;YACd,oEAAa;YACb,2EAAgB;YAChB,qEAAa;YACb,yEAAe;YACf,yEAAe;YACf,uEAAc;YACd,gFAAkB;YAClB,yEAAe;YACf,+EAAkB;YAClB,2EAAgB;YAChB,8EAAiB;YACjB,6EAAiB;YACjB,0DAAS;YACT,yEAAgB;SAEjB;oIAiBU,SAAS,mBA1DlB,2DAAY;QACZ,yFAAoB;QACpB,gFAAiB;QACjB,4FAAqB;QACrB,qFAAmB;QACnB,8EAAgB;QAChB,8EAAgB;QAChB,4DAAY;QACZ,+EAAiB;QACjB,sEAAc;QACd,sGAAwB;QACxB,mGAAuB;QACvB,uHAA6B;QAC7B,+EAAiB;QACjB,0FAAoB;QACpB,uFAAmB,aAGnB,sEAAgB;QAChB,2DAAW;QACX,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,mEAAmB;QACnB,oEAAa;QACb,sEAAc;QACd,oEAAa;QACb,2EAAgB;QAChB,qEAAa;QACb,yEAAe;QACf,yEAAe;QACf,uEAAc;QACd,gFAAkB;QAClB,yEAAe;QACf,+EAAkB;QAClB,2EAAgB;QAChB,8EAAiB;QACjB,6EAAiB;QACjB,0DAAS;QACT,yEAAgB;mEArChB,gFAAiB,gMACjB,4FAAqB;IAUrB,+EAAiB;IACjB,0FAAoB;IAHpB,mGAAuB,IAJvB,4DAAY;;;;;;;;;;;;;;;;;;;AC/CwD;AAGxE,IAAa,IAAI,GAAjB,MAAa,IAAI;IAKf,YAAY,mBAA2B,kEAAkE;QACvG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;IACvC,CAAC;IAED,cAAc;QACZ,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI;YAC5C,OAAO,EAAE,IAAI,CAAC,cAAc;YAC5B,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI;YAC9C,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI;YACpC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,GAAG;SACpD;IACH,CAAC;IAED,SAAS;QACP,OAAO;YACL,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;YACvC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;YACvC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe;YAC5C,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC;YAC3C,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;SACnC;IACH,CAAC;IAED,IAAI,gBAAgB;QAClB,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;QACnD,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7E,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,OAAO,GAAG,SAAS,IAAI,SAAS,IAAI,QAAQ,EAAE;IAChD,CAAC;IAED,IAAY,cAAc;QACxB,MAAM,eAAe,GAAG,IAAI,CAAC;QAC7B,MAAM,oBAAoB,GAAG,IAAI;QACjC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAC7G,CAAC;IAEO,WAAW,CAAC,gBAAwB;QAC1C,MAAM,MAAM,GAAG,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG;YACb,OAAO;YACP,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,YAAY,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,YAAY,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,eAAe,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,cAAc,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3B,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,YAAY,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACzB,kBAAkB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC/B,OAAO;YACP,gBAAgB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC7B,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACpB,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,cAAc,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3B,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,eAAe,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,qBAAqB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,oBAAoB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACjC,YAAY,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACzB,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACrB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,gBAAgB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC7B,YAAY,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACzB,mBAAmB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAChC,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACvB,aAAa,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1B,kBAAkB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC/B,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACvB,cAAc,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3B,eAAe,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,cAAc,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3B,MAAM;YACN,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,YAAY,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACzB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACvB,aAAa,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1B,gBAAgB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC7B,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,eAAe,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACpB,aAAa,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1B,YAAY,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACzB,qBAAqB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,mBAAmB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAChC,eAAe,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC5B,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACvB,aAAa,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1B,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;YACvB,cAAc,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;SAC5B,CAAC;IACJ,CAAC;CACF;AAlHiB;IAAf,+EAAY,EAAE;;qCAAqB;AACpB;IAAf,+EAAY,EAAE;;0CAAsB;AAH1B,IAAI;IADhB,+EAAY,EAAE;;GACF,IAAI,CAoHhB;AApHgB;;;;;;;;;;;;;ACJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEJ;;;;;;ICAnD,6EAAqD;;;IACrD,2EAAgC;IAAA,uDAAY;IAAA,4DAAW;;;IAAvB,0DAAY;IAAZ,6EAAY;;;IAG5C,kFAAmC;IAAA,8DAAG;IAAA,4DAAkB;;;IACxD,2EAAgC;IAAA,uDAAW;IAAA,4DAAW;;;IAAtB,0DAAW;IAAX,4EAAW;;;IAG3C,kFAAmC;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5D,2EAAgC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,kFAAiB;;;IAGjD,kFAAmC;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5D,2EAAgC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,kFAAiB;;;IAGjD,kFAAmC;IAAA,kEAAO;IAAA,4DAAkB;;;IAC5D,2EAAgC;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,gFAAe;;;IAG/C,kFAAmC;IAAA,8DAAG;IAAA,4DAAkB;;;IACxD,2EAAgC;IAAA,uDAAW;IAAA,4DAAW;;;IAAtB,0DAAW;IAAX,4EAAW;;;IAG7C,4EAAgE;;;IAChE,qEAA8D;;ADhB3D,MAAM,mBAAmB;IAM9B,YAAoB,aAA4B,EAAU,iBAAoC;QAA1E,kBAAa,GAAb,aAAa,CAAe;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJ9F,cAAS,GAAY,KAAK,CAAC;QAE3B,eAAU,GAAiD,IAAI,0EAAkB,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QAI/F,mBAAc,GAAG,KAAK,GAAG,EAAE,CAAC;QAC5B,kBAAa,GAAG,EAAE,CAAC;QACnB,0BAAqB,GAAG,GAAG;QAE3B,gBAAW,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,SAAS,EAAE,KAAK,CAAC;IANW,CAAC;IAQnG,oDAAoD;IACpD,mDAAmD;IAEnD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,aAAkC,EAAE,EAAE;YAChF,IAAI,aAAa,CAAC,CAAC,CAAC,EAAE;gBACpB,MAAM,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;gBAC5F,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBACzD,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;gBAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;gBACxE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,SAAS,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,oBAAoB,CAAC,WAAoC,EAAE,aAAsC;QACvG,MAAM,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QACtE,MAAM,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QACvE,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QACjE,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;QAClE,OAAO,CAAC;gBACN,IAAI,EAAE,wBAAwB;gBAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnF,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,uBAAuB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC1H,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC3H,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC9G,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;aACpF;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC7F,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC/H,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAChI,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC1H,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC9F;YACD;gBACE,IAAI,EAAE,wBAAwB;gBAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBACnF,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,uBAAuB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC1H,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,wBAAwB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC3H,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC9G,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;aACpF;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC7F,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC/H,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAChI,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC1H,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC;aAC9F,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,KAAgC;QACnD,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACrB,OAAO;gBACL,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC7C,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;aAC9C,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAEO,wBAAwB,CAAC,aAAkC;QACjE,MAAM,iBAAiB,GAA8B,IAAI,KAAK,EAAE,CAAC;QACjE,MAAM,iBAAiB,GAA8B,IAAI,KAAK,EAAE,CAAC;QACjE,aAAa,CAAC,OAAO,CAAC,CAAC,aAAgC,EAAE,EAAE;YACzD,MAAM,UAAU,GAA4B,IAAI,KAAK,EAAE,CAAC;YACxD,MAAM,SAAS,GAA4B,IAAI,KAAK,EAAE,CAAC;YACvD,aAAa,CAAC,OAAO,CAAC,CAAC,eAAgC,EAAE,KAAa,EAAE,EAAE;gBACxE,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAgC,EAAE,EAAE;oBACtE,MAAM,MAAM,GAA0B;wBACpC,MAAM,EAAE,UAAU,CAAC,YAAY;wBAC/B,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;qBACzC;oBACD,IAAI,KAAK,IAAI,IAAI,CAAC,cAAc,EAAE;wBAChC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;qBACxB;oBAAA,CAAC;oBACF,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,CAAC,CAAC;YACJ,CAAC,CAAC;YACF,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC;QACF,OAAO,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAEO,eAAe,CAAC,aAAmC;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;QACzD,IAAI,kBAAkB,GAAG,GAAG,CAAC;QAC7B,MAAM,4BAA4B,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;QAClF,IAAI,4BAA4B,IAAI,4BAA4B,GAAG,CAAC,EAAE;YACpE,4BAA4B,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,4BAA4B,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3F,4BAA4B,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,kBAAkB,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;SAC5F;QACD,IAAI,WAAW,GAAG,aAAa,CAAC,YAAY,CAAC;QAC7C,IAAI,aAAa,CAAC,UAAU,KAAK,sEAAU,CAAC,IAAI,EAAE;YAChD,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC;SACtD;QACD,IAAI,aAAa,CAAC,YAAY,KAAK,aAAa,EAAE;YAChD,WAAW,GAAG,WAAW,GAAG,IAAI;SACjC;QACD,OAAO,WAAW;IACpB,CAAC;;sFAtHU,mBAAmB;mGAAnB,mBAAmB;QCZhC,sEACE;QAAA,+EACE;QAAA,2EACE;QAAA,uIAAqD;QACrD,yHAAuD;QACzD,qEAAe;QACf,2EACE;QAAA,uIAAwD;QACxD,yHAAsD;QACxD,qEAAe;QACf,2EACE;QAAA,uIAA4D;QAC5D,2HAA4D;QAC9D,qEAAe;QACf,4EACE;QAAA,yIAA4D;QAC5D,2HAA4D;QAC9D,qEAAe;QACf,4EACE;QAAA,yIAA4D;QAC5D,2HAA0D;QAC5D,qEAAe;QACf,4EACE;QAAA,yIAAwD;QACxD,2HAAsD;QACxD,qEAAe;QAEf,uIAAgE;QAChE,0HAA8D;QAChE,4DAAY;QACd,4DAAM;;QA7BO,0DAAyB;QAAzB,sFAAyB;QA0BjB,2DAA4B;QAA5B,4FAA4B;QACf,0DAAoB;QAApB,6FAAoB;;;;;;;;;;;;;;ACzBtD;AAAA;AAAO,MAAM,QAAQ;IAArB;QAGE,mBAAc,GAAW,IAAI;QAC7B,mBAAc,GAAW,IAAI;QAC7B,gBAAW,GAAW,CAAC,CAAC;QAExB,UAAK,GAAW,IAAI,CAAC;QAErB,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAA2B,EAAE;QAClC,YAAO,GAA2B,EAAE;IAgBtC,CAAC;IAbC,mDAAmD;IACnD,IAAI,WAAW;QACb,OAAO;YACL,IAAI,EAAE,CAAC,GAAG;YACV,KAAK,EAAE,CAAC,GAAG;YACX,KAAK,EAAE,CAAC,GAAG;YACX,QAAQ,EAAE,CAAC;YACX,KAAK,EAAE,CAAC,GAAG;YACX,IAAI,EAAE,GAAG;YACT,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,CAAC,CAAC,uBAAuB;SAC/B;IACH,CAAC;CACF;;;;;;;;;;;;;AC9BD;AAAA;AAAA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,2BAAa;IACb,+BAAiB;IACjB,2BAAa;IACb,+BAAiB;IACjB,mCAAqB;AACvB,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;;;;;;;;;;;;;;;;;;;ACJkC;;AAMnC,MAAM,MAAM,GAAG,UAAU,CAAC;AAKnB,MAAM,eAAe;IAQ1B;QAFA,gBAAW,GAAY,KAAK,CAAC;QAG3B,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEK,IAAI;;YACR,IAAI,CAAC,QAAQ,GAAG,IAAI,6CAAS,CAAC,EAAE,EAAE,EAAE,wBAAwB,EAAE,CAAC,CAAC;YAChE,MAAM,WAAW,GAAG,qDAAiB,CAAC,SAAS,EAAE,CAAC;YAClD,MAAM,IAAI,GAAe,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAChE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAC7B,eAAe,CAChB,CAAC;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;KAAA;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/B,IAAI;gBACF,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAU,UAAU,CAAC,CAAC;aACxE;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,IAAI,CAAC,IAAI,EAAE;gBACjB,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAU,UAAU,CAAC,CAAC;aACxE;QACH,CAAC,EAAC,CAAC;IACL,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,iBAAiB,EAAE;YAC9B,IAAI;gBACF,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAO,MAAM,CAAC,CAAC,CAAC;aAClE;YAAC,OAAM,CAAC,EAAC;gBACR,MAAM,IAAI,CAAC,IAAI,EAAE;gBACjB,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAO,MAAM,CAAC,CAAC,CAAC;aAClE;QACH,CAAC,EAAC;IACJ,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,iBAAiB,EAAE;YAC9B,IAAI;gBACF,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAM,MAAM,CAAC,CAAC,CAAC;aACjE;YAAC,OAAM,CAAC,EAAC;gBACR,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;gBAClB,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,UAAU,CAAM,MAAM,CAAC,CAAC,CAAC;aACjE;QACH,CAAC,EAAC;IAEJ,CAAC;IAEa,iBAAiB;;YAC7B,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE;gBACxB,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;QACH,CAAC;KAAA;IAEO,KAAK,CAAC,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;;8EAnEU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAuC;AACY;;AAO5C,MAAM,iBAAiB;IAK5B;QAHA,cAAS,GAA+B,IAAI,oDAAe,CAAY,IAAI,8DAAS,EAAE,CAAC,CAAC;IAGxE,CAAC;;kFALN,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;ACAb,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,qMAEA;;;;;;;;;;;;;;;;;;;;;ACFwE;AAGxE,IAAY,KAKX;AALD,WAAY,KAAK;IACf,+BAAsB;IACtB,0BAAiB;IACjB,wBAAe;IACf,wBAAe;AACjB,CAAC,EALW,KAAK,KAAL,KAAK,QAKhB;AAGD,MAAM,mBAAmB,GAAkC;IACzD,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IACvF,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IACrF,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;IACpF,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;CACrF;AAGD,IAAa,IAAI,GAAjB,MAAa,IAAI;IAKf,YAAY,IAAW;QACrB,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAPiB;IAAf,+EAAY,EAAE;;mCAAkB;AACjB;IAAf,+EAAY,EAAE;;kCAAY;AAHhB,IAAI;IADhB,+EAAY,EAAE;;GACF,IAAI,CAShB;AATgB;;;;;;;;;;;;;AClBjB;AAAA;AAAA;AAAA;AAA8D;AACL;AAIlD,MAAM,eAAe;IAQ1B;QAFA,cAAS,GAAG,CAAC,CAAC;QAGZ,IAAI,CAAC,WAAW,GAAG,sEAAU,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,mBAAmB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IACD,KAAK,CAAC,UAA2B,EAAE,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QAC7F,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;YACjE,IAAI,UAAU,IAAI,UAAU,KAAK,2EAAe,CAAC,IAAI,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,IAAI,UAAU,KAAK,2EAAe,CAAC,KAAK,EAAE;gBACrI,MAAM,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAC1D,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,UAAU,CAAC;gBACnD,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;wBAChC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,0BAA0B,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;qBAC3G;oBACD,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,yBAAyB,GAAG,WAAW;oBACnE,IAAI,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;oBACvD,IAAI,aAAa,KAAK,CAAC,EAAE;wBACvB,qBAAqB;qBACtB;yBAAM;wBACL,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;qBACzC;iBACF;aACF;SACF;IACH,CAAC;IACD,MAAM,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QACjE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,WAAW,EAAE;YACvI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,GAAG,KAAK,EAAE;YAC1E,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;;QAClE,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,WAAW,EAAE;YACjF,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;SAC1C;QACD,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,yBAAyB,GAAG,KAAK,IAAI,WAAW,CAAC,EAAE,EAAG,+DAA+D;YACnL,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACxC;QACD,IAAI,eAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,0CAAE,0BAA0B,IAAG,IAAI,IAAI,WAAW,EAAE;YACjF,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;YACvD,IAAI,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;YACvE,MAAM,aAAa,GAAG,WAAW,GAAG,CAAC,EAAE,2BAA2B;YAClE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,0BAA0B,GAAG,WAAW,CAAC;YACrE,OAAO;gBACL,YAAY,EAAE,SAAS;gBACvB,YAAY,EAAE,aAAa;gBAC3B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,OAAO,EAAE,GAAG,WAAW,SAAS;aACjC;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;ACvDD;AAAA;AAAA,IAAY,eASX;AATD,WAAY,eAAe;IACzB,gCAAa;IACb,kCAAe;IACf,kCAAe;IACf,wCAAqB;IACrB,kCAAe;IACf,gCAAa;IACb,wCAAqB;IACrB,8BAAW;AACb,CAAC,EATW,eAAe,KAAf,eAAe,QAS1B;;;;;;;;;;;;;;;;;;;;;;;;ICZO,uEACE;IAAA,uEAA6G;IAAA,uDAAoB;IAAA,4DAAI;IACvI,4DAAO;;;;IAD6D,0DAA0C;IAA1C,oHAA0C;IAAjF,0GAAsC;IAA4C,0DAAoB;IAApB,kHAAoB;;;IAHrI,qEACE;IAAA,uDACA;IAAA,mIAEO;IACT,4DAAK;;;;;IAJH,0DACA;IADA,mGACA;IAAO,0DAAkB;IAAlB,+EAAkB;;;IAJ/B,sEACE;IAAA,qEACE;IAAA,0HAKK;IACP,4DAAK;IACP,4DAAM;;;IAPqB,0DAAkB;IAAlB,2FAAkB;;;IAH/C,sEACE;IAAA,sHASM;IACR,4DAAM;;;;IAVE,0DAAkC;IAAlC,mGAAkC;;;IAcxC,sEACE;IAAA,2HACF;IAAA,4DAAM;;;IAIN,sEACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,4GACF;;;IAIA,uEACE;IAAA,iEACF;IAAA,4DAAO;;ACtBF,MAAM,oBAAoB;IAM/B,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE7D,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YACrD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAkC,CAAC,CAAC;YACpE,IAAI,CAAC,IAAI,CAAC,UAAU;QACtB,CAAC,CAAC;IACJ,CAAC;IAGD,cAAc,CAAC,GAAQ;QACrB,OAAO,GAAG,GAAG,CAAC,OAAO,OAAO;IAC9B,CAAC;;wFAlBU,oBAAoB;oGAApB,oBAAoB;QDXjC,iFACE;QAAA,qEAAK;QAAA,iFAAqB;QAAA,4DAAK;QACjC,4DAAc;QAEd,gHAWM;QAGN,4MAIc;QAEd,4MAIc;QAEd,4MAIc;;;QA9BR,0DAA6B;QAA7B,+FAA6B;;;;;;;;;;;;;;AEFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAClB;;;;;;AAS3C,MAAM,WAAW;IAEtB,YAAoB,iBAAoC,EAAU,WAAwB,EAAU,cAA8B,EAAU,SAAsB;QAA9I,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAa;IAAI,CAAC;IAEvK,IAAI;QACF,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IACxE,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC;QACzD,MAAM,aAAa,GAAG,4EAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9E,aAAa,CAAC,IAAI,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;YACzC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;gBACzB,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,IAA8B,CAAC,CAAC,EAAE;gBACzD,SAAS,QAAE,SAAS,CAAC,IAAI,CAAC,IAA8B,CAAC,CAAC,OAAO,0CAAE,EAAE;aACtE,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG;YACf,SAAS,EAAE,aAAa;YACxB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ;SAC1C,CAAC;QACF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,IAAI;QACF,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACxD,IAAI,cAAc,EAAE;YAClB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YACnD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC;YACrE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACxE;aACI;YACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gCAAgC,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACrF;IACH,CAAC;IAED,WAAW,CAAC,cAAsB;QAChC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,SAAS;QAC1D,MAAM,SAAS,GAAG,8EAAW,CAAC,aAAa,EAAE,8DAAS,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK;QACnD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC9C,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACpB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACnB,MAAM,YAAY,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC7C,IAAI,YAAY,CAAC,MAAM,KAAK,EAAE,CAAC,EAAE,EAAE;oBACjC,IAAI,YAAY,CAAC,SAAS,EAAE;wBAC1B,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,SAAS,CAAE;qBAC5F;oBACD,SAAS,CAAC,IAAI,CAAC,IAA8B,CAAC,GAAG,EAAE,CAAC;iBACrD;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,OAAO,SAAS,CAAC;IACnB,CAAC;;sEAzDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACvB;AACuB;AACX;AACoC;AACxD;;;;;;;;;;;;;;ICahC,iFACE;IAAA,uDACF;;IAAA,4DAAa;;;IAFkC,2EAAc;IAC3D,0DACF;IADE,qJACF;;;IAQA,iFACE;IAAA,uDACF;;IAAA,4DAAa;;;IAF6B,0EAAa;IACrD,0DACF;IADE,oJACF;;;IAIN,sEACE;IAAA,mFAAqF;IAAA,iEAAM;IAAA,4DAAe;IAC5G,4DAAM;;;IAKA,iFACE;IAAA,uDACF;;IAAA,4DAAa;;;IAFqC,2EAAc;IAC9D,0DACF;IADE,qJACF;;;IANN,sEACE;IAAA,iFACE;IAAA,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,iFACE;IAAA,iIAEa;IACf,4DAAa;IACf,4DAAiB;IACnB,4DAAM;;;IAL6B,0DAAmB;IAAnB,2FAAmB;;;IAUtD,2EAA0G;;;IAA7D,gHAAgD;;;;IASvF,qEACE;IAAA,qEAAI;IAAA,uDAAkB;;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,6EAAsF;IAA1B,8VAAyB;IAAC,iEAAM;IAAA,4DAAS;IACzG,4DAAK;IACP,4DAAK;;;;IAJC,0DAAkB;IAAlB,yIAAkB;IAClB,0DAAmB;IAAnB,2FAAmB;;;IAcrB,iFAA4D;IAAA,uDAAkB;;IAAA,4DAAa;;;IAA7C,0EAAa;IAAC,0DAAkB;IAAlB,yIAAkB;;;;IAiBpF,yEACE;IAAA,uEAAM;IAAA,uDAAgB;IAAA,4DAAO;IAC7B,uEAAM;IAAA,6EAAoE;IAA7B,2VAA4B;IAAC,iEAAM;IAAA,4DAAS;IAAA,4DAAO;IAClG,4DAAK;;;IAFG,0DAAgB;IAAhB,iFAAgB;;;IAUtB,iFAAkE;IAAA,uDAAS;IAAA,4DAAa;;;IAAtC,4EAAe;IAAC,0DAAS;IAAT,0EAAS;;;IAWzE,iFAA4D;IAAA,uDAAkB;;IAAA,4DAAa;;;IAA7C,0EAAa;IAAC,0DAAkB;IAAlB,yIAAkB;;ADvGnF,MAAM,gBAAgB;IAmB3B,YACS,SAAyC,EAChB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAgC;QAChB,SAAI,GAAJ,IAAI,CAAK;QAnB3C,SAAI,GAAS,IAAI,+CAAI,EAAE,CAAC;QACxB,cAAS,GAAG,6DAAS;QACrB,kBAAa,GAAG,MAAM,CAAC,IAAI,CAAC,6DAAS,CAAC,CAAC,IAAI,EAAE,CAAC;QAC9C,kBAAa,GAAG,MAAM,CAAC,IAAI,CAAC,8DAAa,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,oBAAe,GAAG,MAAM,CAAC,IAAI,CAAC,yDAAc,CAAC,CAAC,IAAI,EAAE,CAAC;QACrD,aAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,kDAAO,CAAC,CAAC,IAAI,EAAE,CAAC;QAEzC,oBAAe,GAAG,MAAM,CAAC,MAAM,CAAC,qDAAU,CAAC,CAAC,IAAI,EAAE,CAAC;QACnD,eAAU,GAAG,KAAK,CAAC;QAEnB,WAAM,GAAG;YACP,WAAW,EAAE;gBACX,MAAM,EAAE,KAAK;gBACb,YAAY,EAAE,6EAA6E;aAC5F;SACF;QAQD,2BAAsB,GAAG,IAAI,wDAAS,CAAC;YACrC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACpC,CAAC;QAIF,+BAA0B,GAAG,IAAI,wDAAS,CAAC;YACzC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACpC,CAAC;QAEF,0BAAqB,GAAG,IAAI,wDAAS,CAAC;YACpC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACzC,CAAC;QAjBA,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAqBD,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,wDAAS,CAAC;YACvC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC;YAC/F,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACpE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,kDAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzG,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtE,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SAC/B,CAAC;QACF,IAAI,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,QAAQ,EAAE;YAChD,IAAI,CAAC,iBAAiB,EAAE;SACzB;QACD,IACE,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,UAAU;YAC9C,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,UAAU;YAC9C,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,SAAS;YAC7C,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,SAAS,EAC7C;YACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,GAAsB,CAAC,CAAC;SACnC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAChE,IAAI,IAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,MAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,GAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAmC,CAAC,GAAG,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,EAAC;YAC1E,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,CAAC,EAAE,EAAE;YAClB,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,EAAE,EAAE;YACpB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IAED,UAAU,CAAC,GAAW;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAiC,CAAC,CAAC;IAC5D,CAAC;IAED,YAAY,CAAC,KAAU;;QACrB,MAAM,KAAK,SAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,qBAAqB,CAAC,0CAAE,KAAK,CAAC;QAC3E,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,qDAAS,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAED,eAAe,CAAC,cAAsB;QACpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,UAAU;;QACR,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,GAAG,SAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,SAAS,CAAC,0CAAE,KAAK,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,IAAI,SAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,KAAK,CAAC;YACjE,IAAI,CAAC,IAAI,CAAC,MAAM,SAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,0CAAE,KAAK,CAAC;YACjE,MAAM,SAAS,SAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,KAAK,CAAC;YAC9E,MAAM,KAAK,SAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,gBAAgB,CAAC,0CAAE,KAAK;YAC1E,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,CAAC,KAAK,KAAK,yDAAc,CAAC,IAAI,EAAE,EAAE,yBAAyB;oBAC9D,OAAO,CAAC,CAAC;iBACV;qBAAM;oBACL,OAAO,CAAC;iBACT;YACH,CAAC,CAAC;YACF,IAAI,SAAS,IAAI,KAAK,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,SAA4B,CAAC,EAAE,KAAK,EAAE;aACrE;YACD,IAAI,IAAI,CAAC,gBAAgB,KAAK,6DAAS,CAAC,QAAQ,EAAE;gBAChD,IAAI,CAAC,IAAI,CAAC,UAAU,SAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,0CAAE,KAAK,CAAC;gBACzE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;oBACzB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtC,OAAO;iBACR;aACF;YACD,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;IAEO,iBAAiB;QACvB,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,8DAAa,CAAC,SAAS,CAAC;QAC3F,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3C,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,8DAAa,CAAC,SAAS,CAAC;QAC3F,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,8DAAa,CAAC,WAAW,CAAC;QAC/F,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;IAEO,iBAAiB;IAEzB,CAAC;IAEO,aAAa;QACnB,OAAO,CACL,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,qDAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAC9E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;YAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;YAC1D,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAGO,iBAAiB;QACvB,OAAO,CAAC,OAAwB,EAAiC,EAAE;YACjE,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,sCAAsC,CAAC;YAChE,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC1B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;aACjD;QACH,CAAC;IACH,CAAC;;gFAzKU,gBAAgB,0MAqBjB,wEAAe;gGArBd,gBAAgB;QCb7B,wEAAqB;QAAA,uEAAY;QAAA,4DAAK;QACtC,yEACE;QAAA,0EACE;QAAA,sEACE;QAAA,iFACE;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,sEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,sEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,iFACE;QAAA,4HAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACN,uEACE;QAAA,kFACE;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,iFACE;QAAA,4HAEa;QACf,4DAAa;QACf,4DAAiB;QACnB,4DAAM;QACN,8GAEM;QACN,8GASM;QACR,4DAAO;QAEP,uEACE;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,0HAA0G;QAC1G,uEACE;QAAA,yEACE;QAAA,yEACE;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,iEAAS;QACX,4DAAQ;QACR,yEACE;QAAA,6GAKK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAEN,4EACE;QADyC,4IAAY,wBAAoB,SAAE,KAAK,IAAC;QACjF,2EACE;QAAA,uEACE;QAAA,sFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,kFACE;QAAA,4HAA2F;QAC7F,4DAAa;QACf,4DAAiB;QACjB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACF;QAAA,4DAAiB;QACnB,4DAAM;QACN,8EAAyC;QAAA,+DAAG;QAAA,4DAAS;QACvD,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,uEACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,uEACE;QAAA,sEACE;QAAA,6GAGK;QACP,4DAAK;QACP,4DAAM;QACN,4EAEE;QADA,4IAAY,wBAAoB,SAAE,KAAK,IAAC;QACxC,sFACE;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,kFACE;QAAA,4HAAwF;QAC1F,4DAAa;QACf,4DAAiB;QACjB,8EAAyC;QAAA,+DAAG;QAAA,4DAAS;QACvD,4DAAO;QACP,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,2EACE;QAAA,2EACE;QAAA,sFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,kFACE;QAAA,4HAA2F;QAC7F,4DAAa;QACf,4DAAiB;QACjB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACF;QAAA,4DAAiB;QACnB,4DAAM;QACR,4DAAO;QACT,4DAAM;QAGN,2EACE;QAAA,8EAA+D;QAAtB,yIAAS,eAAW,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC9E,8EAAiF;QAAvC,yIAAS,gBAAY,IAAC;QAAiB,oEAAQ;QAAA,4DAAS;QACpG,4DAAM;QAlIR,4DACE;;QAAM,0DAAiC;QAAjC,8FAAiC;QAiBF,2DAAgB;QAAhB,sFAAgB;QAUjB,0DAAY;QAAZ,iFAAY;QAMxC,0DAAgB;QAAhB,gFAAgB;QAGhB,0DAAkD;QAAlD,iHAAkD;QAc5C,0DAA+B;QAA/B,+FAA+B;QASjB,2DAAkB;QAAlB,wFAAkB;QAUtC,0DAAoC;QAApC,iGAAoC;QAMJ,0DAAgB;QAAhB,sFAAgB;QAiBU,2DAAoB;QAApB,wFAAoB;QAMzC,0DAAmC;QAAnC,gGAAmC;QAK1C,0DAAkB;QAAlB,wFAAkB;QAMhD,0DAAwC;QAAxC,qGAAwC;QAKV,0DAAgB;QAAhB,sFAAgB;;;;;;;;;;;;;;ACjHxD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICD9C,6EACE;;IAAA,kFAAsE;IACtE,yEACE;IAAA,6EAA0G;IAC1G,iFACmB;IACrB,4DAAM;IACR,4DAAU;;;;IAP0C,sJAA2B;IAC1D,0DAA8B;IAA9B,iGAA8B;IAEa,0DAA8B;IAA9B,iGAA8B;IAC3B,0DAA8B;IAA9B,iGAA8B;;ADDrG,MAAM,IAAI,GAAG;IACX,CAAC,6DAAS,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,6DAAS,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,6DAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;IACvB,CAAC,6DAAS,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,6DAAS,CAAC,KAAK,CAAC,EAAE,CAAC;IACpB,CAAC,6DAAS,CAAC,KAAK,CAAC,EAAE,CAAC;IACpB,CAAC,6DAAS,CAAC,KAAK,CAAC,EAAE,CAAC;IACpB,CAAC,6DAAS,CAAC,KAAK,CAAC,EAAE,CAAC;IACpB,CAAC,6DAAS,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,6DAAS,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC,6DAAS,CAAC,SAAS,CAAC,EAAE,EAAE;IACzB,CAAC,6DAAS,CAAC,SAAS,CAAC,EAAE,EAAE;IACzB,CAAC,6DAAS,CAAC,UAAU,CAAC,EAAE,EAAE;IAC1B,CAAC,6DAAS,CAAC,UAAU,CAAC,EAAE,EAAE;IAC1B,CAAC,6DAAS,CAAC,QAAQ,CAAC,EAAE,EAAE;IACxB,CAAC,6DAAS,CAAC,OAAO,CAAC,EAAE,EAAE;IACvB,CAAC,6DAAS,CAAC,KAAK,CAAC,EAAE,EAAE;CACtB;AAOM,MAAM,iBAAiB;IAU5B,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QAL1C,UAAK,GAAG,MAAM,CAAC,IAAI,CAAC,6DAAS,CAAC,CAAC;QAC/B,cAAS,GAAG,6DAAS;QAErB,mBAAc,GAAG,CAAC,CAAC;IAE2B,CAAC;IAE/C,eAAe;QACb,MAAM,IAAI,GAAc,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI;QACxD,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,6DAAS,CAAC,IAA8B,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,WAAW,CAAC,IAAY;QACtB,OAAO,6DAAS,CAAC,IAA8B,CAAC,CAAC;IACnD,CAAC;;kFAnBU,iBAAiB;iGAAjB,iBAAiB;;;;;;QC9B9B,sEACE;QAAA,sFACE;QAAA,qHAOU;QACZ,4DAAgB;QAChB,iFAA2C;QAC7C,4DAAM;;QAVwB,0DAAU;QAAV,8EAAU;;;;;;;;;;;;;;ACAxC;AAAA;AAAA;AAAyD;AAIlD,MAAM,SAAS;IAWpB;QAVA,gBAAW,GAAe,sEAAU,CAAC,IAAI,CAAC;QAC1C,SAAI,GAAW,WAAW,CAAC;QAC3B,UAAK,GAAY,KAAK,CAAC;QACvB,eAAU,GAAW,KAAK,CAAC;QAC3B,eAAU,GAAW,CAAC,SAAS,CAAC;QAChC,aAAQ,GAAG;YACT,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,EAAE;SACT;IAEe,CAAC;IAEjB,KAAK,CAAC,UAA2B,EAAE,QAAmB,EAAE,QAAkB,EAAE,WAAmB;IAE/F,CAAC;IACD,MAAM,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QACjE,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,WAAW,EAAE;YACpD,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;YACtE,IAAI,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,mBAAmB,EAAE;gBAC7D,OAAO,KAAK,CAAC;aACd;YACD,IAAI,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,EAAE;gBAC3C,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,mBAAmB,EAAE;gBAC7D,OAAO,KAAK,CAAC;aACd;YACD,OAAO,KAAK,CAAC;SACd;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,CAAC,QAAmB,EAAE,QAAkB,EAAE,WAAmB;QAClE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,mBAAmB,EAAE;YACzF,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAC,KAAK,CAAC;YAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACjD;IACH,CAAC;IAEO,eAAe,CAAC,QAAmB,EAAE,QAAkB;QAC7D,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC;QACpD,MAAM,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC;QACrE,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,IAAI;YACvB,YAAY,EAAE,MAAM;YACpB,UAAU,EAAE,sEAAU,CAAC,IAAI;YAC3B,OAAO,EAAE,2BAA2B,YAAY,SAAS;SAC1D;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CM,MAAM,iBAAiB;IAE5B,YAAoB,iBAAoC,EAAU,WAAwB;QAAtE,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAG/F,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IACD,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;;kFAbU,iBAAiB;iGAAjB,iBAAiB;QCX9B,iFACE;QAAA,yEACE;QAAA,uEAA2B;QAAA,4EAA0B;QAAA,oEAAS;QAAA,4DAAS;QAAA,4DAAI;QAC3E,uEAA2B;QAAA,4EAA0B;QAAA,+DAAI;QAAA,4DAAS;QAAA,4DAAI;QACtE,uEAAqB;QAAA,4EAA0B;QAAA,+DAAG;QAAA,4DAAS;QAAA,4DAAI;QACjE,4DAAM;QACN,0EACE;QAAA,yEAAwB;QAAA,yEAAa;QAAA,4DAAK;QAC5C,4DAAM;QACN,0EACE;QAAA,6EAA2C;QAAjB,0IAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACxD,6EAA2C;QAAjB,0IAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QAC1D,4DAAM;QACR,4DAAc;;;;;;;;;;;;;;ACZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACkC;AACrB;;;AAGpE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gFAAiB,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAE;IAC9C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qGAAwB,EAAE;IAC1D,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;ACfmD;AAGhB;AACtB;;;AAGrC,MAAM,cAAc,GAAG,8BAA8B;AAK9C,MAAM,kBAAkB;IAI7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,wBAAmB,GAAkB,IAAI,CAAC;QAGxC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;YAC5D,CAAC,CAAC;SACH;IACH,CAAC;IAGD,iBAAiB;IAEjB,gDAAgD;IAChD,kDAAkD;IAClD,yDAAyD;IACzD,gCAAgC;IAChC,kCAAkC;IAClC,OAAO;IACP,IAAI;IAEE,eAAe,CAAC,MAAc;;YAClC,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,cAAc,GAAG,uBAAuB,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,IAAI,CACtK,0DAAG,CAAC,CAAC,CAAC,EAAE;;gBACN,MAAM,WAAW,SAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,0CAAE,KAAK;gBACvE,OAAO,WAAW,IAAI,EAAE,CAAC;YAC3B,CAAC,CAAC,CACH;QACH,CAAC;KAAA;IAGO,KAAK;QACX,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,GAAG,wEAAW,CAAC,gBAAgB,CAAC,QAAQ,IAAI,wEAAW,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC;QAClI,MAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,wEAAW,CAAC,gBAAgB,CAAC,QAAQ,IAAI,wEAAW,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;SAC1H,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iEAAiE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;IACjH,CAAC;IAGO,eAAe;QACrB,OAAO,IAAI,gEAAW,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,mBAAoB,EAAE,CAAC,CAAC;IACzE,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,+DAAU,CAAC,EAAE,UAAU,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IACpE,CAAC;IAEa,iBAAiB;;YAC7B,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAChC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;QACH,CAAC;KAAA;IAEO,KAAK,CAAC,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;;oFA7DU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACVoD;AAIvC;AAIjC,IAAa,IAAI,GAAjB,MAAa,IAAI;IAaf,YAAY,WAA6B,IAAI,EAAE,KAAa,CAAC,EAAE,OAAe,EAAE,EAAE,QAAmB,EAAE,EAAE,SAAkB,KAAK;QAZhH,SAAI,GAAW,EAAE,CAAC;QAClB,OAAE,GAAW,CAAC,CAAC;QAEf,UAAK,GAAc,EAAE,CAAC;QAEtB,eAAU,GAAgB,EAAE,CAAC;QAC7B,mBAAc,GAAc,EAAE,CAAC;QAC/B,QAAG,GAAY,OAAO,CAAC,IAAI,CAAC;QAE5B,YAAO,GAAmB,IAAI,CAAC;QAI7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM;IACtB,CAAC;IAED,uBAAuB;QACrB,MAAM,MAAM,GAAc,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACrC,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,uBAAuB,CAAC,MAAiB;QAC/C,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC7C,IAAI,CAAC,MAAM,CAAC,IAAkC,CAAC,EAAE;oBAC/C,MAAM,CAAC,IAAkC,CAAC,GAAG,CAAC,CAAC;iBAChD;gBACD,MAAM,CAAC,IAAkC,CAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAQ,CAAC,KAAK,CAAC,IAAkC,CAAC,IAAI,CAAC,CAAC,CAAC;YACjH,CAAC,CAAC;SACH;IACH,CAAC;IAEO,mBAAmB,CAAC,MAAiB;QAC3C,IAAI,gBAAgB,GAAY,IAAI,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,MAAM,CAAC,GAAG,EAAE;gBACd,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;gBAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;oBAChC,IAAI,CAAC,MAAM,CAAC,IAAkC,CAAC,EAAE;wBAC/C,MAAM,CAAC,IAAkC,CAAC,GAAG,CAAC,CAAC;qBAChD;oBACD,MAAM,CAAC,IAAkC,CAAE,IAAI,CAAC,CAAC,aAAM,CAAC,GAAG,0CAAE,KAAK,CAAC,IAAkC,MAAK,CAAC,CAAC,CAAC;gBAC/G,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAoC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBAC9F,gBAAgB,GAAG,KAAK,CAAC;iBAC1B;aACF;iBAAM;gBACL,gBAAgB,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;QACH,IAAI,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACnE,MAAM,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,MAAM,CAAC,oBAAkD,CAAC,EAAE;gBAC/D,MAAM,CAAC,oBAAkD,CAAC,GAAG,CAAC,CAAC;aAChE;YACD,MAAM,CAAC,oBAAkD,CAAE,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,oBAAkD,CAAC,IAAI,CAAC,CAAC,CAAC;SAChJ;IACH,CAAC;CACF;AAjEiB;IAAf,+EAAY,EAAE;;kCAAmB;AAClB;IAAf,+EAAY,EAAE;;gCAAgB;AACf;IAAf,+EAAY,EAAE;;iCAAa;AACZ;IAAf,+EAAY,EAAE;;mCAAuB;AACtB;IAAf,+EAAY,EAAE;;uCAA6B;AAC5B;IAAf,+EAAY,EAAE;;wCAA8B;AAC7B;IAAf,+EAAY,EAAE;;4CAAgC;AAC/B;IAAf,+EAAY,EAAE;;iCAA6B;AAC5B;IAAf,+EAAY,EAAE;;wCAAwB;AACvB;IAAf,+EAAY,EAAE;;qCAAgC;AAC/B;IAAf,+EAAY,EAAE;;oCAAgB;AAXpB,IAAI;IADhB,+EAAY,EAAE;;GACF,IAAI,CAkEhB;AAlEgB;AAoEjB,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,mCAAiB;IACjB,+BAAa;IACb,6BAAW;IACX,+BAAa;AACf,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED,IAAY,OAcX;AAdD,WAAY,OAAO;IACjB,wBAAa;IACb,kCAAuB;IACvB,gCAAqB;IACrB,wCAA6B;IAC7B,wCAA6B;IAC7B,gCAAqB;IACrB,yEAA+D;IAC/D,uDAA6C;IAC7C,uDAA4C;IAC5C,uDAA6C;IAC7C,iEAAuD;IACvD,mEAAyD;IACzD,4CAAkC;AACpC,CAAC,EAdW,OAAO,KAAP,OAAO,QAclB;AAED,IAAY,UAQX;AARD,WAAY,UAAU;IACpB,6CAA+B;IAC/B,6CAA+B;IAC/B,+CAAiC;IACjC,+CAAiC;IACjC,2CAA6B;IAC7B,2CAA6B;IAC7B,iCAAmB;AACrB,CAAC,EARW,UAAU,KAAV,UAAU,QAQrB;AAED,MAAM,iBAAiB,GAAG;IACxB,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,6CAAQ,CAAC,IAAI,EAAE,6CAAQ,CAAC,MAAM,EAAE,6CAAQ,CAAC,KAAK,CAAC;IACvE,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,6CAAQ,CAAC,GAAG,EAAE,6CAAQ,CAAC,MAAM,EAAE,6CAAQ,CAAC,MAAM,CAAC;IACtE,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,6CAAQ,CAAC,MAAM,EAAE,6CAAQ,CAAC,KAAK,EAAE,6CAAQ,CAAC,MAAM,CAAC;IAC3E,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,6CAAQ,CAAC,IAAI,CAAC;CACvC;;;;;;;;;;;;;;;;;;;;;AClHuE;AAKxE,IAAa,GAAG,GAAhB,MAAa,GAAG;IAQd,YAAY,EAAU,EAAE,IAAY,EAAE,KAAe,EAAE,OAAmB,EAAE,KAAgB;QAC1F,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;AAfiB;IAAf,+EAAY,EAAE;;gCAAa;AACZ;IAAf,+EAAY,EAAE;;+BAAY;AACX;IAAf,+EAAY,EAAE;;iCAAc;AACb;IAAf,+EAAY,EAAE;;kCAAiB;AAChB;IAAf,+EAAY,EAAE;;kCAAiB;AAChB;IAAf,+EAAY,EAAE;;oCAAoB;AANxB,GAAG;IADf,+EAAY,EAAE;;GACF,GAAG,CAgBf;AAhBe;AAmBhB,IAAY,QAQX;AARD,WAAY,QAAQ;IAClB,uBAAW;IACX,6BAAiB;IACjB,2BAAe;IACf,yBAAa;IACb,6BAAiB;IACjB,6BAAiB;IACjB,yBAAa;AACf,CAAC,EARW,QAAQ,KAAR,QAAQ,QAQnB;AAED,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,+BAAiB;IACjB,mCAAqB;IACrB,2BAAa;IACb,2BAAa;AACf,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;;;;;;;;;;;;;;;;;;;ACvC8C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAE,CAAC,CAAC;KAChE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { AbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\r\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\r\nimport { DamageType } from \"src/app/shared/magic-school\";\r\nimport { Creature } from \"src/app/sim/creature\";\r\nimport { Character } from \"../character\";\r\n\r\nexport class Attack implements AbilityInterface {\r\n\r\n  magicSchool: DamageType;\r\n  name: string;\r\n  onGCD: boolean;\r\n  internalCD: number = 0;\r\n\r\n  constructor() {\r\n    this.magicSchool = DamageType.physical;\r\n    this.name = 'Attack'\r\n    this.onGCD = false;\r\n  }\r\n  onHit(rollResult: AttackTableEnum, attacker: Character, defender: Creature): void | damageTakenInterface {\r\n    let damage = 0;\r\n    if (rollResult && rollResult !== AttackTableEnum.miss && rollResult !== AttackTableEnum.dodge && rollResult !== AttackTableEnum.parry) {\r\n      damage = rollDamage(attacker.weaponDamageMin, attacker.weaponDamageMax, defender)\r\n      if (rollResult === AttackTableEnum.glancing) {\r\n        damage = damage * 0.65\r\n      } else if (rollResult === AttackTableEnum.crit) {\r\n        damage = damage * 2;\r\n      }\r\n    }\r\n    return {\r\n      damageAmount: Math.round(damage),\r\n      damageType: DamageType.physical,\r\n      circumstance: this.name,\r\n      comment: rollResult\r\n    }\r\n  }\r\n  onCast(attacker: Character, defender: Creature, timeElapsed: number): boolean {\r\n    return false;\r\n  }\r\n  onCheck(attacker: Character, defender: Creature,  timeElapsed: number): void | damageTakenInterface {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nconst rollDamage = (damageMin: number, damageMax: number, defender: Creature | Character): number => {\r\n  const rawDamage = Math.floor(Math.random() * (damageMax - damageMin + 1) + damageMin);\r\n  const armorReduction = defender.armor / (defender.armor - 22167.5 + 467.5 * defender.level)\r\n  return rawDamage * armorReduction\r\n}\r\n","import { AbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\r\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\r\nimport { DamageType } from \"src/app/shared/magic-school\";\r\nimport { Creature } from \"src/app/sim/creature\";\r\nimport { Character } from \"../character\";\r\n\r\nexport class HolyShield implements AbilityInterface {\r\n\r\n  magicSchool: DamageType;\r\n  name: string;\r\n  onGCD: boolean;\r\n  internalCD: number;\r\n  lastCastTime: number;\r\n\r\n  constructor() {\r\n    this.name = 'Holy Shield';\r\n    this.onGCD = true;\r\n    this.magicSchool = DamageType.holy;\r\n    this.internalCD = 10000\r\n    this.lastCastTime = -9999999999\r\n  }\r\n\r\n  onHit(rollResult: AttackTableEnum, attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n  }\r\n  onCast(attacker: Character, defender: Creature, timeElapsed: number): boolean {\r\n    if (attacker.spec.talents.holyShield && this.lastCastTime + this.internalCD <= timeElapsed) {\r\n      let charges = 4\r\n      charges += attacker.spec.talents.improvedHolyShield * 2\r\n      attacker.buffs[this.name] = { charges: charges, expires: timeElapsed + 10000 }\r\n      this.lastCastTime = timeElapsed;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  onCheck(attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n    if (attacker.buffs[this.name] && attacker.buffs[this.name].expired >= timeElapsed) {\r\n      attacker.buffs[this.name].charges = 0;\r\n    }\r\n  }\r\n\r\n  onReactive(rollResult: AttackTableEnum, attacker: Creature, defender: Character, timeElapsed: number): damageTakenInterface | void {\r\n    if (rollResult === AttackTableEnum.block && defender.buffs[this.name] && defender.buffs[this.name].charges > 0) {\r\n      const damageAmount = 155 + (defender.spellDamage * 0.05) * (1 + (10 * defender.spec.talents.improvedHolyShield / 100))\r\n      return {\r\n        damageAmount: damageAmount,\r\n        damageType: DamageType.holy,\r\n        circumstance: this.name\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { JsonProperty, serialize } from \"typescript-json-serializer\";\nimport { GemSocketColor } from \"./item/item\";\nimport { Gem } from \"./item/gem\";\n\n\n@serialize\nexport class GemSocket {\n  @JsonProperty() color: GemSocketColor;\n  @JsonProperty() gem: Gem | null\n\n  constructor(color: GemSocketColor) {\n    this.color = color;\n    this.gem = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { CombatService, TimeSlotResults } from '../combat.service';\r\nimport { Creature } from '../creature';\r\nimport { SharedDataService } from '../../shared/shared-data.service'\r\nimport { SaveService } from 'src/app/save.service';\r\nimport { Attack } from 'src/app/character/abilities/attack';\r\nimport { SealOfVengeance } from 'src/app/character/abilities/seal-of-vengeance';\r\nimport { HolyShield } from 'src/app/character/abilities/holy-shield';\r\nimport { BossAttack } from '../boss-abilities/boss-attack';\r\nimport { Consecration } from 'src/app/character/abilities/consecration';\r\nimport { Judgement } from 'src/app/character/abilities/judgement';\r\nimport { AbilityInterface, BossAbilityInterface } from 'src/app/shared/abilityInterface';\r\n\r\nconst TWO_MINUTES = 2 * 60 * 1000\r\n\r\n\r\n@Component({\r\n  selector: 'app-sim',\r\n  templateUrl: './sim.component.html',\r\n  styleUrls: ['./sim.component.scss']\r\n})\r\nexport class SimComponent {\r\n  constructor(private combatService: CombatService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  start() {\r\n    this.combatService.startCombat(TWO_MINUTES)\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div style=\"margin-bottom: 30px\" class=\"flex-grid\">\r\n  <div class=\"flex-fill left\">\r\n    <h3>Buffs / Debuffs</h3>\r\n    <button class=\"full-width\" mat-raised-button color=\"primary\" (click)=\"start()\">Start Sim</button>\r\n  </div>\r\n  <div class=\"flex-fill right\">\r\n    <h3>Sim Results</h3>\r\n    <app-sim-results></app-sim-results>\r\n  </div>\r\n</div>\r\n<!-- BAR CHART -->\r\n<app-bar-chart></app-bar-chart>\r\n","  <a *ngIf=\"item.id !== 0\" attr.data-wowhead=\"item={{item.id}}\">\n    <div class=\"icon\" [ngStyle]=\"{background: backgroundUrl}\"> </div>\n  </a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from '../item/item';\n\n@Component({\n  selector: 'app-character-item-display',\n  templateUrl: './character-item-display.component.html',\n  styleUrls: ['./character-item-display.component.scss']\n})\nexport class CharacterItemDisplayComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  item!: Item\n\n  @Input()\n  backgroundUrl!: string;\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DatabaseService } from '../database.service';\nimport { Enchant } from './enchant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnchantService {\n\n  enchants: BehaviorSubject<Enchant[]> = new BehaviorSubject<Enchant[]>([]);\n\n  constructor(private databaseService: DatabaseService) {\n    this.init();\n  }\n\n  async init() {\n    const collection = await this.databaseService.enchantCollection\n    this.enchants.next(await collection.find());\n    this.watchDBForChanges()\n  }\n\n  async addEnchant(enchant: Enchant) {\n    const collection = await this.databaseService.enchantCollection\n    collection.updateOne({ _id: enchant._id }, enchant, { upsert: true })\n  }\n\n\n  private async watchDBForChanges() {\n    const collection = await this.databaseService.enchantCollection;\n    for await (const change of collection.watch()) {\n      const currentGearOptions = this.enchants.value;\n      const { operationType } = change;\n\n      switch (operationType) {\n        case \"insert\": {\n          const { documentKey, fullDocument, } = change as globalThis.Realm.Services.MongoDB.InsertEvent<Enchant>;\n          currentGearOptions.push(fullDocument);\n          break;\n        }\n        case \"replace\": {\n          const { documentKey, fullDocument, } = change as globalThis.Realm.Services.MongoDB.ReplaceEvent<Enchant>;\n          const index = currentGearOptions.findIndex((gear) => gear.id === fullDocument._id);\n          currentGearOptions[index] = fullDocument;\n          break;\n        }\n        case \"delete\": {\n          const { documentKey } = change as globalThis.Realm.Services.MongoDB.DeleteEvent<Enchant>;\n          const index = currentGearOptions.findIndex((gear) => gear.id === documentKey._id);\n          currentGearOptions.splice(index, 1);\n          break;\n        }\n      }\n      this.enchants.next(currentGearOptions);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  blizzardAPICreds: {\n    clientId: 'a6ca613df9694027ade03db42b4437b0',\n    clientSecret: '7sIdzI3PCV66ElFOYgWZxwIcWrU1zQUU'\n  }\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  @Input()\n  errorMessage: string = ''\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex-grid error-box\">\n  <div class=\"icon-space icon center\">\n    <mat-icon >error</mat-icon>\n  </div>\n  <div class=\"padding-left-sm flex-fill\">\n    {{errorMessage}}\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GearSlots } from '../character/gearslot';\nimport { Enchant } from '../item/enchant';\nimport { EnchantService } from '../item/enchant.service';\nimport { ItemStats, ItemStatsEnum } from '../item/item-stats';\n\n@Component({\n  selector: 'app-new-enchant',\n  templateUrl: './new-enchant.component.html',\n  styleUrls: ['./new-enchant.component.scss']\n})\nexport class NewEnchantComponent implements OnInit {\n\n  attributes = Object.values(ItemStatsEnum).sort();\n\n  enchant: Enchant = { _id: 0, id: 0, name: '', stats: {}, slot: GearSlots.head }\n  GearSlotsKeys = Object.keys(GearSlots).sort();\n\n  newEnchantFG!: FormGroup;\n\n  addAttributesFormGroup = new FormGroup({\n    attributeName: new FormControl(''),\n    attributeValue: new FormControl('')\n  })\n\n  constructor(\n    public dialogRef: MatDialogRef<NewEnchantComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    dialogRef.disableClose = true;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getAttributes() {\n    const keys = [];\n    for (const [key] of Object.entries(this.enchant.stats)) {\n      keys.push(key as keyof ItemStats);\n    }\n    return keys;\n  }\n\n  addAttribute(event: any) {\n    const key = this.addAttributesFormGroup.get('attributeName');\n    const value = this.addAttributesFormGroup.get('attributeValue')\n    if(key && value){\n      this.enchant.stats[key.value as keyof typeof ItemStatsEnum] = value.value;\n      key?.setValue('');\n      value?.setValue('');\n      event.stopPropagation();\n    }\n  }\n\n  removeStat(key: string) {\n    delete this.enchant.stats[key as keyof typeof ItemStatsEnum];\n  }\n\n  ngOnInit(): void {\n    this.newEnchantFG = new FormGroup({\n      tbcdbLink: new FormControl('', [Validators.required, this.validateTBCDBLink()]),\n      enchantName: new FormControl('', [Validators.required]),\n      gearSlot: new FormControl({ value: this.data.gearSlot, disabled: true }, [Validators.required])\n    });\n  }\n\n  createItem() {\n    if (this.newEnchantFG.valid) {\n      this.enchant.name = this.newEnchantFG.get('enchantName')?.value\n      this.enchant.slot = this.data.gearSlot;\n\n    }\n    this.dialogRef.close(this.enchant);\n  }\n\n\n  private validateTBCDBLink(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const regEx = new RegExp(/^https:\\/\\/tbcdb.com\\/\\?item\\=(\\d+)$/)\n      const matchers = control.value.match(regEx);\n      if (matchers && matchers[1]) {\n        this.enchant._id = matchers[1]\n        this.enchant.id = matchers[1]\n        return null;\n      } else {\n        return { invalidLink: { value: control.value } }\n      }\n    }\n  }\n\n}\n","<h1 mat-dialog-title>New Enchant</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"newEnchantFG\">\n    <div>\n      <mat-form-field>\n        <mat-label>tbcdb link</mat-label>\n        <input formControlName=\"tbcdbLink\" matInput placeholder=\"https://tbcdb.com/?item=29068\">\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <mat-label>Enchant Name</mat-label>\n        <input formControlName=\"enchantName\" matInput placeholder=\"Justicar Faceguard\">\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <mat-label>For Gear Slot</mat-label>\n        <mat-select formControlName=\"gearSlot\">\n          <mat-option *ngFor=\"let slot of GearSlotsKeys\" [value]=\"slot\">\n            {{slot | humanize}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <h3>Attributes</h3>\n      <div>\n        <table>\n          <thead>\n            <th>Attribute</th>\n            <th>Value</th>\n            <th></th>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let key of getAttributes()\">\n              <td>{{key | humanize}}</td>\n              <td>{{enchant.stats[key]}}</td>\n              <td><button style=\"float:right;\" mat-raised-button color=\"warn\" (click)=\"removeStat(key)\">Remove</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </form>\n\n  <form [formGroup]=\"addAttributesFormGroup\" (ngSubmit)=\"addAttribute($event); false\">\n    <div class=\"flex-grid flex-space-between\">\n      <div>\n        <mat-form-field class=\"small-form-field\">\n          <mat-label>Attribute</mat-label>\n          <mat-select formControlName=\"attributeName\">\n            <mat-option *ngFor=\"let key of attributes\" [value]=\"key\">{{key | humanize}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field style=\"padding-left: 10px;\" class=\"small-form-field\">\n          <mat-label>Value</mat-label>\n          <input formControlName=\"attributeValue\" matInput placeholder=\"0\">\n        </mat-form-field>\n      </div>\n      <button mat-raised-button color=\"accent\">Add</button>\n    </div>\n  </form>\n  <div mat-dialog-actions class=\"flex-grid flex-space-between\">\n    <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"createItem()\" cdkFocusInitial>Add Gear</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { GearSlots } from '../character/gearslot';\r\nimport { GemSocketColor, Item } from '../item/item';\r\n\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DatabaseService } from '../database.service';\r\nimport { ItemStatsEnum } from '../item/item-stats';\r\nimport { Gem } from '../item/gem';\r\nimport { deserialize } from 'typescript-json-serializer';\r\nimport { SharedDataService } from '../shared/shared-data.service';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GearService {\r\n\r\n\r\n  gearOptions: BehaviorSubject<Item[]> = new BehaviorSubject<Item[]>([]);\r\n\r\n  constructor(private databaseService: DatabaseService, private sharedDataService: SharedDataService) {\r\n    this.initGearList();\r\n  }\r\n\r\n  async addGearForSlot(gear: Item, gearSlot: GearSlots) {\r\n    const collection = await this.databaseService.gearCollection\r\n    return collection.updateOne({ id: gear._id }, gear, { upsert: true });\r\n  }\r\n\r\n  applyGemsToGear(gemLogic: GemAlterationInterface) {\r\n    const gearOptions = this.gearOptions.value\r\n    gearOptions.forEach((item: Item) => {\r\n      item.gemSockets.forEach(socket => {\r\n        gemLogic.logic.forEach(logicalInsertion => {\r\n          if (logicalInsertion.gem && logicalInsertion.setBonusAttribute && logicalInsertion.socketColor) {\r\n            if (item.gemSocketBonus[logicalInsertion.setBonusAttribute as keyof typeof ItemStatsEnum] && socket.color === logicalInsertion.socketColor) {\r\n              socket.gem = logicalInsertion.gem\r\n            } else if (socket.color === GemSocketColor.meta) {\r\n              socket.gem = gemLogic.defaultMeta\r\n            } else {\r\n              socket.gem = gemLogic.default\r\n            }\r\n          } else if (socket.color === GemSocketColor.meta) {\r\n            socket.gem = gemLogic.defaultMeta\r\n          } else {\r\n            socket.gem = gemLogic.default\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this.gearOptions.next(gearOptions);\r\n    this.sharedDataService.gemLogic = gemLogic;\r\n  }\r\n\r\n\r\n\r\n  /* PRIVATE */\r\n\r\n\r\n\r\n  private async initGearList() {\r\n    try {\r\n      await this.GetItemsFromDB();\r\n      await this.watchDBForChanges();\r\n    } catch (err) {\r\n      console.error(\"Failed to log in\", err);\r\n      return err;\r\n    }\r\n  }\r\n\r\n  private async GetItemsFromDB(): Promise<void> {\r\n    const items: Item[] = [];\r\n    const collection = await this.databaseService.gearCollection\r\n    const dbJSONItems = await collection.find();\r\n    dbJSONItems.forEach(jsonItem => {\r\n      items.push(deserialize(jsonItem, Item));\r\n    });\r\n    this.gearOptions.next(items);\r\n  }\r\n\r\n  private async watchDBForChanges() {\r\n    const collection = await this.databaseService.gearCollection;\r\n    for await (const change of collection.watch()) {\r\n      const currentGearOptions = this.gearOptions.value;\r\n      const { operationType } = change;\r\n\r\n      switch (operationType) {\r\n        case \"insert\": {\r\n          const { documentKey, fullDocument, } = change as globalThis.Realm.Services.MongoDB.InsertEvent<Item>;\r\n          currentGearOptions.push(fullDocument);\r\n          break;\r\n        }\r\n        case \"replace\": {\r\n          const { documentKey, fullDocument, } = change as globalThis.Realm.Services.MongoDB.ReplaceEvent<Item>;\r\n          const index = currentGearOptions.findIndex((gear) => gear.id === fullDocument._id);\r\n          currentGearOptions[index] = fullDocument;\r\n          break;\r\n        }\r\n        case \"delete\": {\r\n          const { documentKey } = change as globalThis.Realm.Services.MongoDB.DeleteEvent<Item>;\r\n          const index = currentGearOptions.findIndex((gear) => gear.id === documentKey._id);\r\n          currentGearOptions.splice(index, 1);\r\n          break;\r\n        }\r\n      }\r\n      this.gearOptions.next(currentGearOptions);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface GemInsertionLogic {\r\n  setBonusAttribute: ItemStatsEnum | null,\r\n  socketColor: GemSocketColor | null,\r\n  gem: Gem | null\r\n}\r\n\r\nexport interface GemAlterationInterface {\r\n  default: Gem | null,\r\n  defaultMeta: Gem | null,\r\n  logic: GemInsertionLogic[]\r\n}\r\n\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Character } from '../character/character';\r\nimport { GearSlots } from '../character/gearslot';\r\nimport { Item } from '../item/item';\r\nimport { ItemStats, ItemStatsEnum, ItemType } from '../item/item-stats';\r\nimport { GearService } from '../gear/gear.service';\r\nimport { NewGearComponent } from '../new-gear/new-gear.component';\r\nimport { SharedDataService } from '../shared/shared-data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: `app-gear-selector`,\r\n  templateUrl: `./gear-selector.component.html`,\r\n  styleUrls: [`./gear-selector.component.scss`]\r\n})\r\nexport class GearSelectorComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input()\r\n  gearType!: GearSlots;\r\n\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatSort)\r\n  sort!: MatSort;\r\n\r\n  dataSourceGearOptions: MatTableDataSource<Item> = new MatTableDataSource<Item>();\r\n  character!: Character;\r\n  ItemStatsEnum = ItemStatsEnum;\r\n  gearOptions: Item[] = [];\r\n\r\n  constructor(private sharedDataService: SharedDataService, private gearService: GearService, public dialog: MatDialog, private snackbar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedDataService.character.subscribe(character => this.character = character);\r\n    this.gearService.gearOptions.subscribe(newGearOptions => {\r\n      this.gearOptions = newGearOptions.filter(gear => {\r\n        if (this.gearType === GearSlots.fingerOne || this.gearType === GearSlots.fingerTwo) {\r\n          return gear.validSlot?.includes(GearSlots.fingerOne) || gear.validSlot?.includes(GearSlots.fingerTwo)\r\n        } else if (this.gearType === GearSlots.trinketOne || this.gearType === GearSlots.trinketTwo) {\r\n          return gear.validSlot?.includes(GearSlots.trinketOne) || gear.validSlot?.includes(GearSlots.trinketTwo)\r\n        } else {\r\n          return gear.validSlot?.includes(this.gearType)\r\n        }\r\n      })\r\n      this.dataSourceGearOptions.data = this.gearOptions;\r\n    })\r\n    this.displayedColumns = [\r\n      // stats\r\n      `name`, `stats.${ItemStatsEnum.stamina}`, `stats.${ItemStatsEnum.intellect}`,\r\n      `stats.${ItemStatsEnum.strength}`, `stats.${ItemStatsEnum.agility}`, `stats.${ItemStatsEnum.spirit}`,\r\n      // defense\r\n      `stats.${ItemStatsEnum.armor}`, `stats.${ItemStatsEnum.defenseRating}`, `stats.${ItemStatsEnum.dodgeRating}`,\r\n      `stats.${ItemStatsEnum.parryRating}`, `stats.${ItemStatsEnum.blockRating}`, `stats.${ItemStatsEnum.blockValue}`,\r\n      //spell\r\n      `stats.${ItemStatsEnum.spellHitRating}`, `stats.${ItemStatsEnum.spellCritRating}`, `stats.${ItemStatsEnum.spellDamage}`,\r\n      //melee\r\n      `stats.${ItemStatsEnum.meleeHitRating}`, `stats.${ItemStatsEnum.meleeCritRating}`,\r\n      `stats.${ItemStatsEnum.expertiseRating}`\r\n    ]\r\n    if (this.gearType === GearSlots.mainHand) {\r\n      this.displayedColumns.push(...[`stats.${ItemStatsEnum.attackSpeed}`, `stats.${ItemStatsEnum.damageMin}`, `stats.${ItemStatsEnum.damageMax}`])\r\n    }\r\n    this.displayedColumns.push('anchor')\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this.initGearSeletion();\r\n  }\r\n\r\n  assignGear(armor: Item) {\r\n    if (armor) {\r\n      let uniqueApply = true;\r\n      if (armor.unique) {\r\n        Object.keys(this.character.gear).forEach(slot => {\r\n          if (this.character.gear[slot as keyof typeof GearSlots].name === armor.name) {\r\n            this.snackbar.open(`Cannot add ${armor.name} because it's unique.`, undefined, { duration: 5000 })\r\n            uniqueApply = false;\r\n            return;\r\n          }\r\n        })\r\n      }\r\n      if (uniqueApply) {\r\n        this.character.gear[this.gearType] = armor;\r\n        this.sharedDataService.character.next(this.character);\r\n      }\r\n    }\r\n  }\r\n\r\n  getValueFromGear(gear: Item, stat: ItemStatsEnum) {\r\n    return gear.stats[stat] || 0;\r\n  }\r\n\r\n  addGearToList(): void {\r\n    const dialogRef = this.dialog.open(NewGearComponent, {\r\n      width: '550px',\r\n      data: { gearSlot: this.gearType }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((newItem: Item) => {\r\n      if (newItem) {\r\n        this.gearService.addGearForSlot(newItem, this.gearType);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initGearSeletion() {\r\n    this.dataSourceGearOptions.sortingDataAccessor = (item: any, path: string): any => {\r\n      return path.split(`.`)\r\n        .reduce((accumulator: any, key: string) => {\r\n          return accumulator ? accumulator[key] : undefined;\r\n        }, item);\r\n    }\r\n    this.dataSourceGearOptions.sort = this.sort;\r\n  }\r\n\r\n}\r\n","<div class=\"item-selection-table\">\r\n  <mat-table [dataSource]=\"dataSourceGearOptions\" matSort class=\"mat-elevation-z8\">\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\"> {{armor.name}} </mat-cell>\r\n    </ng-container>\r\n    <!-- STATS -->\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.stamina}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Stam</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.stamina)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.intellect}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Int</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.intellect)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.strength}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Str</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.strength)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.agility}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Agi</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.agility)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.spirit}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Spirit</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.spirit)}}</mat-cell>\r\n    </ng-container>\r\n    <!-- DEFENSE  -->\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.armor}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Armor</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.armor)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.defenseRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Defense <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.defenseRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.dodgeRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Dodge <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.dodgeRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.parryRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Parry <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.parryRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.blockRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Block <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.blockRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.blockValue}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Block <br/> Value</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.blockValue)}}</mat-cell>\r\n    </ng-container>\r\n    <!-- MELEE -->\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.meleeHitRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Hit <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.meleeHitRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.meleeCritRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Crit <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.meleeCritRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.expertiseRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Expertise <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.expertiseRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.attackSpeed}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Attack  Speed</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.attackSpeed)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.damageMin}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Min Damage</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.damageMin)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.damageMax}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Max Damage</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.damageMax)}}</mat-cell>\r\n    </ng-container>\r\n    <!-- Spell -->\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.spellHitRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Spell Hit <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.spellHitRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.spellCritRating}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Spell Crit <br/> Rating</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.spellCritRating)}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stats.{{ItemStatsEnum.spellDamage}}\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Spell <br/> Power</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">{{getValueFromGear(armor, ItemStatsEnum.spellDamage)}}</mat-cell>\r\n    </ng-container>\r\n    <!-- LINK -->\r\n    <ng-container matColumnDef=\"anchor\">\r\n      <mat-header-cell style=\"width: 0px;\" *matHeaderCellDef></mat-header-cell>\r\n      <mat-cell *matCellDef=\"let armor\">\r\n        <a class=\"clickable\" [ngClass]=\"{'selected-item': character.gear[gearType]['_id'] === armor['_id']}\" (click)=\"assignGear(armor)\"\r\n          attr.data-wowhead=\"item={{armor.id}}\"></a>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n\r\n  </mat-table>\r\n  <div>\r\n    <div style=\"margin-top: 20px;\">\r\n      <button style=\"float: right\" (click)=\"addGearToList()\" mat-raised-button color=\"accent\">Add Gear Option to List</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"0.worker.js\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SimComponent } from './sim/sim.component'\r\n\r\nconst routes: Routes = [\r\n  { path: 'sim', component: SimComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n\r\n})\r\nexport class SimRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Spec } from '../character/spec';\r\nimport { SharedDataService } from '../shared/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-new-spec',\r\n  templateUrl: './new-spec.component.html',\r\n  styleUrls: ['./new-spec.component.scss']\r\n})\r\nexport class NewSpecComponent implements OnInit {\r\n\r\n  currentSpecUrl!: string;\r\n  spec!: Spec\r\n\r\n  constructor(public dialogRef: MatDialogRef<NewSpecComponent>,\r\n    private sharedDataService: SharedDataService) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  newSpecFormGroup = new FormGroup({\r\n    newSpecURL: new FormControl('', [Validators.required, this.validateTBCDBLink()])\r\n  })\r\n\r\n  talentUrlRegex = new RegExp(/^https:\\/\\/tbcdb.com\\/talents\\/index.html\\?en\\&paladin\\&(\\d{64})$/);\r\n\r\n  ngOnInit(): void {\r\n    this.spec = this.sharedDataService.character.value.spec;\r\n    this.currentSpecUrl = `https://tbcdb.com/talents/index.html?en&paladin&${this.spec.talentString}`\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  apply(): void {\r\n    if (this.newSpecFormGroup.valid) {\r\n      const specDef = this.newSpecFormGroup.get('newSpecURL')?.value.match(this.talentUrlRegex)[1];\r\n      const character = this.sharedDataService.character.value;\r\n      character.spec = new Spec(specDef);\r\n      this.sharedDataService.character.next(character);\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n  private validateTBCDBLink(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const matchers = control.value.match(this.talentUrlRegex);\r\n      if (matchers && matchers[1]) {\r\n        return null;\r\n      } else {\r\n        return { invalidLink: { value: control.value } }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h1>Apply New Spec</h1>\r\n<div class=\"current-spec-link\">\r\n  <a target=\"_blank\" href=\"{{currentSpecUrl}}\">Current Spec: {{spec.holyProtRetCount}}</a>\r\n</div>\r\n<div>\r\n  <mat-accordion>\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title> Instructions </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <ol>\r\n        <li>Open <a target=\"_blank\" href=\"https://tbcdb.com/talents/index.html?en&paladin\">TBCDB's Talent Calculator</a>\r\n        </li>\r\n        <li>Fill in your desired spec</li>\r\n        <li>Click \"Link to this talents\"</li>\r\n        <li>Copy the URL with all the numbers into this window</li>\r\n      </ol>\r\n      <div>\r\n        <img alt=\"picture of tbcdb talent calculator\" src=\"assets/tbc-talent-example.png\">\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n<div style=\"margin-top: 20px;\">\r\n  <form [formGroup] = \"newSpecFormGroup\" (ngSubmit)=\"apply(); false\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>TBCDB talents link</mat-label>\r\n      <input matInput formControlName=\"newSpecURL\"\r\n        placeholder=\"https://tbcdb.com/talents/index.html?en&paladin&0000000000000000000000000000000000000000000000000000000000000000\">\r\n    </mat-form-field>\r\n    <div class=\"flex-grid flex-space-between\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"cancel(); false;\">Cancel</button>\r\n      <button mat-raised-button color=\"primary\">Apply Spec</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Gem, GemColor } from './gem';\n\nimport * as Realm from \"realm-web\";\nimport { DatabaseService } from '../database.service';\nimport { GearSlotComponent } from '../gear-slot/gear-slot.component';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GemService {\n\n  gems: BehaviorSubject<Gem[]> = new BehaviorSubject<Gem[]>([]);\n\n\n  constructor(private databaseService: DatabaseService) {\n    this.getGems();\n  }\n\n  async getGems(): Promise<void> {\n    const collection = await this.databaseService.gemCollection\n    const gems = await collection.find();\n    this.gems.next(gems);\n  }\n\n  async putGem(gem: Gem) {\n    const collection = await this.databaseService.gemCollection\n    await collection.updateOne({ id: gem.name }, gem, { upsert: true })\n  }\n}\n\nexport enum Gems {\n\n}\n","import { AbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\nimport { DamageType } from \"src/app/shared/magic-school\";\nimport { Creature } from \"src/app/sim/creature\";\nimport { Character } from \"../character\";\n\nexport class Consecration implements AbilityInterface {\n\n  magicSchool: DamageType = DamageType.holy;\n  name: string = 'Consecration';\n  onGCD: boolean = true;\n  internalCD: number = 8000;\n  internalTickCD: number = 1000;\n  duration: number = 8000;\n  lastCastTime = -9999999999;\n  lastTickTime = -9999999999;\n\n  constructor() { };\n\n  onHit(rollResult: AttackTableEnum, attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\n\n  }\n  onCast(attacker: Character, defender: Creature, timeElapsed: number): boolean {\n    if (this.lastCastTime + this.internalCD <= timeElapsed) {\n      defender.debuffs[this.name] = {active: true, expires: timeElapsed + 8000}\n      this.lastCastTime = timeElapsed\n      return true;\n    }\n    return false;\n  }\n  onCheck(attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\n    const debuff = defender.debuffs[this.name]\n    if(debuff && debuff.active && debuff.expires <=timeElapsed){\n      debuff.active == false;\n    }\n    if(debuff && debuff.active && this.lastTickTime + this.internalTickCD <= timeElapsed){\n      this.lastTickTime = timeElapsed;\n      return {\n        damageAmount: (512 + attacker.spellDamage) / 8,\n        circumstance: this.name,\n        damageType: DamageType.holy\n      }\n    }\n  }\n}\n","import { stringify } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Character } from '../character/character';\r\nimport { ItemStats, ItemStatsEnum } from '../item/item-stats';\r\nimport { NewSpecComponent } from '../new-spec/new-spec.component';\r\nimport { SharedDataService } from '../shared/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-stats-totals',\r\n  templateUrl: './stats-totals.component.html',\r\n  styleUrls: ['./stats-totals.component.scss']\r\n})\r\nexport class StatsTotalsComponent implements OnInit {\r\n\r\n  constructor(private SharedDataService: SharedDataService, public dialog: MatDialog) { }\r\n\r\n  character!: Character;\r\n  ItemStatsEnum = ItemStatsEnum;\r\n\r\n  ngOnInit(): void {\r\n    this.SharedDataService.character.subscribe(character => this.character = character);\r\n  }\r\n\r\n  createNewSpec(event: any) {\r\n    this.dialog.open(NewSpecComponent, {\r\n      width: '500px'\r\n    });\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n\r\n\r\n","<mat-toolbar color=\"accent\">\r\n  <h2> Stats </h2>\r\n</mat-toolbar>\r\n\r\n<h3>General</h3>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spec</span>\r\n  <span><a class=\"clickable\" (click)=\"createNewSpec($event); false\">{{character.spec.holyProtRetCount}}</a></span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Health</span>\r\n  <span>{{character.totalHealth | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Mana</span>\r\n  <span>{{character.totalMana | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>HP5</span>\r\n  <span>0</span>\r\n</div>\r\n\r\n<h3>Attributes</h3>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Strength</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.strength) | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Agility</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.agility)}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Stamina</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.stamina) | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Intellect</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.intellect) | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spirit</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.spirit)}}</span>\r\n</div>\r\n\r\n<h3>Defense</h3>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Armor</span>\r\n  <span>{{character.armor | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <div>Defense</div>\r\n  <div [ngClass]=\"{'warn-background': character.defense < 490}\">\r\n    <span>{{character.defense | number: '1.0-0'}}</span>\r\n    <mat-icon *ngIf=\"character.defense < 490\" style=\"font-size: medium;\"\r\n      matTooltip=\"To be uncritible, you need to have 490 defense\" matTooltipPosition=\"after\">help\r\n    </mat-icon>\r\n  </div>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Miss</span>\r\n  <span>{{character.missChance | number:'1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Dodge</span>\r\n  <span>{{character.dodgeChance | number:'1.2-2' }}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Parry</span>\r\n  <span>{{character.parry | number:'1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Block</span>\r\n  <span>{{character.blockChance | number:'1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Block Value</span>\r\n  <span>{{character.blockValue | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <div>Mitigation chance</div>\r\n  <div [ngClass]=\"{'warn-background': character.mitigationChance < 72.4}\">\r\n    <span>\r\n      {{character.mitigationChance | number: '1.2-2'}}%</span>\r\n    <mat-icon *ngIf=\"character.mitigationChance < 72.4\" style=\"font-size: medium;\"\r\n      matTooltip=\"To be uncrushable you must have 72.4% mitigation before holy shield\" matTooltipPosition=\"after\">help\r\n    </mat-icon>\r\n  </div>\r\n</div>\r\n\r\n<h3>Spell</h3>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spell Damage</span>\r\n  <span>{{character.spellDamage | number: '1.0-0'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spell Crit</span>\r\n  <span>{{character.spellCrit | number:'1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spell Hit</span>\r\n  <span>{{character.spellHit| number:'1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Spell Pen</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.spellPen)}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Healing</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.healing)}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>MP5</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.mp5)}}</span>\r\n</div>\r\n\r\n<h3>Melee</h3>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Attack Rating</span>\r\n  <span>{{character.getStatTotal(ItemStatsEnum.attackRating)}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Attack Power</span>\r\n  <span>{{character.attackPower}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Damage</span>\r\n  <span>{{character.weaponDamageMin | number: '1.2-2'}} - {{character.weaponDamageMax | number: '1.2-2'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Attack Speed</span>\r\n  <span>{{character.attackSpeed | number: '1.2-2'}}</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Melee Crit</span>\r\n  <span>{{character.meleeCrit | number: '1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Melee Hit</span>\r\n  <span>{{character.hitChance | number: '1.2-2'}}%</span>\r\n</div>\r\n<div class=\"flex-grid flex-space-between\">\r\n  <span>Melee Expertise</span>\r\n  <span>{{character.expertise | number: '1.2-2'}}</span>\r\n</div>\r\n","export enum GearSlots {\r\n  head = 'head',\r\n  neck = 'neck',\r\n  shoulder = 'shoulder',\r\n  back = 'back',\r\n  chest = 'chest',\r\n  wrist = 'wrist',\r\n  hands = 'hands',\r\n  waist = 'waist',\r\n  legs = 'legs',\r\n  feet = 'feet',\r\n  fingerOne = 'fingerOne',\r\n  fingerTwo = 'fingerTwo',\r\n  trinketOne = 'trinketOne',\r\n  trinketTwo = 'trinketTwo',\r\n  mainHand = 'mainHand',\r\n  offHand = 'offHand',\r\n  relic = 'relic'\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CombatService, TimeSlotResults } from '../combat.service';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.scss']\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n\r\n  legend: boolean = true;\r\n  showLabels: boolean = true;\r\n  animations: boolean = true;\r\n  xAxis: boolean = true;\r\n  yAxis: boolean = true;\r\n  showYAxisLabel: boolean = true;\r\n  showXAxisLabel: boolean = true;\r\n  xAxisLabel: string = 'Combat Time (Seconds)';\r\n  yAxisLabel: string = 'Damage Done';\r\n  timeline: boolean = true;\r\n  schemeType: string = 'ordinal'\r\n  noBarWhenZero: boolean = false;\r\n  view: any[number] = [3000, 400];\r\n  xAxisTickFormatting = ((label: number) => { return label.toFixed(2) });\r\n  overallResultsBarChart: BehaviorSubject<resultsBarChartInterface[]> = new BehaviorSubject(new Array());\r\n\r\n  displayChart: boolean = false;\r\n\r\n  constructor(private combatService: CombatService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.combatService.combatResults.subscribe(combatResults => this.createBarChart(combatResults));\r\n  }\r\n\r\n\r\n  private createBarChart(combatResults: TimeSlotResults[][]) {\r\n    if (combatResults[0]) {\r\n      const results: resultsBarChartInterface[] = []\r\n      combatResults[0].forEach((tenMilliSeconds, index) => {\r\n        tenMilliSeconds.damageDone.forEach(damage => {\r\n          const rootName = index / 100;\r\n          const lookupResults = results && results.find((result: any) => result.name === rootName);\r\n          if (!lookupResults) {\r\n            results.push({ name: index / 100, series: [{ name: damage.circumstance, value: damage.damageAmount, comment: damage.comment }] });\r\n          } else {\r\n            const damageThisTurn = lookupResults.series.find(r => r.name === damage.circumstance);\r\n            if (damageThisTurn) {\r\n              damageThisTurn.value += damage.damageAmount;\r\n            } else {\r\n              lookupResults.series.push({ name: damage.circumstance, value: damage.damageAmount, comment: damage.comment });\r\n            }\r\n          }\r\n        });\r\n      });\r\n      this.overallResultsBarChart.next(results);\r\n      if (results.length > 0) {\r\n        this.displayChart = true;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\ninterface resultsBarChartInterface { name: number, series: [{ name: string, value: number, comment?: string }] }\r\n","<div *ngIf=\"displayChart\" class=\"sticky-chart\">\r\n  <ngx-charts-bar-vertical-stacked [view]=\"view\" [customColors]=\"[\r\n{\r\n  name: 'Attack',\r\n  value: '#120309'\r\n},\r\n{\r\n  name: 'SoV Dot',\r\n  value: '#E9D985'\r\n},\r\n{\r\n  name: 'Holy Shield',\r\n  value: '#AAE3F5'\r\n},\r\n{\r\n  name: 'Consecration',\r\n  value: '#F62DAE'\r\n},\r\n{\r\n  name: 'Judgement',\r\n  value: '#49A078'\r\n}]\" [legend]=\"legend\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\" [xAxis]=\"xAxis\"\r\n    [yAxis]=\"yAxis\" [xAxisLabel]=\"xAxisLabel\" [yAxisLabel]=\"yAxisLabel\" [schemeType]=\"schemeType\" [xAxisTickFormatting]=\"xAxisTickFormatting\"\r\n    [results]=\"overallResultsBarChart | async\" legendPosition=\"below\" [noBarWhenZero]=\"noBarWhenZero\">\r\n    <ng-template #tooltipTemplate let-model=\"model\">\r\n      <p>{{model.name}}: {{model.value}}</p>\r\n      <p>{{model.comment}}</p>\r\n    </ng-template>\r\n  </ngx-charts-bar-vertical-stacked>\r\n</div>\r\n","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Character } from '../character/character';\nimport { GearSlots } from '../character/gearslot';\nimport { GearService } from '../gear/gear.service';\nimport { Enchant } from '../item/enchant';\nimport { EnchantService } from '../item/enchant.service';\nimport { Item } from '../item/item';\nimport { ItemStatsEnum } from '../item/item-stats';\nimport { NewEnchantComponent } from '../new-enchant/new-enchant.component';\nimport { SharedDataService } from '../shared/shared-data.service';\n\n@Component({\n  selector: 'app-enchants',\n  templateUrl: './enchants.component.html',\n  styleUrls: ['./enchants.component.scss']\n})\nexport class EnchantsComponent implements OnInit, AfterViewInit {\n\n  @Input()\n  gearType!: GearSlots\n  displayedColumns = ['name', 'stat', 'anchor']\n  // character!: Character;\n\n  enchants: Enchant[] = [];\n  gear: Item[] = [];\n  activeEnchant = null;\n  dataSourceEnchantOptions: MatTableDataSource<Enchant> = new MatTableDataSource<Enchant>([]);\n\n  constructor(private enchantService: EnchantService, public dialog: MatDialog, private gearService: GearService) { }\n\n  ngOnInit(): void {\n    this.enchantService.enchants.subscribe(enchants => {\n      const filteredEnchants = enchants.filter(enchant => enchant.slot === this.gearType).sort((a, b) => a.name < b.name ? -1 : 1)\n      this.dataSourceEnchantOptions.data = filteredEnchants;\n    })\n    this.gearService.gearOptions.subscribe(gear => this.gear = gear.filter(g => g.validSlot === this.gearType));\n  }\n\n  assignGear(enchant: Enchant) {\n    this.gear.forEach(g => g.enchant = enchant);\n    const allGear = this.gearService.gearOptions.value;\n    allGear.forEach(item => {\n      if(item.validSlot === this.gearType){\n        item.enchant = enchant;\n      }\n    })\n    this.gearService.gearOptions.next(allGear)\n  }\n\n  getGearItem() {\n    const gear = this.gearService.gearOptions.value.find(g => g.validSlot === this.gearType);\n    return gear;\n  }\n\n  statBoostString(enchant: Enchant): string {\n    const stats = Object.keys(enchant.stats)\n    let string = ''\n    stats.forEach(stat => {\n      string += `+${enchant.stats[stat as keyof typeof ItemStatsEnum]} ${stat} `\n    })\n    return string\n  }\n\n  addEnchant() {\n    const dialogRef = this.dialog.open(NewEnchantComponent, {\n      width: '550px',\n      data: { gearSlot: this.gearType }\n    });\n\n    dialogRef.afterClosed().subscribe((newItem: Enchant) => {\n      if (newItem) {\n        this.enchantService.addEnchant(newItem);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n}\n","<mat-toolbar color=\"accent\">\r\n  <h2> Enchant all listed gear </h2>\r\n</mat-toolbar>\r\n\r\n\r\n<div>\r\n  <mat-table [dataSource]=\"dataSourceEnchantOptions\" matSort>\r\n    <ng-container matColumnDef=\"name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let enchant\">{{enchant.name}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"stat\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Stat Boost</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let enchant\">{{statBoostString(enchant)|humanize}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"anchor\">\r\n      <mat-header-cell style=\"width: 0px;\" *matHeaderCellDef></mat-header-cell>\r\n      <mat-cell *matCellDef=\"let enchant\">\r\n        <a class=\"clickable\" [ngClass]=\"{'selected-item': gear[0]?.enchant?.id === enchant.id}\"\r\n          (click)=\"assignGear(enchant)\" attr.data-wowhead=\"item={{enchant.id}}\"></a>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n  </mat-table>\r\n  <div style=\"margin-top: 20px; float: right;\">\r\n    <button (click)=\"addEnchant()\" mat-raised-button color=\"accent\">Add enchant to list</button>\r\n  </div>\r\n</div>\r\n","import { NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SimComponent } from './sim/sim.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\r\nimport { SimResultsComponent } from './sim-results/sim-results.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SimComponent, BarChartComponent, SimResultsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgxChartsModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule\r\n  ],\r\n})\r\nexport class SimModule { }\r\n","import { GearSlots } from \"./gearslot\";\r\nimport { Item, WeaponType } from \"../item/item\";\r\nimport { ItemStats, ItemStatsEnum } from \"../item/item-stats\";\r\nimport { Race, Races } from \"./races/race\";\r\nimport { Spec } from \"./spec\";\r\n\r\nimport { JsonProperty, Serializable } from 'typescript-json-serializer';\r\nimport { AttackTable } from \"../shared/attack-table\";\r\n\r\n@Serializable()\r\nexport class Character {\r\n  @JsonProperty() spec: Spec;\r\n  gear: { [key in GearSlots]: Item }\r\n  @JsonProperty() baseStats: ItemStats;\r\n  @JsonProperty() race: Race\r\n  level = 70;\r\n  @JsonProperty() buffs: { [key: string]: any } = {}\r\n  @JsonProperty() debuffs: { [key: string]: any } = {}\r\n\r\n\r\n  constructor(race: Races = Races.human) {\r\n    this.spec = new Spec();\r\n    this.gear = this.initGear();\r\n    this.baseStats = level70PaladinStats;\r\n    this.race = new Race(race);\r\n  }\r\n\r\n  getStatTotal(stat: ItemStatsEnum): number {\r\n    const statValues = this.getStatValue(stat);\r\n    const statMultipliers = this.getStatMultiplier(stat);\r\n    return statValues * (1 + statMultipliers);\r\n  }\r\n\r\n  private getStatValue(stat: ItemStatsEnum): number {\r\n    return this.sum([\r\n      this.baseStats[stat] || 0,\r\n      this.spec.getValues()[stat] || 0,\r\n      this.race.stats[stat] || 0,\r\n      this.raceBonuses[stat] || 0,\r\n      this.calculateGearStats(stat)])\r\n  }\r\n\r\n  private getStatMultiplier(stat: ItemStatsEnum): number {\r\n    return this.sum([\r\n      this.spec.getMultipliers()[stat] || 0\r\n    ]);\r\n  }\r\n\r\n  private calculateGearStats(stat: ItemStatsEnum): number {\r\n    let total = 0;\r\n    Object.keys(this.gear).forEach((slot) => {\r\n      const item: Item = this.gear[slot as keyof typeof GearSlots]\r\n      if (item) {\r\n        total += item.getTotalConfiguredStats()[stat] || 0;\r\n      }\r\n    })\r\n    return total;\r\n  }\r\n\r\n  private sum(stats: number[]) {\r\n    return stats.reduce((a, b) => a + b, 0)\r\n  }\r\n\r\n  /* ************************** STATS *************************** */\r\n  get totalMana(): number {\r\n    return this.getStatTotal(ItemStatsEnum.intellect) * 15;\r\n  }\r\n  get totalHealth(): number {\r\n    return this.getStatTotal(ItemStatsEnum.stamina) * 10;\r\n  }\r\n\r\n\r\n  /* ************************** MELEE *************************** */\r\n  get expertise(): number {\r\n    let total = this.getStatTotal(ItemStatsEnum.expertiseRating) / 15.77\r\n    total += this.getStatTotal(ItemStatsEnum.meleeExpertise);\r\n    return total;\r\n  }\r\n\r\n  get hitChance(): number {\r\n    let total = this.getStatTotal(ItemStatsEnum.meleeHitRating) / 15.77;\r\n    total += this.getStatTotal(ItemStatsEnum.meleeHitPercent);\r\n    return total\r\n  }\r\n\r\n  get attackPower(): number {\r\n    let total = 0;\r\n    total += this.getStatTotal(ItemStatsEnum.strength) * 2;\r\n    total += this.getStatTotal(ItemStatsEnum.attackPower);\r\n    return total;\r\n  }\r\n\r\n  get meleeCrit(): number {\r\n    let total = 0;\r\n    total += this.getStatTotal(ItemStatsEnum.meleeCritRating) / 22.08;\r\n    total += this.getStatTotal(ItemStatsEnum.agility) / 20;\r\n    return total;\r\n  }\r\n\r\n  get haste(): number {\r\n    return this.getStatTotal(ItemStatsEnum.hasteRating) / 15.77\r\n  }\r\n\r\n  get armorPen(): number {\r\n    return this.getStatTotal(ItemStatsEnum.armorPenRating) / 5.92\r\n  }\r\n\r\n  get weaponDamageMin(): number {\r\n    const weapon = this.gear.mainHand\r\n    let damage = weapon.stats.damageMin || 1;\r\n    damage += this.attackPower / (14 * (weapon.stats.attackSpeed || 2))\r\n    return damage || 1;\r\n  }\r\n\r\n  get weaponDamageMax(): number {\r\n    const weapon = this.gear.mainHand\r\n    let damage = weapon.stats.damageMax || 10;\r\n    damage += this.attackPower / (14 * (weapon.stats.attackSpeed || 2))\r\n    return damage || 10;\r\n  }\r\n\r\n  get attackSpeed(): number {\r\n    return (this.gear.mainHand?.stats?.attackSpeed) || 2;\r\n  }\r\n\r\n  /* ************************** DEFENSE *************************** */\r\n  get defense(): number {\r\n    let total = 350 + (this.getStatTotal(ItemStatsEnum.defenseRating) / 2.37);\r\n    total += this.getStatTotal(ItemStatsEnum.defenseValue)\r\n    return total;\r\n  }\r\n\r\n  get critReduction(): number {\r\n    const reduction = 0 + (0.04 * (this.defense - 350));\r\n    return reduction > 5.6 ? 0 : reduction\r\n  }\r\n\r\n  get armor(): number {\r\n    let total = 0;\r\n    total += this.getStatTotal(ItemStatsEnum.agility) * 2;\r\n    total += this.getStatValue(ItemStatsEnum.armor);\r\n    return total * (1 + this.getStatMultiplier(ItemStatsEnum.armor));\r\n  }\r\n\r\n  get missChance(): number {\r\n    let total = this.getStatTotal(ItemStatsEnum.defenseRating) / 59.25 // 14.8125 * 4\r\n    total += this.getStatTotal(ItemStatsEnum.defenseValue) / (59.25 / 2.36); // 1 defense skill = 2.36 defense rating\r\n    return 5 + total;\r\n  }\r\n\r\n  get dodgeChance(): number {\r\n    const agility = this.getStatTotal(ItemStatsEnum.agility);\r\n    const itemDodge = this.getStatTotal(ItemStatsEnum.dodgeRating) / 18.92;\r\n    const defenseDodge = this.getStatTotal(ItemStatsEnum.defenseRating) / 59.25;\r\n    const defenseValueDodge = this.getStatTotal(ItemStatsEnum.defenseValue) / (59.25 / 2.36);\r\n    return 0.7 + (agility / 19.767) + itemDodge + defenseDodge + defenseValueDodge;\r\n  }\r\n\r\n  get blockValue(): number {\r\n    let total = 0;\r\n    total += this.getStatTotal(ItemStatsEnum.strength) / 20\r\n    total += this.getStatValue(ItemStatsEnum.blockValue)\r\n    return total * (1 + this.getStatMultiplier(ItemStatsEnum.blockValue));\r\n  }\r\n\r\n  get parry(): number {\r\n    const parryRating = this.getStatTotal(ItemStatsEnum.parryRating) / 23.65;\r\n    const parryValue = this.getStatTotal(ItemStatsEnum.parryValue);\r\n    const defenseParry = this.getStatTotal(ItemStatsEnum.defenseRating) / 59.25;\r\n    const defenseValueParry = this.getStatTotal(ItemStatsEnum.defenseValue) / (59.25 / 2.36);\r\n    return 5 + parryRating + defenseParry + defenseValueParry + parryValue;\r\n  }\r\n\r\n  get blockChance(): number {\r\n    const blockRating = this.getStatTotal(ItemStatsEnum.blockRating) / 7.88;\r\n    const defenseBlockChance = this.getStatTotal(ItemStatsEnum.defenseRating) / 59.25;\r\n    const defenseValueBlockChance = this.getStatTotal(ItemStatsEnum.defenseValue) / (59.25 / 2.36);\r\n    return 5 + blockRating + defenseBlockChance + defenseValueBlockChance\r\n  }\r\n\r\n  get mitigationChance(): number {\r\n    return this.missChance + this.dodgeChance + this.parry + this.blockChance;\r\n  }\r\n\r\n  /* ************************** SPELL *************************** */\r\n  get spellCrit(): number {\r\n    let total = 0;\r\n    total += this.getStatTotal(ItemStatsEnum.spellCritRating);\r\n    total += this.getStatTotal(ItemStatsEnum.intellect) / 54;\r\n    return total;\r\n  }\r\n\r\n  get spellHit(): number {\r\n    let total = this.getStatTotal(ItemStatsEnum.spellHitRating) / 12.62\r\n    total += this.getStatTotal(ItemStatsEnum.spellHitPercent)\r\n    return total\r\n  }\r\n\r\n  get spellDamage(): number {\r\n    return this.getStatTotal(ItemStatsEnum.spellDamage);\r\n  }\r\n\r\n\r\n  get attackTable(): AttackTable {\r\n    return {\r\n      miss: 9 - this.hitChance,\r\n      dodge: 6.5 - (this.expertise / 4), // 1 expertise reduces dodge chance by 0.25%\r\n      parry: 14 - (this.expertise / 4), // 1 expertise reduces dodge chance by 0.25%,\r\n      glancing: 25,\r\n      block: 0, //most bosses can't block\r\n      crit: 0 + this.meleeCrit,\r\n      crushing: 0, //characters cannot crush bosses\r\n      hit: 0 // whatever the rest is\r\n    }\r\n  }\r\n\r\n  /* ************************** PRIVATE *************************** */\r\n\r\n  private initGear() {\r\n    return {\r\n      head: new Item(),\r\n      neck: new Item(),\r\n      shoulder: new Item(),\r\n      back: new Item(),\r\n      chest: new Item(),\r\n      wrist: new Item(),\r\n      hands: new Item(),\r\n      waist: new Item(),\r\n      legs: new Item(),\r\n      feet: new Item(),\r\n      fingerOne: new Item(),\r\n      fingerTwo: new Item(),\r\n      trinketOne: new Item(),\r\n      trinketTwo: new Item(),\r\n      mainHand: new Item(),\r\n      offHand: new Item(),\r\n      relic: new Item()\r\n    };\r\n  }\r\n\r\n  private get raceBonuses(): ItemStats {\r\n    const stats: ItemStats = {};\r\n    if (this.race.name === Races.human && (\r\n      (this.gear.mainHand.weaponType === WeaponType.oneHandedMace) ||\r\n      (this.gear.mainHand.weaponType === WeaponType.twoHandedMace) ||\r\n      (this.gear.mainHand.weaponType === WeaponType.oneHandedSword) ||\r\n      (this.gear.mainHand.weaponType === WeaponType.twoHandedSword))) {\r\n\r\n      stats.meleeExpertise = 5;\r\n    }\r\n\r\n    return stats;\r\n  }\r\n}\r\n\r\nconst level70PaladinStats: ItemStats = {\r\n  strength: 104,\r\n  agility: 57,\r\n  stamina: 98,\r\n  intellect: 63,\r\n  spirit: 68,\r\n}\r\n\r\n\r\n// https://wowwiki-archive.fandom.com/wiki/Combat_rating_system\r\n// https://classic.wowhead.com/guides/classic-wow-stats-and-attributes-overview\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'humanize' })\r\nexport class HumanizePipe implements PipeTransform {\r\n\r\n  transform(value: string) {\r\n    if ((typeof value) !== 'string') {\r\n      return value;\r\n    }\r\n    value = value.replace(/([^A-Z])([A-Z])/g, '$1 $2').replace(/([A-Z])([A-Z][^A-Z])/g, '$1 $2');\r\n    if (value[0]) {\r\n      value = value[0].toUpperCase() + value.slice(1);\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tbc-tankadin-sim';\n}\n","<mat-toolbar color=\"primary\">\r\n  <h1>Tankadin Sim (TBC)</h1>\r\n</mat-toolbar>\r\n\r\n<div class=\"flex-grid\">\r\n  <app-stats-totals class=\"stats\"></app-stats-totals>\r\n  <div class=\"gear\">\r\n    <app-controls></app-controls>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Character } from \"src/app/character/character\";\r\nimport { BossAbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\r\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\r\nimport { DamageType } from \"src/app/shared/magic-school\";\r\nimport { Creature } from \"../creature\";\r\n\r\nexport class BossAttack implements BossAbilityInterface {\r\n  magicSchool: DamageType;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.magicSchool = DamageType.physical;\r\n    this.name = 'Boss Attack'\r\n  }\r\n  onHit(rollResult: AttackTableEnum, attacker: Creature, defender: Character): void | damageTakenInterface {\r\n    let damage = 0;\r\n    if (rollResult && rollResult !== AttackTableEnum.miss && rollResult !== AttackTableEnum.dodge && rollResult !== AttackTableEnum.parry) {\r\n      damage = rollDamage(attacker.minMeleeDamage, attacker.maxMeleeDamage, defender)\r\n      if (rollResult === AttackTableEnum.block) {\r\n        damage = damage - defender.blockValue\r\n      } else if (rollResult === AttackTableEnum.crit) {\r\n        damage = damage * 2;\r\n      } else if (rollResult === AttackTableEnum.crushing) {\r\n        damage = damage * 1.5\r\n      }\r\n    }\r\n    return {\r\n      damageAmount: Math.round(damage),\r\n      damageType: DamageType.physical,\r\n      circumstance: rollResult\r\n    }\r\n  }\r\n  onCast(attacker: Creature, defender: Character, timeElapsed: number): void | damageTakenInterface {\r\n  }\r\n  onCheck(attacker: Creature, defender: Character, timeElapsed: number): void | damageTakenInterface {\r\n  }\r\n}\r\n\r\nconst rollDamage = (damageMin: number, damageMax: number, defender: Creature | Character): number => {\r\n  const rawDamage = Math.floor(Math.random() * (damageMax - damageMin + 1) + damageMin);\r\n  const armorReduction = defender.armor / (defender.armor - 22167.5 + 467.5 * defender.level)\r\n  return rawDamage * armorReduction\r\n}\r\n\r\n","import { WeaponType } from \"./item\";\r\n\r\nexport interface ItemStats {\r\n  //raw stats\r\n  [ItemStatsEnum.stamina]?: number,\r\n  [ItemStatsEnum.intellect]?: number,\r\n  [ItemStatsEnum.strength]?: number,\r\n  [ItemStatsEnum.agility]?: number,\r\n  [ItemStatsEnum.spirit]?: number,\r\n  [ItemStatsEnum.intellectPercent]?: number,\r\n  //defensive\r\n  [ItemStatsEnum.armor]?: number,\r\n  [ItemStatsEnum.defenseRating]?: number,\r\n  [ItemStatsEnum.defenseValue]?: number,\r\n  [ItemStatsEnum.miss]?: number,\r\n  [ItemStatsEnum.dodgeRating]?: number,\r\n  [ItemStatsEnum.parryRating]?: number,\r\n  [ItemStatsEnum.parryValue]?: number,\r\n  [ItemStatsEnum.blockRating]?: number,\r\n  [ItemStatsEnum.blockValue]?: number,\r\n  [ItemStatsEnum.shieldBlockValuePercent]?: number,\r\n  [ItemStatsEnum.resilience]?: number,\r\n  //melee\r\n  [ItemStatsEnum.meleeHitRating]?: number,\r\n  [ItemStatsEnum.meleeHitPercent]?: number,\r\n  [ItemStatsEnum.meleeCritRating]?: number,\r\n  [ItemStatsEnum.meleeCritPercent]?: number,\r\n  [ItemStatsEnum.meleeCritDamagePercent]?: number,\r\n  [ItemStatsEnum.expertiseRating]?: number,\r\n  [ItemStatsEnum.attackRating]?: number,\r\n  [ItemStatsEnum.meleeExpertise]?: number,\r\n  [ItemStatsEnum.attackPower]?: number,\r\n  [ItemStatsEnum.bonusMeleeDamage]?: number,\r\n  [ItemStatsEnum.hasteRating]?: number,\r\n  [ItemStatsEnum.armorPenRating]?: number,\r\n  [ItemStatsEnum.attackSpeed]?: number,\r\n  [ItemStatsEnum.damageMax]?: number,\r\n  [ItemStatsEnum.damageMin]?: number,\r\n\r\n  //spell\r\n  [ItemStatsEnum.spellHitRating]?: number,\r\n  [ItemStatsEnum.spellHitPercent]?: number,\r\n  [ItemStatsEnum.spellCritRating]?: number,\r\n  [ItemStatsEnum.spellDamage]?: number,\r\n  [ItemStatsEnum.spellHaste]?: number,\r\n  [ItemStatsEnum.spellHasteRating]?: number,\r\n  [ItemStatsEnum.healing]?: number,\r\n  [ItemStatsEnum.spellPen]?: number,\r\n  [ItemStatsEnum.mp5]?: number,\r\n}\r\n\r\nexport enum ItemType {\r\n  unkown = 'unknown',\r\n  mainHand = 'mainHand',\r\n  offHand = 'offHand',\r\n  oneHand = 'oneHand',\r\n  shield = 'shield',\r\n  head = 'head'\r\n}\r\n\r\nexport enum ItemStatsEnum {\r\n  stamina = 'stamina',\r\n  intellect = 'intellect',\r\n  strength = 'strength',\r\n  agility = 'agility',\r\n  spirit = 'spirit',\r\n  intellectPercent = 'intellectPercent',\r\n  //defensive\r\n  armor = 'armor',\r\n  defenseRating = 'defenseRating',\r\n  miss = 'miss',\r\n  dodgeRating = 'dodgeRating',\r\n  parryRating = 'parryRating',\r\n  parryValue = 'parryValue',\r\n  blockRating = 'blockRating',\r\n  blockValue = 'blockValue',\r\n  shieldBlockValuePercent = 'shieldBlockValuePercent',\r\n  defenseValue = 'defenseValue',\r\n  resilience = 'resilience',\r\n  //melee\r\n  meleeHitRating = 'meleeHitRating',\r\n  meleeHitPercent = 'meleeHitPercent',\r\n  meleeCritRating = 'meleeCritRating',\r\n  meleeCritPercent = 'meleeCritPercent',\r\n  meleeCritDamagePercent = 'meleeCritDamagePercent',\r\n  expertiseRating = 'expertiseRating',\r\n  attackRating = 'attackRating',\r\n  meleeExpertise = 'meleeExpertise',\r\n  attackPower = 'attackPower',\r\n  bonusMeleeDamage = 'bonusMeleeDamage',\r\n  hasteRating = 'hasteRating',\r\n  armorPenRating = 'armorPenRating',\r\n  damageMin='damageMin',\r\n  damageMax='damageMax',\r\n  attackSpeed='attackSpeed',\r\n  //spell\r\n  spellHitRating = 'spellHitRating',\r\n  spellHitPercent = 'spellHitPercent',\r\n  spellCritRating = 'spellCritRating',\r\n  spellDamage = 'spellDamage',\r\n  spellHaste = 'spellHaste',\r\n  spellHasteRating = 'spellHasteRating',\r\n  healing = 'healing',\r\n  spellPen = 'spellPen',\r\n  mp5 = 'mp5',\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { GemSocketColor, Item } from '../item/item';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GemService } from '../item/gem.service';\nimport { Gem, GemColor, GemQuality } from '../item/gem';\nimport { ItemStats, ItemStatsEnum } from '../item/item-stats';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GearService, GemAlterationInterface } from '../gear/gear.service';\n\n@Component({\n  selector: 'app-gear-alteration',\n  templateUrl: './gear-alteration.component.html',\n  styleUrls: ['./gear-alteration.component.scss']\n})\nexport class GearAlterationComponent implements OnInit {\n\n  constructor(private gemService: GemService, private gearService: GearService) { }\n\n  GemSocketColor = GemSocketColor\n  GemSocketColors = Object.values(GemSocketColor)\n  GemQuality = Object.values(GemQuality)\n  allStats = Object.values(ItemStatsEnum).sort();\n\n  gemAlterationSetBonusOne!: ItemStatsEnum;\n  gemAlterationSetBonusTwo!: ItemStatsEnum;\n\n\n  gemAlterations: GemAlterationInterface = {\n    default: null,\n    defaultMeta: null,\n    logic: [\n      { gem: null, setBonusAttribute: null, socketColor: null },\n      { gem: null, setBonusAttribute: null, socketColor: null },\n      { gem: null, setBonusAttribute: null, socketColor: null },\n      { gem: null, setBonusAttribute: null, socketColor: null }\n    ]\n  }\n\n  gemFilterForm: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    color: new FormControl(''),\n    rarity: new FormControl(''),\n    stat: new FormControl('')\n  })\n\n  attributes = Object.values(ItemStatsEnum).sort()\n  quality = Object.values(GemQuality)\n  gemColor = Object.values(GemColor);\n\n  gems!: MatTableDataSource<Gem>\n\n  displayedColumns: string[] = ['name', 'color', 'statOne', 'statTwo', 'anchor']\n\n  item!: Item;\n\n  ngOnInit(): void {\n    this.gems = new MatTableDataSource();\n    this.gemService.gems.subscribe(gems => {\n      gems.sort((a, b) => a.name < b.name ? -1 : 1)\n      this.gems.filterPredicate = this.gemFilter\n      this.gems.data = gems;\n    })\n\n    this.gemFilterForm.valueChanges.subscribe((value) => {\n      this.gems.filter = value;\n    })\n  }\n\n  getStat(gem: Gem, index: number) {\n    if (index === 0 && gem.stats.healing) {\n      return [`+${gem.stats.healing} healing`, `+${gem.stats.spellDamage} spell damage`]\n    } else if (gem.stats.healing && index > 0) {\n      const stats = Object.keys(gem.stats)\n      const healingIdx = stats.findIndex(s => s === ItemStatsEnum.healing)\n      stats.splice(healingIdx, 1);\n      const spellDamageIdx = stats.findIndex(s => s === ItemStatsEnum.spellDamage)\n      stats.splice(spellDamageIdx, 1);\n      return [stats && gem.stats[stats[0] as keyof ItemStats] ? `+${gem.stats[stats[0] as keyof ItemStats]} ${stats}` : '']\n    } else {\n      const statKey = Object.keys(gem.stats)[index]\n      return [statKey && gem.stats[statKey as keyof ItemStats] ? `+${gem.stats[statKey as keyof ItemStats]} ${statKey}` : '']\n    }\n  }\n\n  getRarityClass(gem: Gem) {\n    return `${gem.quality}-text`\n  }\n\n  applyGemsToGear() {\n    this.gemAlterations.logic[0].setBonusAttribute = this.gemAlterationSetBonusOne\n    this.gemAlterations.logic[1].setBonusAttribute = this.gemAlterationSetBonusOne\n    this.gemAlterations.logic[2].setBonusAttribute = this.gemAlterationSetBonusTwo\n    this.gemAlterations.logic[3].setBonusAttribute = this.gemAlterationSetBonusTwo\n\n    this.gearService.applyGemsToGear(this.gemAlterations)\n  }\n\n  noMetaGems(){\n    return this.gems.data.filter(gem => gem.color !== GemColor.meta)\n  }\n\n  metaGems(){\n    return this.gems.data.filter(gem => gem.color === GemColor.meta)\n  }\n\n  private gemFilter(data: Gem, filter: any) {\n    return (\n      (filter.name !== '' ? data.name.toLowerCase().includes(filter.name.toLowerCase()) : true) &&\n      (filter.color !== '' ? data.color === filter.color : true) &&\n      (filter.rarity !== '' ? data.quality === filter.rarity : true) &&\n      (filter.stat !== '' ? Object.keys(data.stats).includes(filter.stat) : true)\n    )\n  }\n}\n","<mat-toolbar color=\"accent\">\n  <h2> Gem All Gear </h2>\n</mat-toolbar>\n\n<div class=\"flex-grid\" *ngIf=\"gems.data\">\n  <div class=\"flex-fill\" style=\"max-width: 780px;\">\n    <div>\n      Default all gem sockets to\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.default\">\n          <mat-option *ngFor=\"let gem of noMetaGems()\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      and meta socket to\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.defaultMeta\">\n          <mat-option *ngFor=\"let gem of metaGems()\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      .\n    </div>\n    <div>\n      If armor socket bonus is\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterationSetBonusOne\">\n          <mat-option *ngFor=\"let stat of allStats\" [value]=\"stat\">{{stat | humanize}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      Then use\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[0].gem\">\n          <mat-option *ngFor=\"let gem of noMetaGems()\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      for\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[0].socketColor\">\n          <mat-option *ngFor=\"let color of GemSocketColors\" [value]=\"color\">{{color}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      or\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[1].gem\">\n          <mat-option *ngFor=\"let gem of noMetaGems()\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      for\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[1].gem\">\n          <mat-option *ngFor=\"let color of GemSocketColors\" [value]=\"color\">{{color}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      sockets.\n    </div>\n    <div>\n      If armor socket bonus is\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterationSetBonusTwo\">\n          <mat-option *ngFor=\"let stat of allStats\" [value]=\"stat\">{{stat | humanize}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      Then use\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[2].gem\">\n          <mat-option *ngFor=\"let gem of gems.data\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      for\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[2].socketColor\">\n          <mat-option *ngFor=\"let color of GemSocketColors\" [value]=\"color\">{{color}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      or\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[3].gem\">\n          <mat-option *ngFor=\"let gem of gems.data\" [value]=\"gem\">{{gem.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      for\n      <mat-form-field class=\"small-form-field\">\n        <mat-select [typeaheadDebounceInterval]=\"1000\" [(ngModel)]=\"gemAlterations.logic[3].socketColor\">\n          <mat-option *ngFor=\"let color of GemSocketColors\" [value]=\"color\">{{color}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      sockets.\n    </div>\n\n    <button style=\"width: 90%\" (click)=\"applyGemsToGear()\" mat-raised-button color=\"primary\">Apply</button>\n  </div>\n  <div class=\"flex-fill\">\n    <form [formGroup]=\"gemFilterForm\">\n      <div class=\"flex-grid\" style=\"align-items: center; margin-top: 10px;\">\n        <div style=\"flex: 0.5;\"> Filter: </div>\n        <div style=\"flex: 1.5;\">\n          <mat-form-field>\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" />\n          </mat-form-field>\n        </div>\n        <div class=\"flex-fill\">\n          <mat-form-field>\n            <mat-label>Color</mat-label>\n            <mat-select [typeaheadDebounceInterval]=\"1000\" formControlName=\"color\">\n              <mat-option value=\"\">None</mat-option>\n              <mat-option *ngFor=\"let color of gemColor\" [value]=\"color\">{{color | humanize | titlecase}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"flex-fill\">\n          <mat-form-field>\n            <mat-label>Rarity</mat-label>\n            <mat-select [typeaheadDebounceInterval]=\"1000\" formControlName=\"rarity\">\n              <mat-option value=\"\">None</mat-option>\n              <mat-option *ngFor=\"let rarity of GemQuality\" [value]=\"rarity\">{{rarity | humanize | titlecase}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"flex-fill\">\n          <mat-form-field>\n            <mat-label>Stat</mat-label>\n            <mat-select [typeaheadDebounceInterval]=\"1000\" formControlName=\"stat\">\n              <mat-option value=\"\">None</mat-option>\n              <mat-option *ngFor=\"let stat of allStats\" [value]=\"stat\">{{stat | humanize | titlecase}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n    <mat-table [dataSource]=\"gems\" matSort class=\"max-table-height mat-elevation-z8\">\n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let gem\"> <span [ngClass]=\"getRarityClass(gem)\">{{gem.name}}</span> </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"color\">\n        <mat-header-cell *matHeaderCellDef>Color</mat-header-cell>\n        <mat-cell *matCellDef=\"let gem\"> {{gem.color}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"statOne\">\n        <mat-header-cell *matHeaderCellDef>Stat 1</mat-header-cell>\n        <mat-cell *matCellDef=\"let gem\"> {{getStat(gem, 0)[0] | humanize | titlecase}} <br /> {{getStat(gem, 0)[1] |\n          humanize | titlecase}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"statTwo\">\n        <mat-header-cell *matHeaderCellDef>Stat 2</mat-header-cell>\n        <mat-cell *matCellDef=\"let gem\"> {{getStat(gem, 1)[0] | humanize | titlecase}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"anchor\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let gem\"> <a attr.data-wowhead=\"item={{gem.id}}\"></a> </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"header-title-row\">\n        <mat-header-cell *matHeaderCellDef style=\"justify-content: center !important\" attr.colspan=\"4\">Gems\n        </mat-header-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"['header-title-row']; sticky: true\"></mat-header-row>\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n    </mat-table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { BlizzardApiService } from '../blizzard-api.service';\nimport { Character } from '../character/character';\nimport { GearSlots } from '../character/gearslot';\nimport { Race, Races } from '../character/races/race';\nimport { Item } from '../item/item';\nimport { NewSpecComponent } from '../new-spec/new-spec.component';\nimport { SharedDataService } from '../shared/shared-data.service';\n\n@Component({\n  selector: 'app-character-config',\n  templateUrl: './character-config.component.html',\n  styleUrls: ['./character-config.component.scss']\n})\nexport class CharacterConfigComponent implements OnInit {\n\n  constructor(private sharedDataService: SharedDataService,\n    private blizzardApiService: BlizzardApiService,\n    private dialog: MatDialog) { }\n\n  itemIconUrls: { [key: number]: string } = {};\n\n  character!: Character\n  GearSlots = GearSlots;\n  GearSlotKeys = Object.values(GearSlots);\n\n  RaceValues = Object.values(Races);\n  currentRaceValue: string = '';\n\n  ngOnInit(): void {\n    this.sharedDataService.character.subscribe(character => {\n      this.currentRaceValue = character.race.name\n      this.character = character;\n      Object.keys(this.character.gear).forEach((gearSlot) => {\n        const item: Item = this.character.gear[gearSlot as keyof typeof GearSlots];\n        if (item.id !== 0 && item.id !== undefined) {\n          this.getItemImage(item.id)\n        }\n      })\n    })\n  }\n\n  getGearIdForSlot(gear: string) {\n    return this.character.gear[gear as keyof typeof GearSlots].id\n  }\n\n  raceChange(event: MatSelectChange) {\n    console.log()\n    const character = this.sharedDataService.character.value\n    character.race = new Race(event.value)\n    this.sharedDataService.character.next(character);\n  }\n\n  getItemIcon(id: number): string {\n    if (this.itemIconUrls[id]) {\n      return `url('${this.itemIconUrls[id]}')`\n    }\n    return '';\n  }\n\n  createNewSpec(event: any) {\n    this.dialog.open(NewSpecComponent, {\n      width: '500px'\n    });\n    event.stopPropagation();\n  }\n\n\n  private getItemImage(id: number) {\n    if (!this.itemIconUrls[id]) {\n      this.blizzardApiService.getItemMediaURL(id).then(obs => {\n        obs.subscribe(link => this.itemIconUrls[id] = link)\n      });\n    }\n  }\n\n\n}\n","<div>\n  <mat-form-field style=\"margin-top: 30px;\" appearence=\"outline\">\n    <mat-label>Character Race</mat-label>\n    <mat-select #raceSelect (selectionChange)=\"raceChange($event)\" [value]=\"currentRaceValue\">\n      <mat-option *ngFor=\"let race of RaceValues\" [value]=\"race\">{{race | humanize}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n\n<div class=\"flex-grid\">\n  <div class=\"character-panel\">\n    <app-character-item-display *ngFor=\"let slot of GearSlotKeys\" class=\"icon\" [ngClass]=\"slot\"\n      [item]=\"character.gear[slot]\" [backgroundUrl]=\"getItemIcon(character.gear[slot].id)\">\n    </app-character-item-display>\n  </div>\n  <div style=\"margin-left: 30px;\">\n    Spec: {{character.spec.holyProtRetCount}} <button style=\"margin-left: 100px\" mat-raised-button color=\"accent\" (click)=\"createNewSpec($event)\">Import Spec</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Attack } from '../character/abilities/attack';\r\nimport { Consecration } from '../character/abilities/consecration';\r\nimport { HolyShield } from '../character/abilities/holy-shield';\r\nimport { Judgement } from '../character/abilities/judgement';\r\nimport { SealOfVengeance } from '../character/abilities/seal-of-vengeance';\r\nimport { SaveService } from '../save.service';\r\nimport { AbilityInterface, BossAbilityInterface, damageTakenInterface } from '../shared/abilityInterface';\r\nimport { BossAttack } from './boss-abilities/boss-attack';\r\nimport { Creature } from './creature';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CombatService {\r\n  combatResults: BehaviorSubject<Array<TimeSlotResults[]>> = new BehaviorSubject(new Array());\r\n  spellPriority = ['Holy Shield', 'Judgement', 'Consecration', 'Seal of Vengeance']\r\n\r\n  webworker!: Worker\r\n\r\n  constructor(private saveService: SaveService) { }\r\n\r\n  startCombat(timeToRun: number): void {\r\n    const multipleCombatSessions: TimeSlotResults[][] = [];\r\n    for (let k = 0; k < 500; k++) {\r\n      const character = this.saveService.getLoadData(JSON.stringify(this.saveService.getSaveData()));\r\n      const creature = new Creature();\r\n      const abilities = {\r\n        attack: new Attack(),\r\n        SoV: new SealOfVengeance(),\r\n        holyShield: new HolyShield(),\r\n        bossAttack: new BossAttack(),\r\n        consecration: new Consecration(),\r\n        judgement: new Judgement()\r\n      }\r\n      const registeredAbilities: registeredAbilitiesInterface = {\r\n        playerAbiliities: [abilities.attack, abilities.judgement, abilities.SoV, abilities.holyShield, abilities.consecration],\r\n        bossAbilities: [abilities.bossAttack],\r\n        reactiveAbilities: [abilities.holyShield]\r\n      }\r\n\r\n      const webWorker = new Worker('./simulation-web-worker.worker.ts', { type: `module` })\r\n      webWorker.onmessage = ((result: MessageEvent<TimeSlotResults[]>) => {\r\n        multipleCombatSessions.push(result.data);\r\n        if (multipleCombatSessions.length === 500) {\r\n          this.combatResults.next(multipleCombatSessions);\r\n        }\r\n      })\r\n      webWorker.postMessage({ character: character, creature: creature, abilities: registeredAbilities, spellPriority: this.spellPriority, timeToRun: timeToRun })\r\n    }\r\n  }\r\n}\r\n\r\nexport interface TimeSlotResults {\r\n  damageDone: damageTakenInterface[],\r\n  damageTaken: damageTakenInterface[]\r\n}\r\n\r\ninterface registeredAbilitiesInterface {\r\n  playerAbiliities: AbilityInterface[],\r\n  bossAbilities: BossAbilityInterface[],\r\n  reactiveAbilities: AbilityInterface[];\r\n}\r\n\r\n\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StatsTotalsComponent } from './stats-totals/stats-totals.component';\r\nimport { GearSlotComponent } from './gear-slot/gear-slot.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { GearSelectorComponent } from './gear-selector/gear-selector.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { ReferencesComponent } from './references/references.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NewGearComponent } from './new-gear/new-gear.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NewSpecComponent } from './new-spec/new-spec.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { HumanizePipe } from './humanize.pipe';\r\nimport { ControlsComponent } from './controls/controls.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { CharacterConfigComponent } from './character-config/character-config.component';\r\nimport { GearAlterationComponent } from './gear-alteration/gear-alteration.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CharacterItemDisplayComponent } from './character-item-display/character-item-display.component';\r\nimport { EnchantsComponent } from './enchants/enchants.component';\r\nimport { CurrentGemsComponent } from './current-gems/current-gems.component';\r\nimport { NewEnchantComponent } from './new-enchant/new-enchant.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SimModule } from './sim/sim.module';\r\nimport { SimRoutingModule } from './sim/sim-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StatsTotalsComponent,\r\n    GearSlotComponent,\r\n    GearSelectorComponent,\r\n    ReferencesComponent,\r\n    NewGearComponent,\r\n    NewSpecComponent,\r\n    HumanizePipe,\r\n    ControlsComponent,\r\n    ErrorComponent,\r\n    CharacterConfigComponent,\r\n    GearAlterationComponent,\r\n    CharacterItemDisplayComponent,\r\n    EnchantsComponent,\r\n    CurrentGemsComponent,\r\n    NewEnchantComponent,\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatCheckboxModule,\r\n    SimModule,\r\n    SimRoutingModule,\r\n\r\n  ],\r\n  /*   providers: [\r\n      {\r\n        provide: APP_BASE_HREF,\r\n        useFactory: function () {\r\n          const location = window.location.pathname.split('/')[1] || '';\r\n          console.log('location',)\r\n          if (location !== 'gear' && location !== 'character') {\r\n            return `/${location}/`\r\n          } else {\r\n            return '/'\r\n          }\r\n        }\r\n      }\r\n    ], */\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ItemStats } from \"../item/item-stats\";\r\n\r\nimport { JsonProperty, Serializable } from 'typescript-json-serializer';\r\n\r\n@Serializable()\r\nexport class Spec {\r\n\r\n  @JsonProperty() talents!: TalentMap;\r\n  @JsonProperty() talentString: string;\r\n\r\n  constructor(talentAllocation: string = '0000000000000000000000000000000000000000000000000000000000000000') {\r\n    this.initTalents(talentAllocation);\r\n    this.talentString = talentAllocation;\r\n  }\r\n\r\n  getMultipliers(): ItemStats {\r\n    return {\r\n      strength: this.talents.divineStrength * 0.02,\r\n      stamina: this.stamMultiplier,\r\n      intellect: this.talents.divineIntellect * 0.02,\r\n      armor: this.talents.toughness * 0.02,\r\n      blockValue: this.talents.shieldSpecialization * 0.1\r\n    }\r\n  }\r\n\r\n  getValues(): ItemStats {\r\n    return {\r\n      meleeHitPercent: this.talents.precision,\r\n      spellHitPercent: this.talents.precision,\r\n      meleeExpertise: this.talents.combatExpertise,\r\n      defenseValue: this.talents.anticipation * 4,\r\n      parryValue: this.talents.defection\r\n    }\r\n  }\r\n\r\n  get holyProtRetCount(): string {\r\n    const specStringArray = this.talentString.split('')\r\n    const holyCount = specStringArray.slice(0, 20).reduce((a, b) => +a + +b, 0);\r\n    const protCount = specStringArray.slice(20, 42).reduce((a, b) => +a + +b, 0);\r\n    const retCount = specStringArray.slice(42, -1).reduce((a, b) => +a + +b, 0);\r\n    return `${holyCount}/${protCount}/${retCount}`\r\n  }\r\n\r\n  private get stamMultiplier(): number {\r\n    const sacredDutyBonus = 0.03;\r\n    const combatExpertiseBonus = 0.02\r\n    return (sacredDutyBonus * this.talents.sacredDuty) + (combatExpertiseBonus * this.talents.combatExpertise);\r\n  }\r\n\r\n  private initTalents(talentAllocation: string) {\r\n    const digits = talentAllocation.split('');\r\n    this.talents = {\r\n      // holy\r\n      divineStrength: +digits[0],\r\n      divineIntellect: +digits[1],\r\n      spiritualFocus: +digits[2],\r\n      improvedSoR: +digits[3],\r\n      healingLight: +digits[4],\r\n      auraMastery: +digits[5],\r\n      improvedLoH: +digits[6],\r\n      unyieldingFaith: +digits[7],\r\n      illumination: +digits[8],\r\n      improvedBoW: +digits[9],\r\n      pureOfHeart: +digits[10],\r\n      divineFavor: +digits[11],\r\n      sanctifiedLight: +digits[12],\r\n      purifyingPower: +digits[13],\r\n      holyPower: +digits[14],\r\n      lightsGrace: +digits[15],\r\n      holyShock: +digits[16],\r\n      blessedLife: +digits[17],\r\n      holyGuidance: +digits[18],\r\n      divineIllumination: +digits[19],\r\n      // prot\r\n      improvedDevoAura: +digits[20],\r\n      redoubt: +digits[21],\r\n      precision: +digits[22],\r\n      guardiansFavor: +digits[23],\r\n      toughness: +digits[24],\r\n      blessingOfKings: +digits[25],\r\n      improvedRighteousFury: +digits[26],\r\n      shieldSpecialization: +digits[27],\r\n      anticipation: +digits[28],\r\n      stoicism: +digits[29],\r\n      improvedHoJ: +digits[30],\r\n      improvedConcAura: +digits[31],\r\n      spellWarding: +digits[32],\r\n      blessingOfSanctuary: +digits[33],\r\n      reckoning: +digits[34],\r\n      sacredDuty: +digits[35],\r\n      oneHandedSpec: +digits[36],\r\n      improvedHolyShield: +digits[37],\r\n      holyShield: +digits[38],\r\n      ardentDefender: +digits[39],\r\n      combatExpertise: +digits[40],\r\n      AvengersShield: +digits[41],\r\n      // ret\r\n      improvedBoM: +digits[42],\r\n      benediction: +digits[43],\r\n      impJudgement: +digits[44],\r\n      improvedSoC: +digits[45],\r\n      defection: +digits[46],\r\n      vindication: +digits[47],\r\n      conviction: +digits[48],\r\n      sealOfCommand: +digits[49],\r\n      pursuitOfJustice: +digits[50],\r\n      eyeForAnEye: +digits[51],\r\n      improvedRetAura: +digits[52],\r\n      crusade: +digits[53],\r\n      twoHandedSpec: +digits[54],\r\n      sanctityAura: +digits[55],\r\n      imporovedSanctityAura: +digits[56],\r\n      vengeance: +digits[57],\r\n      sanctifiedJudgement: +digits[58],\r\n      sanctifiedSeals: +digits[59],\r\n      repentance: +digits[60],\r\n      divinePurpose: +digits[61],\r\n      fanaticism: +digits[62],\r\n      crusaderStrike: +digits[63]\r\n    };\r\n  }\r\n}\r\n\r\nexport interface TalentMap {\r\n  // holy\r\n  divineStrength: number,\r\n  divineIntellect: number,\r\n  spiritualFocus: number,\r\n  improvedSoR: number,\r\n  healingLight: number,\r\n  auraMastery: number,\r\n  improvedLoH: number,\r\n  unyieldingFaith: number,\r\n  illumination: number,\r\n  improvedBoW: number,\r\n  pureOfHeart: number,\r\n  divineFavor: number,\r\n  sanctifiedLight: number,\r\n  purifyingPower: number,\r\n  holyPower: number,\r\n  lightsGrace: number,\r\n  holyShock: number,\r\n  blessedLife: number,\r\n  holyGuidance: number,\r\n  divineIllumination: number,\r\n  // prot\r\n  improvedDevoAura: number,\r\n  redoubt: number,\r\n  precision: number,\r\n  guardiansFavor: number,\r\n  toughness: number,\r\n  blessingOfKings: number,\r\n  improvedRighteousFury: number,\r\n  shieldSpecialization: number,\r\n  anticipation: number,\r\n  stoicism: number,\r\n  improvedHoJ: number,\r\n  improvedConcAura: number,\r\n  spellWarding: number,\r\n  blessingOfSanctuary: number,\r\n  reckoning: number,\r\n  sacredDuty: number,\r\n  oneHandedSpec: number,\r\n  improvedHolyShield: number,\r\n  holyShield: number,\r\n  ardentDefender: number,\r\n  combatExpertise: number,\r\n  AvengersShield: number,\r\n  // ret\r\n  improvedBoM: number,\r\n  benediction: number,\r\n  impJudgement: number,\r\n  improvedSoC: number,\r\n  defection: number,\r\n  vindication: number,\r\n  conviction: number,\r\n  sealOfCommand: number,\r\n  pursuitOfJustice: number,\r\n  eyeForAnEye: number,\r\n  improvedRetAura: number,\r\n  crusade: number,\r\n  twoHandedSpec: number,\r\n  sanctityAura: number,\r\n  imporovedSanctityAura: number,\r\n  vengeance: number,\r\n  sanctifiedJudgement: number,\r\n  sanctifiedSeals: number,\r\n  repentance: number,\r\n  divinePurpose: number,\r\n  fanaticism: number,\r\n  crusaderStrike: number\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { damageTakenInterface } from 'src/app/shared/abilityInterface';\r\nimport { DamageType } from 'src/app/shared/magic-school';\r\nimport { SharedDataService } from 'src/app/shared/shared-data.service';\r\nimport { CombatService, TimeSlotResults } from '../combat.service';\r\n\r\n@Component({\r\n  selector: 'app-sim-results',\r\n  templateUrl: './sim-results.component.html',\r\n  styleUrls: ['./sim-results.component.scss']\r\n})\r\nexport class SimResultsComponent implements OnInit {\r\n\r\n  showGraph: boolean = false;\r\n\r\n  dataSource: MatTableDataSource<SimResultsGraphInterface> = new MatTableDataSource(new Array());\r\n\r\n  constructor(private combatService: CombatService, private sharedDataService: SharedDataService) { }\r\n\r\n  BURST_mSECONDS = 10000 / 10;\r\n  BURST_SECONDS = 10;\r\n  FULL_DURATION_SECONDS = 120\r\n\r\n  showColumns = ['valueType', 'min', 'onePercentLow', 'fivePercentLow', 'average', 'max']\r\n\r\n  // BurstArray: DamageThreatInterface[] = new Array()\r\n  // fullArray: DamageThreatInterface[] = new Array()\r\n\r\n  ngOnInit(): void {\r\n    this.combatService.combatResults.subscribe((combatResults: TimeSlotResults[][]) => {\r\n      if (combatResults[0]) {\r\n        const [multiRunBustArray, multiRunFullArray] = this.determineDamageAndThreat(combatResults);\r\n        const burstValues = this.totalEachRun(multiRunBustArray);\r\n        const fullRunValues = this.totalEachRun(multiRunFullArray);\r\n        const dataTable = this.translateDataToTable(burstValues, fullRunValues);\r\n        this.dataSource.data = dataTable;\r\n      }\r\n    })\r\n  }\r\n\r\n  private translateDataToTable(burstValues: DamageThreatInterface[], fullRunValues: DamageThreatInterface[]): SimResultsGraphInterface[] {\r\n    const burstOnePercentLowIndex = Math.floor(burstValues.length * 0.01);\r\n    const burstFivePercentLowIndex = Math.floor(burstValues.length * 0.05);\r\n    const onePercentLowIndex = Math.floor(burstValues.length * 0.01);\r\n    const fivePercentLowIndex = Math.floor(burstValues.length * 0.05);\r\n    return [{\r\n      name: 'DPS (First 15 Seconds)',\r\n      \"min\": Math.round(Math.min(...burstValues.map(v => v.damage)) / this.BURST_SECONDS),\r\n      \"1% low\": Math.round(burstValues.sort((a, b) => a.damage - b.damage)[burstOnePercentLowIndex].damage / this.BURST_SECONDS),\r\n      \"5% low\": Math.round(burstValues.sort((a, b) => a.damage - b.damage)[burstFivePercentLowIndex].damage / this.BURST_SECONDS),\r\n      \"average\": Math.round(burstValues.reduce((a, b) => a + b.damage, 0) / burstValues.length / this.BURST_SECONDS),\r\n      \"max\": Math.round(Math.max(...burstValues.map(v => v.damage)) / this.BURST_SECONDS)\r\n    },\r\n    {\r\n      name: 'DPS (2 Minute Fight)',\r\n      \"min\": Math.round(Math.min(...fullRunValues.map(v => v.damage)) / this.FULL_DURATION_SECONDS),\r\n      \"1% low\": Math.round(fullRunValues.sort((a, b) => a.damage - b.damage)[onePercentLowIndex].damage / this.FULL_DURATION_SECONDS),\r\n      \"5% low\": Math.round(fullRunValues.sort((a, b) => a.damage - b.damage)[fivePercentLowIndex].damage / this.FULL_DURATION_SECONDS),\r\n      \"average\": Math.round(fullRunValues.reduce((a, b) => a + b.damage, 0) / fullRunValues.length / this.FULL_DURATION_SECONDS),\r\n      \"max\": Math.round(Math.max(...fullRunValues.map(v => v.damage)) / this.FULL_DURATION_SECONDS)\r\n    },\r\n    {\r\n      name: 'TPS (First 15 Seconds)',\r\n      \"min\": Math.round(Math.min(...burstValues.map(v => v.threat)) / this.BURST_SECONDS),\r\n      \"1% low\": Math.round(burstValues.sort((a, b) => a.threat - b.threat)[burstOnePercentLowIndex].threat / this.BURST_SECONDS),\r\n      \"5% low\": Math.round(burstValues.sort((a, b) => a.threat - b.threat)[burstFivePercentLowIndex].threat / this.BURST_SECONDS),\r\n      \"average\": Math.round(burstValues.reduce((a, b) => a + b.threat, 0) / burstValues.length / this.BURST_SECONDS),\r\n      \"max\": Math.round(Math.max(...burstValues.map(v => v.threat)) / this.BURST_SECONDS),\r\n    },\r\n    {\r\n      name: 'TPS (2 Minute Fight)',\r\n      \"min\": Math.round(Math.min(...fullRunValues.map(v => v.threat)) / this.FULL_DURATION_SECONDS),\r\n      \"1% low\": Math.round(fullRunValues.sort((a, b) => a.threat - b.threat)[onePercentLowIndex].threat / this.FULL_DURATION_SECONDS),\r\n      \"5% low\": Math.round(fullRunValues.sort((a, b) => a.threat - b.threat)[fivePercentLowIndex].threat / this.FULL_DURATION_SECONDS),\r\n      \"average\": Math.round(fullRunValues.reduce((a, b) => a + b.threat, 0) / fullRunValues.length / this.FULL_DURATION_SECONDS),\r\n      \"max\": Math.round(Math.max(...fullRunValues.map(v => v.threat)) / this.FULL_DURATION_SECONDS)\r\n    }]\r\n  }\r\n\r\n  private totalEachRun(array: DamageThreatInterface[][]): DamageThreatInterface[] {\r\n    return array.map(run => {\r\n      return {\r\n        damage: run.reduce((a, b) => a + b.damage, 0),\r\n        threat: run.reduce((a, b) => a + b.threat, 0),\r\n      };\r\n    })\r\n  }\r\n\r\n  private determineDamageAndThreat(combatResults: TimeSlotResults[][]) {\r\n    const multiRunBustArray: DamageThreatInterface[][] = new Array();\r\n    const multiRunFullArray: DamageThreatInterface[][] = new Array();\r\n    combatResults.forEach((combatSession: TimeSlotResults[]) => {\r\n      const burstArray: DamageThreatInterface[] = new Array();\r\n      const fullArray: DamageThreatInterface[] = new Array();\r\n      combatSession.forEach((combatTimeSlice: TimeSlotResults, index: number) => {\r\n        combatTimeSlice.damageDone.forEach((damageDone: damageTakenInterface) => {\r\n          const result: DamageThreatInterface = {\r\n            damage: damageDone.damageAmount,\r\n            threat: this.determineThreat(damageDone)\r\n          }\r\n          if (index <= this.BURST_mSECONDS) {\r\n            burstArray.push(result)\r\n          };\r\n          fullArray.push(result);\r\n        })\r\n      })\r\n      multiRunBustArray.push(burstArray);\r\n      multiRunFullArray.push(fullArray);\r\n    })\r\n    return [multiRunBustArray, multiRunFullArray];\r\n  }\r\n\r\n  private determineThreat(combatResults: damageTakenInterface): number {\r\n    const character = this.sharedDataService.character.value;\r\n    let holythreatModifier = 0.6;\r\n    const improvedRighteousFuryTalents = character.spec.talents.improvedRighteousFury;\r\n    if (improvedRighteousFuryTalents && improvedRighteousFuryTalents > 0) {\r\n      improvedRighteousFuryTalents === 1 ? holythreatModifier = holythreatModifier * 1.16 : null;\r\n      improvedRighteousFuryTalents === 2 ? holythreatModifier = holythreatModifier * 1.33 : null;\r\n      improvedRighteousFuryTalents === 3 ? holythreatModifier = holythreatModifier * 1.50 : null;\r\n    }\r\n    let totalThreat = combatResults.damageAmount;\r\n    if (combatResults.damageType === DamageType.holy) {\r\n      totalThreat = totalThreat * (1 + holythreatModifier);\r\n    }\r\n    if (combatResults.circumstance === 'Holy Shield') {\r\n      totalThreat = totalThreat * 1.35\r\n    }\r\n    return totalThreat\r\n  }\r\n\r\n}\r\n\r\ninterface SimResultsGraphInterface {\r\n  name: string,\r\n  'min': number,\r\n  '1% low': number,\r\n  '5% low': number,\r\n  'average': number,\r\n  'max': number,\r\n}\r\n\r\ninterface DamageThreatInterface {\r\n  damage: number,\r\n  threat: number\r\n}\r\n","<div>\r\n  <mat-table [dataSource]=\"dataSource\">\r\n    <ng-container matColumnDef=\"valueType\">\r\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.name}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"min\">\r\n      <mat-header-cell *matHeaderCellDef>Min</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.min}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"onePercentLow\">\r\n      <mat-header-cell *matHeaderCellDef>1% Lows</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row['1% low']}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"fivePercentLow\">\r\n      <mat-header-cell *matHeaderCellDef>5% Lows</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row['5% low']}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"average\">\r\n      <mat-header-cell *matHeaderCellDef>Average</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.average}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"max\">\r\n      <mat-header-cell *matHeaderCellDef>Max</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.max}}</mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"showColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: showColumns\"></mat-row>\r\n  </mat-table>\r\n</div>\r\n","import { AttackTable } from \"../shared/attack-table\";\r\nimport { DamageType, Resistances } from \"../shared/magic-school\";\r\n\r\nexport class Creature {\r\n  _id!: number;\r\n  id!: number;\r\n  minMeleeDamage: number = 4715\r\n  maxMeleeDamage: number = 7508\r\n  attackSpeed: number = 2;\r\n  specialAttacks!: specialAttacksInterface[];\r\n  armor: number = 7700;\r\n  resistances!: Resistances[]\r\n  level: number = 73;\r\n  buffs: { [key: string]: any } = {}\r\n  debuffs: { [key: string]: any } = {}\r\n\r\n\r\n  /////////// coppied from character ////////////////\r\n  get AttackTable(): AttackTable {\r\n    return {\r\n      miss: -0.6,\r\n      dodge: -0.6, // 1 expertise reduces dodge chance by 0.25%\r\n      parry: -0.6, // 1 expertise reduces dodge chance by 0.25%,\r\n      glancing: 0,\r\n      block: -0.6, //most bosses can't block\r\n      crit: 5.6,\r\n      crushing: 15, //characters cannot crush bosses\r\n      hit: 0 // whatever the rest is\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport interface specialAttacksInterface {\r\n  name: string;\r\n  damage: number;\r\n  school: DamageType\r\n}\r\n","export enum DamageType {\r\n  holy = 'holy',\r\n  shadow = 'shadow',\r\n  fire = 'fire',\r\n  arcane = 'arcane',\r\n  physical = 'physical'\r\n}\r\n\r\n\r\nexport type Resistances = {\r\n  [key in DamageType]: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as Realm from \"realm-web\";\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Enchant } from './item/enchant';\r\nimport { Gem } from './item/gem';\r\nimport { Item } from './item/item';\r\n\r\nconst DBName = 'tbc-gear';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatabaseService {\r\n\r\n  realmApp!: Realm.App;\r\n  mongoDB!: globalThis.Realm.Services.MongoDB\r\n  user!: Realm.User;\r\n\r\n  isConnected: boolean = false;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    this.realmApp = new Realm.App({ id: \"tankadin_sim_tbc-gyyrn\" });\r\n    const credentials = Realm.Credentials.anonymous();\r\n    const user: Realm.User = await this.realmApp.logIn(credentials);\r\n    this.mongoDB = user.mongoClient(\r\n      \"mongodb-atlas\"\r\n    );\r\n    this.isConnected = true;\r\n  }\r\n\r\n  get enchantCollection(): Promise<globalThis.Realm.Services.MongoDB.MongoDBCollection<Enchant>> {\r\n    return new Promise(async (resolve) => {\r\n      await this.waitForConnection();\r\n      try {\r\n        return resolve(this.mongoDB.db(DBName).collection<Enchant>('enchants'))\r\n      } catch (e) {\r\n        await this.init()\r\n        return resolve(this.mongoDB.db(DBName).collection<Enchant>('enchants'))\r\n      }\r\n    });\r\n  }\r\n\r\n  get gearCollection(): Promise<globalThis.Realm.Services.MongoDB.MongoDBCollection<Item>> {\r\n    return new Promise(async (resolve) => {\r\n      await this.waitForConnection()\r\n      try {\r\n        return resolve(this.mongoDB.db(DBName).collection<Item>('gear'));\r\n      } catch(e){\r\n        await this.init()\r\n        return resolve(this.mongoDB.db(DBName).collection<Item>('gear'));\r\n      }\r\n    })\r\n  }\r\n\r\n  get gemCollection(): Promise<globalThis.Realm.Services.MongoDB.MongoDBCollection<Gem>> {\r\n    return new Promise(async (resolve) => {\r\n      await this.waitForConnection()\r\n      try {\r\n        return resolve(this.mongoDB.db(DBName).collection<Gem>('gems'));\r\n      } catch(e){\r\n        await this.init();\r\n        return resolve(this.mongoDB.db(DBName).collection<Gem>('gems'));\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  private async waitForConnection() {\r\n    while (!this.isConnected) {\r\n      await this.sleep(100);\r\n    }\r\n  }\r\n\r\n  private sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Character } from '../character/character';\r\nimport { GemAlterationInterface } from '../gear/gear.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n\r\n  character: BehaviorSubject<Character> = new BehaviorSubject<Character>(new Character());\r\n  gemLogic!: GemAlterationInterface;\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-references',\n  templateUrl: './references.component.html',\n  styleUrls: ['./references.component.scss']\n})\nexport class ReferencesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","https://wowwiki-archive.fandom.com/wiki/Paladin_attributes\r\nhttps://classic.wowhead.com/guides/classic-wow-stats-and-attributes-overview\r\n","import { JsonProperty, Serializable } from \"typescript-json-serializer\";\r\nimport { ItemStats } from \"../../item/item-stats\"\r\n\r\nexport enum Races {\r\n  bloodElf = \"Blood Elf\",\r\n  draeni = 'Draeni',\r\n  dwarf = 'Dwarf',\r\n  human = 'Human'\r\n}\r\n\r\n\r\nconst raceAttributeValues: { [key in Races]: ItemStats } = {\r\n  [Races.bloodElf]: { strength: 19, agility: 22, stamina: 22, intellect: 23, spirit: 19 },\r\n  [Races.draeni]: { strength: 23, agility: 17, stamina: 22, intellect: 20, spirit: 23 },\r\n  [Races.dwarf]: { strength: 27, agility: 16, stamina: 23, intellect: 19, spirit: 20 },\r\n  [Races.human]: { strength: 22, agility: 20, stamina: 22, intellect: 20, spirit: 21 }\r\n}\r\n\r\n@Serializable()\r\nexport class Race {\r\n\r\n  @JsonProperty() stats: ItemStats;\r\n  @JsonProperty() name: Races\r\n\r\n  constructor(race: Races) {\r\n    this.stats = raceAttributeValues[race];\r\n    this.name = race;\r\n  }\r\n}\r\n\r\n","import { AbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\r\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\r\nimport { DamageType } from \"src/app/shared/magic-school\";\r\nimport { Creature } from \"src/app/sim/creature\";\r\nimport { Character } from \"../character\";\r\n\r\nexport class SealOfVengeance implements AbilityInterface {\r\n  magicSchool: DamageType;\r\n  name: string;\r\n  onGCD: boolean;\r\n  internalCD: number;\r\n\r\n  lastApply = 0;\r\n\r\n  constructor() {\r\n    this.magicSchool = DamageType.holy;\r\n    this.name = \"Seal of Vengeance\"\r\n    this.onGCD = true;\r\n    this.internalCD = 0;\r\n  }\r\n  onHit(rollResult: AttackTableEnum, attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n    if (attacker.buffs[this.name] && attacker.buffs[this.name].active) {\r\n      if (rollResult && rollResult !== AttackTableEnum.miss && rollResult !== AttackTableEnum.dodge && rollResult !== AttackTableEnum.parry) {\r\n        const procChance = 100 * (20 / 60 * attacker.attackSpeed);\r\n        const didProc = (Math.random() * 100 <= procChance)\r\n        if (didProc) {\r\n          if (!defender.debuffs[this.name]) {\r\n            defender.debuffs[this.name] = { stacks: 0, lastDamageAppliedTimestamp: -9999999999, expires: -999999999 };\r\n          }\r\n          defender.debuffs[this.name].lastStackAppliedTimestamp = timeElapsed\r\n          let currentStacks = defender.debuffs[this.name].stacks;\r\n          if (currentStacks === 5) {\r\n            // apply melee damage\r\n          } else {\r\n            defender.debuffs[this.name].stacks += 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  onCast(attacker: Character, defender: Creature, timeElapsed: number): boolean {\r\n    if (!attacker.buffs[this.name] || attacker.buffs[this.name].active === false || attacker.buffs[this.name].expires - 5000 <= timeElapsed) {\r\n      attacker.buffs[this.name] = { active: true, expires: timeElapsed + 30000 }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  onCheck(attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n    if (attacker.buffs[this.name] && attacker.buffs[this.name].expires <= timeElapsed) {\r\n      attacker.buffs[this.name].active = false;\r\n    }\r\n    if (defender.debuffs[this.name] && (defender.debuffs[this.name].lastStackAppliedTimestamp + 15000 <= timeElapsed)) {  //drop stacks if one hasn't been applied in the last 15 seconds\r\n      defender.debuffs[this.name].stacks = 0;\r\n    }\r\n    if (defender.debuffs[this.name]?.lastDamageAppliedTimestamp + 3000 <= timeElapsed) {\r\n      const numOfStacks = defender.debuffs[this.name].stacks;\r\n      let damagePer15 = (150 + (attacker.spellDamage * 0.034)) * numOfStacks;\r\n      const damagePerTick = damagePer15 / 5  // one tick every 3 seconds\r\n      defender.debuffs[this.name].lastDamageAppliedTimestamp = timeElapsed;\r\n      return {\r\n        circumstance: 'SoV Dot',\r\n        damageAmount: damagePerTick,\r\n        damageType: this.magicSchool,\r\n        comment: `${numOfStacks} stacks`\r\n      }\r\n    }\r\n  }\r\n}\r\n","export interface AttackTable {\r\n  [AttackTableEnum.miss]: number;\r\n  [AttackTableEnum.dodge]: number;\r\n  [AttackTableEnum.parry]: number;\r\n  [AttackTableEnum.glancing]: number;\r\n  [AttackTableEnum.block]: number;\r\n  [AttackTableEnum.miss]: number;\r\n  [AttackTableEnum.crit]: number;\r\n  [AttackTableEnum.crushing]: number;\r\n  [AttackTableEnum.hit]: number;\r\n}\r\n\r\nexport enum AttackTableEnum {\r\n  miss = 'miss',\r\n  dodge = 'dodge',\r\n  parry = 'parry',\r\n  glancing = 'glancing',\r\n  block = 'block',\r\n  crit = 'crit',\r\n  crushing = 'crushing',\r\n  hit = 'hit'\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n  <h2> Selected Gear's Gems </h2>\r\n</mat-toolbar>\r\n\r\n<div *ngIf=\"gear && gear.id !== 0; else chooseGear\">\r\n  <div *ngIf=\"gear.gemSockets.length > 0; else noGemSlots\">\r\n    <ul>\r\n      <li *ngFor=\"let socket of gear.gemSockets\">\r\n        {{socket.color}} socket:\r\n        <span *ngIf=\"socket.gem; else none\">\r\n          <a class=\"default-pointer\" [ngClass]=\"getRarityClass(socket.gem)\" attr.data-wowhead=\"item={{socket.gem.id}}\">{{socket.gem?.name}}</a>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #chooseGear>\r\n  <div>\r\n    Please choose a gear piece from above to add to your character\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #noGemSlots>\r\n  <div>\r\n    No gem slots on {{gear.name}}\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #none>\r\n  <span>\r\n    None\r\n  </span>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { GearSlots } from '../character/gearslot';\nimport { Gem } from '../item/gem';\nimport { Item } from '../item/item';\nimport { SharedDataService } from '../shared/shared-data.service';\n\n@Component({\n  selector: 'app-current-gems',\n  templateUrl: './current-gems.component.html',\n  styleUrls: ['./current-gems.component.scss']\n})\nexport class CurrentGemsComponent implements OnInit {\n\n  @Input()\n  gearType!: GearSlots\n  gear!: Item;\n\n  constructor(private sharedDataService: SharedDataService) { }\n\n  ngOnInit(): void {\n    this.sharedDataService.character.subscribe(character => {\n      this.gear = character.gear[this.gearType as keyof typeof GearSlots];\n      this.gear.gemSockets\n    })\n  }\n\n\n  getRarityClass(gem: Gem) {\n    return `${gem.quality}-text`\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { deserialize, serialize } from 'typescript-json-serializer';\r\nimport { Character } from './character/character';\r\nimport { GearSlots } from './character/gearslot';\r\nimport { GearService } from './gear/gear.service';\r\nimport { EnchantService } from './item/enchant.service';\r\nimport { SharedDataService } from './shared/shared-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaveService {\r\n\r\n  constructor(private sharedDataService: SharedDataService, private gearService: GearService, private enchantService: EnchantService, private _snackBar: MatSnackBar) { }\r\n\r\n  save() {\r\n    const saveData = this.getSaveData();\r\n    localStorage.setItem('saveData', JSON.stringify(saveData));\r\n    this._snackBar.open('Character Saved!', undefined, { duration: 3000 })\r\n  }\r\n\r\n  getSaveData() {\r\n    const character = this.sharedDataService.character.value;\r\n    const characterJson = serialize(this.sharedDataService.character.value, true);\r\n    characterJson.gear = {};\r\n    Object.keys(character.gear).forEach(slot => {\r\n      characterJson.gear[slot] = {\r\n        itemId: character.gear[slot as keyof typeof GearSlots].id,\r\n        enchantId: character.gear[slot as keyof typeof GearSlots].enchant?.id\r\n      };\r\n    });\r\n    const saveData = {\r\n      character: characterJson,\r\n      gemLogic: this.sharedDataService.gemLogic\r\n    };\r\n    return saveData;\r\n  }\r\n\r\n  load() {\r\n    const saveDataString = localStorage.getItem('saveData');\r\n    if (saveDataString) {\r\n      const character = this.getLoadData(saveDataString);\r\n      this.sharedDataService.character.next(character);\r\n      this.gearService.applyGemsToGear(JSON.parse(saveDataString).gemLogic)\r\n      this._snackBar.open('Character Loaded!', undefined, { duration: 3000 })\r\n    }\r\n    else {\r\n      this._snackBar.open('No saved character to load :-(', undefined, { duration: 3000 })\r\n    }\r\n  }\r\n\r\n  getLoadData(saveDataString: string): Character {\r\n    const characterJson = JSON.parse(saveDataString).character\r\n    const character = deserialize(characterJson, Character);\r\n    const realGear = this.gearService.gearOptions.value\r\n    const slots = Object.keys(characterJson.gear);\r\n    realGear.forEach(rg => {\r\n      slots.forEach(slot => {\r\n        const jsonGearSlot = characterJson.gear[slot]\r\n        if (jsonGearSlot.itemId === rg.id) {\r\n          if (jsonGearSlot.enchantId) {\r\n            rg.enchant = this.enchantService.enchants.value.find(e => e.id === jsonGearSlot.enchantId)!\r\n          }\r\n          character.gear[slot as keyof typeof GearSlots] = rg;\r\n        }\r\n      })\r\n    })\r\n    return character;\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { GearSlots } from '../character/gearslot';\r\nimport { GearSet, GemSocketColor, Item, WeaponType } from '../item/item';\r\nimport { ItemStats, ItemStatsEnum } from '../item/item-stats';\r\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { GemSocket } from '../gem-socket';\r\n\r\n@Component({\r\n  selector: 'app-new-gear',\r\n  templateUrl: './new-gear.component.html',\r\n  styleUrls: ['./new-gear.component.scss']\r\n})\r\nexport class NewGearComponent implements OnInit {\r\n\r\n  item: Item = new Item();\r\n  GearSlots = GearSlots\r\n  GearSlotsKeys = Object.keys(GearSlots).sort();\r\n  attributeList = Object.keys(ItemStatsEnum).sort();\r\n  GemSocketColors = Object.keys(GemSocketColor).sort();\r\n  GearSets = Object.values(GearSet).sort();\r\n  selectedGearSlot!: GearSlots;\r\n  weaponTypesKeys = Object.values(WeaponType).sort();\r\n  showUnique = false;\r\n\r\n  errors = {\r\n    weaponStats: {\r\n      active: false,\r\n      errorMessage: \"Weapons must have 'Attack Speed', 'Damage Min', and 'Damage Max' attributes\"\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<NewGearComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    dialogRef.disableClose = true;\r\n  }\r\n\r\n  addAttributesFormGroup = new FormGroup({\r\n    attributeName: new FormControl(''),\r\n    attributeValue: new FormControl('')\r\n  })\r\n\r\n  createItemFormGroup!: FormGroup;\r\n\r\n  addGemSocketBonusFormGroup = new FormGroup({\r\n    attributeName: new FormControl(''),\r\n    attributeValue: new FormControl('')\r\n  })\r\n\r\n  addGemSocketFormGroup = new FormGroup({\r\n    gemSocketColorToAdd: new FormControl('')\r\n  })\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.selectedGearSlot = this.data.gearSlot;\r\n    this.createItemFormGroup = new FormGroup({\r\n      tbcdbLink: new FormControl('', { validators: [Validators.required, this.validateTBCDBLink()] }),\r\n      itemName: new FormControl('', { validators: [Validators.required] }),\r\n      gearSlot: new FormControl({ value: this.selectedGearSlot, disabled: true }),\r\n      gearSet: new FormControl({ value: GearSet.none, disabled: false }, { validators: [Validators.required] }),\r\n      weaponType: new FormControl('', { validators: [Validators.required] }),\r\n      unique: new FormControl(false)\r\n    })\r\n    if (this.selectedGearSlot !== GearSlots.mainHand) {\r\n      this.removeWeaponStuff()\r\n    }\r\n    if (\r\n      this.selectedGearSlot === GearSlots.trinketOne ||\r\n      this.selectedGearSlot === GearSlots.trinketTwo ||\r\n      this.selectedGearSlot === GearSlots.fingerOne ||\r\n      this.selectedGearSlot === GearSlots.fingerTwo\r\n    ) {\r\n      this.showUnique = true;\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAttributes() {\r\n    const keys = [];\r\n    for (const [key] of Object.entries(this.item.stats)) {\r\n      keys.push(key as keyof ItemStats);\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  addAttribute(event: any) {\r\n    const key = this.addAttributesFormGroup.get('attributeName');\r\n    const value = this.addAttributesFormGroup.get('attributeValue');\r\n    if (key?.value && value?.value) {\r\n      this.item.stats[key?.value as keyof typeof ItemStatsEnum] = +value?.value;\r\n      key?.setValue('');\r\n      value?.setValue('');\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  removeStat(key: string) {\r\n    delete this.item.stats[key as keyof typeof ItemStatsEnum];\r\n  }\r\n\r\n  addGemSocket(event: any) {\r\n    const color = this.addGemSocketFormGroup.get('gemSocketColorToAdd')?.value;\r\n    this.item.gemSockets.push(new GemSocket(color))\r\n    event.stopPropagation();\r\n  }\r\n\r\n  removeGemSocket(gemSocketIndex: number) {\r\n    this.item.gemSockets.splice(gemSocketIndex, 1);\r\n  }\r\n\r\n  createItem() {\r\n    if (this.createItemFormGroup.valid) {\r\n      this.item.set = this.createItemFormGroup.get('gearSet')?.value;\r\n      this.item.name = this.createItemFormGroup.get('itemName')?.value;\r\n      this.item.unique = this.createItemFormGroup.get('unique')?.value;\r\n      const attribute = this.addGemSocketBonusFormGroup.get('attributeName')?.value;\r\n      const value = this.addGemSocketBonusFormGroup.get('attributeValue')?.value\r\n      this.item.gemSockets.sort((a, b) => {\r\n        if (a.color === GemSocketColor.meta) { // always list meta first\r\n          return -1\r\n        } else {\r\n          return 0\r\n        }\r\n      })\r\n      if (attribute && value) {\r\n        this.item.gemSocketBonus = { [attribute as keyof ItemStats]: value }\r\n      }\r\n      if (this.selectedGearSlot === GearSlots.mainHand) {\r\n        this.item.weaponType = this.createItemFormGroup.get('weaponType')?.value;\r\n        if (!this.weaponIsValid()) {\r\n          this.errors.weaponStats.active = true;\r\n          return;\r\n        }\r\n      }\r\n      this.item.validSlot = this.selectedGearSlot;\r\n      this.dialogRef.close(this.item);\r\n    }\r\n  }\r\n\r\n  private removeWeaponStuff() {\r\n    const damageMinIdx = this.attributeList.findIndex(attr => attr === ItemStatsEnum.damageMin)\r\n    this.attributeList.splice(damageMinIdx, 1);\r\n    const damageMaxIdx = this.attributeList.findIndex(attr => attr === ItemStatsEnum.damageMax)\r\n    this.attributeList.splice(damageMaxIdx, 1);\r\n    const attackSpeedIdx = this.attributeList.findIndex(attr => attr === ItemStatsEnum.attackSpeed)\r\n    this.attributeList.splice(attackSpeedIdx, 1);\r\n    this.createItemFormGroup.removeControl('weaponType');\r\n  }\r\n\r\n  private removeUniqueStuff() {\r\n\r\n  }\r\n\r\n  private weaponIsValid(): boolean {\r\n    return (\r\n      this.item.weaponType && Object.values(WeaponType).includes(this.item.weaponType) &&\r\n        this.item.stats.attackSpeed && this.item.stats.attackSpeed > 0 &&\r\n        this.item.stats.damageMin && this.item.stats.damageMin > 0 &&\r\n        this.item.stats.damageMax && this.item.stats.damageMax > 0\r\n        ? true : false);\r\n  }\r\n\r\n\r\n  private validateTBCDBLink(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      const regEx = new RegExp(/^https:\\/\\/tbcdb.com\\/\\?item\\=(\\d+)$/)\r\n      const matchers = control.value.match(regEx);\r\n      if (matchers && matchers[1]) {\r\n        this.item._id = matchers[1]\r\n        this.item.id = matchers[1]\r\n        return null;\r\n      } else {\r\n        return { invalidLink: { value: control.value } }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Add New Gear</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"createItemFormGroup\">\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>tbcdb link</mat-label>\r\n        <input formControlName=\"tbcdbLink\" matInput placeholder=\"https://tbcdb.com/?item=29068\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Item Name</mat-label>\r\n        <input formControlName=\"itemName\" matInput placeholder=\"Justicar Faceguard\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Gear Slot</mat-label>\r\n        <mat-select formControlName=\"gearSlot\">\r\n          <mat-option *ngFor=\"let slot of GearSlotsKeys\" [value]=\"slot\">\r\n            {{slot | humanize}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field>\r\n        <mat-label>Part of set?</mat-label>\r\n        <mat-select formControlName=\"gearSet\">\r\n          <mat-option *ngFor=\"let set of GearSets;\" [value]=\"set\">\r\n            {{set | humanize}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div *ngIf=\"showUnique\">\r\n      <mat-checkbox formControlName=\"unique\" style=\"padding-bottom: 10px;\" color=\"primary\">Unique</mat-checkbox>\r\n    </div>\r\n    <div *ngIf=\"this.selectedGearSlot === GearSlots.mainHand\">\r\n      <mat-form-field>\r\n        <mat-label>Weapon Type</mat-label>\r\n        <mat-select formControlName=\"weaponType\">\r\n          <mat-option *ngFor=\"let type of weaponTypesKeys;\" [value]=\"type\">\r\n            {{type | humanize}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </form>\r\n\r\n  <div>\r\n    <h3>Attributes</h3>\r\n    <app-error *ngIf=\"errors.weaponStats.active\" [errorMessage]=\"errors.weaponStats.errorMessage\"></app-error>\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <th>Attribute</th>\r\n          <th>Value</th>\r\n          <th></th>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let key of getAttributes()\">\r\n            <td>{{key | humanize}}</td>\r\n            <td>{{item.stats[key]}}</td>\r\n            <td><button style=\"float:right;\" mat-raised-button color=\"warn\" (click)=\"removeStat(key)\">Remove</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addAttributesFormGroup\" (ngSubmit)=\"addAttribute($event); false\">\r\n      <div class=\"flex-grid flex-space-between\">\r\n        <div>\r\n          <mat-form-field class=\"small-form-field\">\r\n            <mat-label>Attribute</mat-label>\r\n            <mat-select formControlName=\"attributeName\">\r\n              <mat-option *ngFor=\"let key of attributeList\" [value]=\"key\">{{key | humanize}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field style=\"padding-left: 10px;\" class=\"small-form-field\">\r\n            <mat-label>Value</mat-label>\r\n            <input formControlName=\"attributeValue\" matInput placeholder=\"0\">\r\n          </mat-form-field>\r\n        </div>\r\n        <button mat-raised-button color=\"accent\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div>\r\n    <h3>Gem Sockets</h3>\r\n    <div>\r\n      <ul>\r\n        <li class=\"flex-grid flex-space-between\" *ngFor=\"let socket of item.gemSockets; let i = index;\">\r\n          <span>{{socket.color}}</span>\r\n          <span><button mat-raised-button color=\"warn\" (click)=\"removeGemSocket(i)\">Remove</button></span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <form class=\"flex-grid flex-space-between\" [formGroup]=\"addGemSocketFormGroup\"\r\n      (ngSubmit)=\"addGemSocket($event); false\">\r\n      <mat-form-field style=\"margin-right: 12px\">\r\n        <mat-label>Socket Color</mat-label>\r\n        <mat-select formControlName=\"gemSocketColorToAdd\">\r\n          <mat-option *ngFor=\"let color of GemSocketColors\" [value]=\"color\">{{color}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"accent\">Add</button>\r\n    </form>\r\n    <h3>Socket Bonus</h3>\r\n    <form [formGroup]=\"addGemSocketBonusFormGroup\">\r\n      <div class=\"flex-grid\">\r\n        <mat-form-field class=\"small-form-field\">\r\n          <mat-label>Attribute</mat-label>\r\n          <mat-select formControlName=\"attributeName\">\r\n            <mat-option *ngFor=\"let key of attributeList\" [value]=\"key\">{{key | humanize}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field style=\"padding-left: 10px;\" class=\"small-form-field\">\r\n          <mat-label>Value</mat-label>\r\n          <input formControlName=\"attributeValue\" matInput placeholder=\"0\">\r\n        </mat-form-field>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n\r\n  <div mat-dialog-actions class=\"flex-grid flex-space-between\">\r\n    <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"createItem()\" cdkFocusInitial>Add Gear</button>\r\n  </div>\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatTabGroup } from '@angular/material/tabs';\nimport { ActivatedRoute } from '@angular/router';\nimport { GearSlots } from '../character/gearslot';\n\nconst tabs = {\n  [GearSlots.head]: 0,\n  [GearSlots.neck]: 1,\n  [GearSlots.shoulder]: 2,\n  [GearSlots.back]: 3,\n  [GearSlots.chest]: 4,\n  [GearSlots.wrist]: 5,\n  [GearSlots.hands]: 6,\n  [GearSlots.waist]: 7,\n  [GearSlots.legs]: 8,\n  [GearSlots.feet]: 9,\n  [GearSlots.fingerOne]: 10,\n  [GearSlots.fingerTwo]: 11,\n  [GearSlots.trinketOne]: 12,\n  [GearSlots.trinketTwo]: 13,\n  [GearSlots.mainHand]: 14,\n  [GearSlots.offHand]: 15,\n  [GearSlots.relic]: 16\n}\n\n@Component({\n  selector: 'app-gear-slot',\n  templateUrl: './gear-slot.component.html',\n  styleUrls: ['./gear-slot.component.scss']\n})\nexport class GearSlotComponent implements AfterViewInit {\n\n  @ViewChild('tabsGroup')\n  tabGroup!: MatTabGroup;\n\n  slots = Object.keys(GearSlots);\n  gearSlots = GearSlots\n\n  activeTabIndex = 0;\n\n  constructor(private router: ActivatedRoute) { }\n\n  ngAfterViewInit(): void {\n    const slot: GearSlots = this.router.snapshot.params.slot\n    this.tabGroup.selectedIndex = tabs[GearSlots[slot as keyof typeof GearSlots]];\n  }\n\n  getGearType(slot: string) {\n    return GearSlots[slot as keyof typeof GearSlots];\n  }\n}\n","<div>\r\n  <mat-tab-group #tabsGroup animationDuration=\"0ms\">\r\n    <mat-tab *ngFor=\"let slot of slots; let i = index;\" label=\"{{slot | humanize}}\">\r\n      <app-gear-selector [gearType]=\"getGearType(slot)\"></app-gear-selector>\r\n      <div style=\"margin-bottom: 20px;\" class=\"flex-grid\">\r\n        <app-enchants class=\"flex-fill\" style=\"margin-right: 10px;\" [gearType]=\"getGearType(slot)\"></app-enchants>\r\n        <app-current-gems class=\"flex-fill\" style=\"margin-left: 10px;\" [gearType]=\"getGearType(slot)\">\r\n        </app-current-gems>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <app-gear-alteration></app-gear-alteration>\r\n</div>\r\n","import { AbilityInterface, damageTakenInterface } from \"src/app/shared/abilityInterface\";\r\nimport { AttackTableEnum } from \"src/app/shared/attack-table\";\r\nimport { DamageType } from \"src/app/shared/magic-school\";\r\nimport { Creature } from \"src/app/sim/creature\";\r\nimport { Character } from \"../character\";\r\n\r\nexport class Judgement implements AbilityInterface {\r\n  magicSchool: DamageType = DamageType.holy;\r\n  name: string = 'Judgement';\r\n  onGCD: boolean = false;\r\n  internalCD: number = 10000;\r\n  lastCasted: number = -999999999;\r\n  doDamage = {\r\n    activate: false,\r\n    seal: ''\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  onHit(rollResult: AttackTableEnum, attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n\r\n  }\r\n  onCast(attacker: Character, defender: Creature, timeElapsed: number): boolean {\r\n    if (this.lastCasted + this.internalCD <= timeElapsed) {\r\n      this.internalCD = 10000 - (attacker.spec.talents.impJudgement * 1000);\r\n      if (attacker.buffs['Seal of Vengeance']) {\r\n        this.lastCasted = timeElapsed;\r\n        this.doDamage = { activate: true, seal: 'Seal of Vengeance' }\r\n        return false;\r\n      }\r\n      if (attacker.buffs['Seal of Righteousness']) {\r\n        this.lastCasted = timeElapsed;\r\n        this.doDamage = { activate: true, seal: 'Seal of Vengeance' }\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n  onCheck(attacker: Character, defender: Creature, timeElapsed: number): void | damageTakenInterface {\r\n    if (this.doDamage && this.doDamage.activate && this.doDamage.seal === 'Seal of Vengeance') {\r\n      this.doDamage.activate=false;\r\n      return this.vengeanceDamage(attacker, defender);\r\n    }\r\n  }\r\n\r\n  private vengeanceDamage(attacker: Character, defender: Creature): damageTakenInterface {\r\n    const debuff = defender.debuffs['Seal of Vengeance']\r\n    const debuffStacks = debuff && debuff.stacks ? debuff.stacks : 0\r\n    const damage = (120 * debuffStacks) + (attacker.spellDamage * 0.4286)\r\n    return {\r\n      circumstance: this.name,\r\n      damageAmount: damage,\r\n      damageType: DamageType.holy,\r\n      comment: `Judgement of Vengeance: ${debuffStacks} stacks`\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { Race, Races } from '../character/races/race';\r\nimport { SaveService } from '../save.service';\r\nimport { SharedDataService } from '../shared/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-controls',\r\n  templateUrl: './controls.component.html',\r\n  styleUrls: ['./controls.component.scss']\r\n})\r\nexport class ControlsComponent implements OnInit {\r\n\r\n  constructor(private sharedDataService: SharedDataService, private saveService: SaveService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  save() {\r\n    this.saveService.save();\r\n  }\r\n  load() {\r\n    this.saveService.load();\r\n  }\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n  <div class=\"navigation-buttons\">\r\n    <a routerLink=\"/character\"><button mat-raised-button>Character</button></a>\r\n    <a routerLink=\"/gear/head\"><button mat-raised-button>Gear</button></a>\r\n    <a routerLink=\"/sim\"><button mat-raised-button>Sim</button></a>\r\n  </div>\r\n  <div style=\"width:100%\">\r\n    <h2 style=\"width: 100%\">Configuration</h2>\r\n  </div>\r\n  <div class=\"character-buttons\">\r\n    <button mat-raised-button (click)=\"save()\">Save</button>\r\n    <button mat-raised-button (click)=\"load()\">Load</button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CharacterConfigComponent } from './character-config/character-config.component';\r\nimport { GearSlotComponent } from './gear-slot/gear-slot.component';\r\nimport { SimComponent } from './sim/sim/sim.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'gear/:slot', component: GearSlotComponent },\r\n  { path: 'gear', component: GearSlotComponent },\r\n  { path: 'character', component: CharacterConfigComponent },\r\n  { path: '', redirectTo: 'gear', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\nconst blizzardApiUrl = 'https://us.api.blizzard.com/'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlizzardApiService {\r\n\r\n  blizzardAccessToken: string | null = null;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    if (!this.blizzardAccessToken) {\r\n      this.login().subscribe(token => {\r\n        console.log('token', token)\r\n        this.blizzardAccessToken = 'Bearer ' + token.access_token;\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // async init() {\r\n\r\n  //   this.wowClient = await wow.createInstance({\r\n  //     key: environment.blizzardAPICreds.clientId,\r\n  //     secret: environment.blizzardAPICreds.clientSecret,\r\n  //     origin: 'us', // optional\r\n  //     locale: 'en_US' // optional\r\n  //   })\r\n  // }\r\n\r\n  async getItemMediaURL(itemId: number): Promise<Observable<string>> {\r\n    await this.waitForConnection();\r\n    return this.httpClient.get<ItemMediaResponse>(blizzardApiUrl + `data/wow/media/item/${itemId}`, { headers: this.assembleHeaders(), params: this.assembleParams() }).pipe(\r\n      map(r => {\r\n        const foundRecord = r.assets.find(asset => asset.key === 'icon')?.value\r\n        return foundRecord || '';\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  private login(): Observable<any> {\r\n    console.log('auth header: Basic ' + btoa(`${environment.blizzardAPICreds.clientId}:${environment.blizzardAPICreds.clientSecret}`))\r\n    const headers = new HttpHeaders({\r\n      'Authorization': 'Basic ' + btoa(`${environment.blizzardAPICreds.clientId}:${environment.blizzardAPICreds.clientSecret}`)\r\n    })\r\n\r\n    return this.httpClient.post('https://us.battle.net/oauth/token?grant_type=client_credentials', '', { headers })\r\n  }\r\n\r\n\r\n  private assembleHeaders() {\r\n    return new HttpHeaders({ 'Authorization': this.blizzardAccessToken! });\r\n  }\r\n\r\n  private assembleParams() {\r\n    return new HttpParams({ fromObject: { namespace: 'static-us' } });\r\n  }\r\n\r\n  private async waitForConnection() {\r\n    while (!this.blizzardAccessToken) {\r\n      await this.sleep(100);\r\n    }\r\n  }\r\n\r\n  private sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n\r\n\r\nexport interface ItemMediaResponse {\r\n  _links: {\r\n    self: {\r\n      href: string\r\n    }\r\n  },\r\n  assets: ItemMediaAsset[],\r\n  id: number\r\n}\r\n\r\nexport interface ItemMediaAsset {\r\n  key: string,\r\n  value: string,\r\n  file_data_id: number\r\n}\r\n","import { JsonProperty, Serializable } from \"typescript-json-serializer\";\r\nimport { GemSocket } from \"../gem-socket\";\r\nimport { GearSlots } from \"../character/gearslot\";\r\nimport { ItemStats, ItemStatsEnum } from \"./item-stats\";\r\nimport { GemColor } from \"./gem\";\r\nimport { Enchant } from \"./enchant\";\r\n\r\n@Serializable()\r\nexport class Item {\r\n  @JsonProperty() name: string = '';\r\n  @JsonProperty() id: number = 0;\r\n  @JsonProperty() _id: number;\r\n  @JsonProperty() stats: ItemStats = {};\r\n  @JsonProperty() validSlot: GearSlots | null;\r\n  @JsonProperty() gemSockets: GemSocket[] = [];\r\n  @JsonProperty() gemSocketBonus: ItemStats = {};\r\n  @JsonProperty() set: GearSet = GearSet.none;\r\n  @JsonProperty() weaponType?: WeaponType\r\n  @JsonProperty() enchant: Enchant | null = null;\r\n  @JsonProperty() unique: boolean\r\n\r\n  constructor(gearType: GearSlots | null = null, id: number = 0, name: string = '', stats: ItemStats = {}, unique: boolean = false) {\r\n    this.name = name;\r\n    this.id = id;\r\n    this._id = id;\r\n    this.validSlot = gearType;\r\n    this.stats = stats;\r\n    this.unique = unique\r\n  }\r\n\r\n  getTotalConfiguredStats(): ItemStats {\r\n    const totals: ItemStats = JSON.parse(JSON.stringify(this.stats));\r\n    this.addGemValuesToTotal(totals);\r\n    this.addEnchantValuesToTotal(totals);\r\n    return totals;\r\n  }\r\n\r\n  private addEnchantValuesToTotal(totals: ItemStats): void {\r\n    if (this.enchant) {\r\n      Object.keys(this.enchant.stats).forEach(stat => {\r\n        if (!totals[stat as keyof typeof ItemStatsEnum]) {\r\n          totals[stat as keyof typeof ItemStatsEnum] = 0;\r\n        }\r\n        totals[stat as keyof typeof ItemStatsEnum]! += +(this.enchant!.stats[stat as keyof typeof ItemStatsEnum] || 0);\r\n      })\r\n    }\r\n  }\r\n\r\n  private addGemValuesToTotal(totals: ItemStats): void {\r\n    let applySocketBonus: boolean = true;\r\n    this.gemSockets.forEach(socket => {\r\n      if (socket.gem) {\r\n        const stats = socket.gem.stats;\r\n        Object.keys(stats).forEach(stat => {\r\n          if (!totals[stat as keyof typeof ItemStatsEnum]) {\r\n            totals[stat as keyof typeof ItemStatsEnum] = 0;\r\n          }\r\n          totals[stat as keyof typeof ItemStatsEnum]! += +(socket.gem?.stats[stat as keyof typeof ItemStatsEnum] || 0);\r\n        });\r\n        if (!matchingGemColors[socket.color as keyof typeof GemSocketColor].includes(socket.gem.color)) {\r\n          applySocketBonus = false;\r\n        }\r\n      } else {\r\n        applySocketBonus = false;\r\n      }\r\n    });\r\n    if (applySocketBonus && Object.keys(this.gemSocketBonus).length > 0) {\r\n      const socketBonusAttribute = Object.keys(this.gemSocketBonus)[0];\r\n      if (!totals[socketBonusAttribute as keyof typeof ItemStatsEnum]) {\r\n        totals[socketBonusAttribute as keyof typeof ItemStatsEnum] = 0;\r\n      }\r\n      totals[socketBonusAttribute as keyof typeof ItemStatsEnum]! += +(this.gemSocketBonus[socketBonusAttribute as keyof typeof ItemStatsEnum] || 0);\r\n    }\r\n  }\r\n}\r\n\r\nexport enum GemSocketColor {\r\n  yellow = 'yellow',\r\n  blue = 'blue',\r\n  red = 'red',\r\n  meta = 'meta'\r\n}\r\n\r\nexport enum GearSet {\r\n  none = 'None',\r\n  righteous = 'Righteous',\r\n  justicar = 'Justicar',\r\n  crystalforge = 'Crystalforge',\r\n  lightbringer = 'Lightbringer',\r\n  felsteel = 'Felsteel',\r\n  lieutenantCommandersRedoubt = 'Lieutenant Commander\\'s Redoubt',\r\n  fieldMarshalsAegis = 'Field Marshal\\'s Aegis',\r\n  doomplateBattlegear = 'Doomplate Battlegear',\r\n  grandMarshalsAegis = 'Grand Marshal\\'s Aegis',\r\n  grandMarshalsRedemption = 'Grand Marshal\\'s Redemption',\r\n  grandMarshalsVindication = 'Grand Marshal\\'s Vindication',\r\n  warlordsAegis = 'Warlord\\'s Aegis'\r\n}\r\n\r\nexport enum WeaponType {\r\n  oneHandedMace = 'oneHandedMace',\r\n  twoHandedMace = 'twoHandedMace',\r\n  oneHandedSword = 'oneHandedSword',\r\n  twoHandedSword = 'twoHandedSword',\r\n  oneHandedAxe = 'oneHandedAxe',\r\n  twoHandedAxe = 'twoHandedAxe',\r\n  polearm = 'polearm'\r\n}\r\n\r\nconst matchingGemColors = {\r\n  [GemSocketColor.blue]: [GemColor.blue, GemColor.purple, GemColor.green],\r\n  [GemSocketColor.red]: [GemColor.red, GemColor.purple, GemColor.orange],\r\n  [GemSocketColor.yellow]: [GemColor.yellow, GemColor.green, GemColor.orange],\r\n  [GemSocketColor.meta]: [GemColor.meta]\r\n}\r\n","import { JsonProperty, Serializable } from \"typescript-json-serializer\";\r\nimport { GemSocketColor } from \"./item\";\r\nimport { ItemStats } from \"./item-stats\";\r\n\r\n@Serializable()\r\nexport class Gem {\r\n  @JsonProperty() _id: string;\r\n  @JsonProperty() id: number;\r\n  @JsonProperty() name: string;\r\n  @JsonProperty() color: GemColor;\r\n  @JsonProperty() stats: ItemStats\r\n  @JsonProperty() quality: GemQuality\r\n\r\n  constructor(id: number, name: string, color: GemColor, quality: GemQuality, stats: ItemStats) {\r\n    this.id = id;\r\n    this._id = name;\r\n    this.name = name;\r\n    this.color = color;\r\n    this.stats = stats;\r\n    this.quality = quality;\r\n  }\r\n}\r\n\r\n\r\nexport enum GemColor {\r\n  red = 'red',\r\n  yellow = 'yellow',\r\n  green = 'green',\r\n  blue = 'blue',\r\n  purple = 'purple',\r\n  orange = 'orange',\r\n  meta = 'meta'\r\n}\r\n\r\nexport enum GemQuality {\r\n  common = 'common',\r\n  uncommon = 'uncommon',\r\n  rare = 'rare',\r\n  epic = 'epic'\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {})\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}